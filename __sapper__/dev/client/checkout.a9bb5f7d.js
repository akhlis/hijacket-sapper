import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, E as validate_store, F as carts, G as component_subscribe, o as onMount, a as validate_slots, g as globals, e as element, p as space, t as text, H as svg_element, c as claim_element, b as children, h as detach_dev, q as claim_space, f as claim_text, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, I as run_all, r as listen_dev, n as set_data_dev, J as prop_dev, u as noop, K as set_store_value, L as set_input_value, M as binding_callbacks, v as validate_each_argument, N as empty, w as destroy_each, O as HtmlTag, P as handle_promise, Q as bind, R as fly, x as create_component, z as claim_component, A as mount_component, B as transition_in, C as transition_out, D as destroy_component, T as group_outros, U as check_outros, V as add_flush_callback, W as validate_each_keys, X as action_destroyer, Y as is_function, Z as set_style, _ as update_keyed_each, $ as destroy_block, y as query_selector_all } from './client.90102212.js';

/* src/components/CheckoutProduct.svelte generated by Svelte v3.21.0 */

const { console: console_1 } = globals;
const file = "src/components/CheckoutProduct.svelte";

function create_fragment(ctx) {
	let div2;
	let figure;
	let img;
	let img_alt_value;
	let img_src_value;
	let t0;
	let h3;
	let t1_value = /*product*/ ctx[0].name + "";
	let t1;
	let t2;
	let t3_value = /*product*/ ctx[0].size + "";
	let t3;
	let t4;
	let span0;
	let t5;
	let div1;
	let div0;
	let button0;
	let t6;
	let t7;
	let span1;
	let t8_value = /*product*/ ctx[0].quantity + "";
	let t8;
	let t9;
	let button1;
	let t10;
	let t11;
	let span2;
	let t12;
	let t13;
	let span3;
	let t14;
	let button2;
	let svg;
	let path;
	let t15;
	let span4;
	let t16;
	let dispose;

	const block = {
		c: function create() {
			div2 = element("div");
			figure = element("figure");
			img = element("img");
			t0 = space();
			h3 = element("h3");
			t1 = text(t1_value);
			t2 = text(" ");
			t3 = text(t3_value);
			t4 = space();
			span0 = element("span");
			t5 = space();
			div1 = element("div");
			div0 = element("div");
			button0 = element("button");
			t6 = text("−");
			t7 = space();
			span1 = element("span");
			t8 = text(t8_value);
			t9 = space();
			button1 = element("button");
			t10 = text("+");
			t11 = space();
			span2 = element("span");
			t12 = text(/*price*/ ctx[1]);
			t13 = space();
			span3 = element("span");
			t14 = space();
			button2 = element("button");
			svg = svg_element("svg");
			path = svg_element("path");
			t15 = space();
			span4 = element("span");
			t16 = text("hapus");
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			figure = claim_element(div2_nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);

			img = claim_element(figure_nodes, "IMG", {
				alt: true,
				src: true,
				class: true,
				width: true,
				height: true
			});

			figure_nodes.forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			h3 = claim_element(div2_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t1 = claim_text(h3_nodes, t1_value);
			t2 = claim_text(h3_nodes, " ");
			t3 = claim_text(h3_nodes, t3_value);
			h3_nodes.forEach(detach_dev);
			t4 = claim_space(div2_nodes);
			span0 = claim_element(div2_nodes, "SPAN", { class: true });
			children(span0).forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			button0 = claim_element(div0_nodes, "BUTTON", { class: true, disabled: true });
			var button0_nodes = children(button0);
			t6 = claim_text(button0_nodes, "−");
			button0_nodes.forEach(detach_dev);
			t7 = claim_space(div0_nodes);
			span1 = claim_element(div0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t8 = claim_text(span1_nodes, t8_value);
			span1_nodes.forEach(detach_dev);
			t9 = claim_space(div0_nodes);
			button1 = claim_element(div0_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t10 = claim_text(button1_nodes, "+");
			button1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t11 = claim_space(div2_nodes);
			span2 = claim_element(div2_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t12 = claim_text(span2_nodes, /*price*/ ctx[1]);
			span2_nodes.forEach(detach_dev);
			t13 = claim_space(div2_nodes);
			span3 = claim_element(div2_nodes, "SPAN", { class: true, "x-text": true });
			children(span3).forEach(detach_dev);
			t14 = claim_space(div2_nodes);
			button2 = claim_element(div2_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);

			svg = claim_element(
				button2_nodes,
				"svg",
				{
					"aria-hidden": true,
					"data-prefix": true,
					"data-icon": true,
					viewBox: true,
					width: true,
					height: true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			path = claim_element(svg_nodes, "path", { fill: true, d: true }, 1);
			var path_nodes = children(path);
			path_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t15 = claim_space(button2_nodes);
			span4 = claim_element(button2_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			t16 = claim_text(span4_nodes, "hapus");
			span4_nodes.forEach(detach_dev);
			button2_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "alt", img_alt_value = /*product*/ ctx[0].name);
			if (img.src !== (img_src_value = "https://hijacket-api.netlify.app/carousel" + /*product*/ ctx[0].image)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "cart__item-thumb cart__item-image");
			attr_dev(img, "width", "60");
			attr_dev(img, "height", "60");
			add_location(img, file, 31, 8, 830);
			attr_dev(figure, "class", "col-span-1 row-span-2 pr-2 lg:pr-4");
			add_location(figure, file, 30, 4, 769);
			attr_dev(h3, "class", "checkout__item-name col-span-4 text-sm lg:text-lg font-medium text-gray-700 mb-0");
			add_location(h3, file, 33, 4, 1005);
			attr_dev(span0, "class", "checkout__price-total col-span-2 text-xs lg:text-base text-gray-700 text-right font-medium");
			add_location(span0, file, 34, 4, 1143);
			attr_dev(button0, "class", "checkout__decrease bg-gray-100 focus:outline-none py-4px px-2 btn--small");
			button0.disabled = /*disabled*/ ctx[2];
			add_location(button0, file, 38, 12, 1384);
			attr_dev(span1, "class", "checkout__qty focus:outline-none py-5px px-2");
			add_location(span1, file, 39, 12, 1537);
			attr_dev(button1, "class", "checkout__increase bg-gray-100 hover:bg-grey focus:outline-none py-4px px-2");
			add_location(button1, file, 40, 12, 1635);
			attr_dev(div0, "class", "inline-block text-xs text-gray-600");
			add_location(div0, file, 37, 8, 1322);
			attr_dev(div1, "class", "checkout__counter col-span-2");
			add_location(div1, file, 36, 4, 1270);
			attr_dev(span2, "class", "checkout__price col-span-2 text-xs lg:text-base text-primary");
			add_location(span2, file, 45, 4, 1833);
			attr_dev(span3, "class", "checkout__weight col-span-1 text-xs lg:text-base");
			attr_dev(span3, "x-text", "cart.weight + ' gram'");
			add_location(span3, file, 46, 4, 1928);
			attr_dev(path, "fill", "currentColor");
			attr_dev(path, "d", "M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z");
			add_location(path, file, 53, 12, 2443);
			attr_dev(svg, "aria-hidden", "true");
			attr_dev(svg, "data-prefix", "far");
			attr_dev(svg, "data-icon", "times");
			attr_dev(svg, "viewBox", "0 0 320 512");
			attr_dev(svg, "width", "16px");
			attr_dev(svg, "height", "16px");
			attr_dev(svg, "class", "times_svg__svg-inline--fa times_svg__fa-times times_svg__fa-w-10 times_svg__fa-2x cart__icon inline-block text-red-500 mr-2");
			add_location(svg, file, 50, 8, 2162);
			attr_dev(span4, "class", "text-xs text-gray-600 uppercase");
			add_location(span4, file, 57, 8, 2926);
			attr_dev(button2, "class", "checkout__remove col-span-1 flex items-center justify-end");
			add_location(button2, file, 48, 4, 2044);
			attr_dev(div2, "class", "checkout grid grid-cols-7 grid-rows-2 items-center py-3 px-4 first:pt-6 last:mb-4");
			add_location(div2, file, 29, 0, 668);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div2, anchor);
			append_dev(div2, figure);
			append_dev(figure, img);
			append_dev(div2, t0);
			append_dev(div2, h3);
			append_dev(h3, t1);
			append_dev(h3, t2);
			append_dev(h3, t3);
			append_dev(div2, t4);
			append_dev(div2, span0);
			append_dev(div2, t5);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, button0);
			append_dev(button0, t6);
			append_dev(div0, t7);
			append_dev(div0, span1);
			append_dev(span1, t8);
			append_dev(div0, t9);
			append_dev(div0, button1);
			append_dev(button1, t10);
			append_dev(div2, t11);
			append_dev(div2, span2);
			append_dev(span2, t12);
			append_dev(div2, t13);
			append_dev(div2, span3);
			append_dev(div2, t14);
			append_dev(div2, button2);
			append_dev(button2, svg);
			append_dev(svg, path);
			append_dev(button2, t15);
			append_dev(button2, span4);
			append_dev(span4, t16);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(button0, "click", /*decreaseBtn*/ ctx[4], false, false, false),
				listen_dev(button1, "click", /*increaseBtn*/ ctx[3], false, false, false),
				listen_dev(button2, "click", /*deleteProduct*/ ctx[5], false, false, false)
			];
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*product*/ 1 && img_alt_value !== (img_alt_value = /*product*/ ctx[0].name)) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (dirty & /*product*/ 1 && img.src !== (img_src_value = "https://hijacket-api.netlify.app/carousel" + /*product*/ ctx[0].image)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*product*/ 1 && t1_value !== (t1_value = /*product*/ ctx[0].name + "")) set_data_dev(t1, t1_value);
			if (dirty & /*product*/ 1 && t3_value !== (t3_value = /*product*/ ctx[0].size + "")) set_data_dev(t3, t3_value);

			if (dirty & /*disabled*/ 4) {
				prop_dev(button0, "disabled", /*disabled*/ ctx[2]);
			}

			if (dirty & /*product*/ 1 && t8_value !== (t8_value = /*product*/ ctx[0].quantity + "")) set_data_dev(t8, t8_value);
			if (dirty & /*price*/ 2) set_data_dev(t12, /*price*/ ctx[1]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $carts;
	validate_store(carts, "carts");
	component_subscribe($$self, carts, $$value => $$invalidate(6, $carts = $$value));
	let { product = {} } = $$props;
	let { price = 0 } = $$props;

	onMount(() => {
		carts.useLocalStorage();
	});

	let disabled = false;

	const increaseBtn = () => {
		$$invalidate(0, product.quantity++, product);
		carts.set($carts);
		$$invalidate(2, disabled = false);
	};

	const decreaseBtn = () => {
		$$invalidate(0, product.quantity--, product);
		carts.set($carts);
		if (product.quantity == 1) $$invalidate(2, disabled = true);
	};

	const deleteProduct = () => {
		set_store_value(carts, $carts = $carts.filter(item => product.sku != item.sku));
	};

	console.log("cart" + product);
	const writable_props = ["product", "price"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<CheckoutProduct> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("CheckoutProduct", $$slots, []);

	$$self.$set = $$props => {
		if ("product" in $$props) $$invalidate(0, product = $$props.product);
		if ("price" in $$props) $$invalidate(1, price = $$props.price);
	};

	$$self.$capture_state = () => ({
		carts,
		product,
		price,
		onMount,
		disabled,
		increaseBtn,
		decreaseBtn,
		deleteProduct,
		$carts
	});

	$$self.$inject_state = $$props => {
		if ("product" in $$props) $$invalidate(0, product = $$props.product);
		if ("price" in $$props) $$invalidate(1, price = $$props.price);
		if ("disabled" in $$props) $$invalidate(2, disabled = $$props.disabled);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [product, price, disabled, increaseBtn, decreaseBtn, deleteProduct];
}

class CheckoutProduct extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { product: 0, price: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "CheckoutProduct",
			options,
			id: create_fragment.name
		});
	}

	get product() {
		throw new Error("<CheckoutProduct>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set product(value) {
		throw new Error("<CheckoutProduct>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get price() {
		throw new Error("<CheckoutProduct>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set price(value) {
		throw new Error("<CheckoutProduct>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/AutoComplete.svelte generated by Svelte v3.21.0 */

const { Object: Object_1, console: console_1$1 } = globals;
const file$1 = "src/components/AutoComplete.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[64] = list[i];
	child_ctx[66] = i;
	return child_ctx;
}

// (547:28) 
function create_if_block_4(ctx) {
	let div;
	let t;

	const block = {
		c: function create() {
			div = element("div");
			t = text(/*noResultsText*/ ctx[1]);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t = claim_text(div_nodes, /*noResultsText*/ ctx[1]);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "autocomplete-list-item-no-results text-sm text-gray-500 bg-gray-100 leading-none py-2 px-4 svelte-1ssegu4");
			add_location(div, file$1, 547, 6, 17132);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*noResultsText*/ 2) set_data_dev(t, /*noResultsText*/ ctx[1]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(547:28) ",
		ctx
	});

	return block;
}

// (527:4) {#if filteredListItems && filteredListItems.length > 0}
function create_if_block(ctx) {
	let t;
	let if_block_anchor;
	let each_value = /*filteredListItems*/ ctx[12];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	let if_block = /*maxItemsToShowInList*/ ctx[0] > 0 && /*filteredListItems*/ ctx[12].length > /*maxItemsToShowInList*/ ctx[0] && create_if_block_1(ctx);

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			t = claim_space(nodes);
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, t, anchor);
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*highlightIndex, onListItemClick, filteredListItems, maxItemsToShowInList*/ 22529) {
				each_value = /*filteredListItems*/ ctx[12];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(t.parentNode, t);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (/*maxItemsToShowInList*/ ctx[0] > 0 && /*filteredListItems*/ ctx[12].length > /*maxItemsToShowInList*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t);
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(527:4) {#if filteredListItems && filteredListItems.length > 0}",
		ctx
	});

	return block;
}

// (529:8) {#if maxItemsToShowInList <= 0 || i < maxItemsToShowInList}
function create_if_block_2(ctx) {
	let div;
	let div_class_value;
	let dispose;

	function select_block_type_1(ctx, dirty) {
		if (/*listItem*/ ctx[64].highlighted) return create_if_block_3;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx);
	let if_block = current_block_type(ctx);

	function click_handler(...args) {
		return /*click_handler*/ ctx[62](/*listItem*/ ctx[64], ...args);
	}

	const block = {
		c: function create() {
			div = element("div");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "autocomplete-list-item text-sm text-gray-700 hover:text-primary hover:bg-orange-100 hover:border-l-2 hover:border-r-2 hover:border-solid hover:border-primary cursor-pointer leading-none py-2 px-4 " + (/*i*/ ctx[66] === /*highlightIndex*/ ctx[11]
			? "selected"
			: "") + " svelte-1ssegu4");

			add_location(div, file$1, 529, 10, 16237);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div, anchor);
			if_block.m(div, null);
			if (remount) dispose();
			dispose = listen_dev(div, "click", click_handler, false, false, false);
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div, null);
				}
			}

			if (dirty[0] & /*highlightIndex*/ 2048 && div_class_value !== (div_class_value = "autocomplete-list-item text-sm text-gray-700 hover:text-primary hover:bg-orange-100 hover:border-l-2 hover:border-r-2 hover:border-solid hover:border-primary cursor-pointer leading-none py-2 px-4 " + (/*i*/ ctx[66] === /*highlightIndex*/ ctx[11]
			? "selected"
			: "") + " svelte-1ssegu4")) {
				attr_dev(div, "class", div_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if_block.d();
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(529:8) {#if maxItemsToShowInList <= 0 || i < maxItemsToShowInList}",
		ctx
	});

	return block;
}

// (535:12) {:else}
function create_else_block(ctx) {
	let html_tag;
	let raw_value = /*listItem*/ ctx[64].label + "";

	const block = {
		c: function create() {
			this.h();
		},
		l: function claim(nodes) {
			this.h();
		},
		h: function hydrate() {
			html_tag = new HtmlTag(raw_value, null);
		},
		m: function mount(target, anchor) {
			html_tag.m(target, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*filteredListItems*/ 4096 && raw_value !== (raw_value = /*listItem*/ ctx[64].label + "")) html_tag.p(raw_value);
		},
		d: function destroy(detaching) {
			if (detaching) html_tag.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(535:12) {:else}",
		ctx
	});

	return block;
}

// (533:12) {#if listItem.highlighted}
function create_if_block_3(ctx) {
	let html_tag;
	let raw_value = /*listItem*/ ctx[64].highlighted.label + "";

	const block = {
		c: function create() {
			this.h();
		},
		l: function claim(nodes) {
			this.h();
		},
		h: function hydrate() {
			html_tag = new HtmlTag(raw_value, null);
		},
		m: function mount(target, anchor) {
			html_tag.m(target, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*filteredListItems*/ 4096 && raw_value !== (raw_value = /*listItem*/ ctx[64].highlighted.label + "")) html_tag.p(raw_value);
		},
		d: function destroy(detaching) {
			if (detaching) html_tag.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(533:12) {#if listItem.highlighted}",
		ctx
	});

	return block;
}

// (528:6) {#each filteredListItems as listItem, i}
function create_each_block(ctx) {
	let if_block_anchor;
	let if_block = (/*maxItemsToShowInList*/ ctx[0] <= 0 || /*i*/ ctx[66] < /*maxItemsToShowInList*/ ctx[0]) && create_if_block_2(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*maxItemsToShowInList*/ ctx[0] <= 0 || /*i*/ ctx[66] < /*maxItemsToShowInList*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_2(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(528:6) {#each filteredListItems as listItem, i}",
		ctx
	});

	return block;
}

// (542:6) {#if maxItemsToShowInList > 0 && filteredListItems.length > maxItemsToShowInList}
function create_if_block_1(ctx) {
	let div;
	let t0;
	let t1_value = /*filteredListItems*/ ctx[12].length - /*maxItemsToShowInList*/ ctx[0] + "";
	let t1;
	let t2;

	const block = {
		c: function create() {
			div = element("div");
			t0 = text("...");
			t1 = text(t1_value);
			t2 = text(" hasil tidak ditampilkan");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t0 = claim_text(div_nodes, "...");
			t1 = claim_text(div_nodes, t1_value);
			t2 = claim_text(div_nodes, " hasil tidak ditampilkan");
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "autocomplete-list-item-no-results text-sm text-gray-500 bg-gray-100 leading-none py-2 px-4 svelte-1ssegu4");
			add_location(div, file$1, 542, 8, 16873);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t0);
			append_dev(div, t1);
			append_dev(div, t2);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*filteredListItems, maxItemsToShowInList*/ 4097 && t1_value !== (t1_value = /*filteredListItems*/ ctx[12].length - /*maxItemsToShowInList*/ ctx[0] + "")) set_data_dev(t1, t1_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(542:6) {#if maxItemsToShowInList > 0 && filteredListItems.length > maxItemsToShowInList}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let div1;
	let input_1;
	let t;
	let div0;
	let div0_class_value;
	let div1_class_value;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (/*filteredListItems*/ ctx[12] && /*filteredListItems*/ ctx[12].length > 0) return create_if_block;
		if (/*noResultsText*/ ctx[1]) return create_if_block_4;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type && current_block_type(ctx);

	const block = {
		c: function create() {
			div1 = element("div");
			input_1 = element("input");
			t = space();
			div0 = element("div");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);

			input_1 = claim_element(div1_nodes, "INPUT", {
				type: true,
				class: true,
				placeholder: true,
				name: true,
				disabled: true,
				title: true
			});

			t = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (if_block) if_block.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(input_1, "type", "text");
			attr_dev(input_1, "class", "input autocomplete-input w-full text-sm relative bg-transparent border border-solid rounded-sm text-gray-700 hover:text-gray-500 focus:text-gray-600 focus:border-primary focus:outline-none transition-all duration-500 ease-in-out hover:placeholder-gray-300 z-50 py-3px px-3 svelte-1ssegu4");
			attr_dev(input_1, "placeholder", /*placeholder*/ ctx[2]);
			attr_dev(input_1, "name", /*name*/ ctx[4]);
			input_1.disabled = /*disabled*/ ctx[5];
			attr_dev(input_1, "title", /*title*/ ctx[6]);
			add_location(input_1, file$1, 509, 2, 15288);
			attr_dev(div0, "class", div0_class_value = "autocomplete-list " + (/*opened*/ ctx[10] ? "" : "hidden display-none") + " is-fullwidth w-full relative bg-white border border-solid border-gray-300 overflow-y-auto z-100 top-0 py-3" + " svelte-1ssegu4");
			add_location(div0, file$1, 523, 2, 15844);
			attr_dev(div1, "class", div1_class_value = "" + (/*className*/ ctx[3] + " autocomplete select is-fullwidth " + /*uniqueId*/ ctx[13] + " svelte-1ssegu4"));
			add_location(div1, file$1, 508, 0, 15215);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div1, anchor);
			append_dev(div1, input_1);
			/*input_1_binding*/ ctx[60](input_1);
			set_input_value(input_1, /*text*/ ctx[7]);
			append_dev(div1, t);
			append_dev(div1, div0);
			if (if_block) if_block.m(div0, null);
			/*div0_binding*/ ctx[63](div0);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(window, "click", /*onDocumentClick*/ ctx[15], false, false, false),
				listen_dev(input_1, "input", /*input_1_input_handler*/ ctx[61]),
				listen_dev(input_1, "input", /*onInput*/ ctx[18], false, false, false),
				listen_dev(input_1, "focus", /*onFocus*/ ctx[20], false, false, false),
				listen_dev(input_1, "keydown", /*onKeyDown*/ ctx[16], false, false, false),
				listen_dev(input_1, "click", /*onInputClick*/ ctx[19], false, false, false),
				listen_dev(input_1, "keypress", /*onKeyPress*/ ctx[17], false, false, false)
			];
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*placeholder*/ 4) {
				attr_dev(input_1, "placeholder", /*placeholder*/ ctx[2]);
			}

			if (dirty[0] & /*name*/ 16) {
				attr_dev(input_1, "name", /*name*/ ctx[4]);
			}

			if (dirty[0] & /*disabled*/ 32) {
				prop_dev(input_1, "disabled", /*disabled*/ ctx[5]);
			}

			if (dirty[0] & /*title*/ 64) {
				attr_dev(input_1, "title", /*title*/ ctx[6]);
			}

			if (dirty[0] & /*text*/ 128 && input_1.value !== /*text*/ ctx[7]) {
				set_input_value(input_1, /*text*/ ctx[7]);
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if (if_block) if_block.d(1);
				if_block = current_block_type && current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div0, null);
				}
			}

			if (dirty[0] & /*opened*/ 1024 && div0_class_value !== (div0_class_value = "autocomplete-list " + (/*opened*/ ctx[10] ? "" : "hidden display-none") + " is-fullwidth w-full relative bg-white border border-solid border-gray-300 overflow-y-auto z-100 top-0 py-3" + " svelte-1ssegu4")) {
				attr_dev(div0, "class", div0_class_value);
			}

			if (dirty[0] & /*className*/ 8 && div1_class_value !== (div1_class_value = "" + (/*className*/ ctx[3] + " autocomplete select is-fullwidth " + /*uniqueId*/ ctx[13] + " svelte-1ssegu4"))) {
				attr_dev(div1, "class", div1_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			/*input_1_binding*/ ctx[60](null);

			if (if_block) {
				if_block.d();
			}

			/*div0_binding*/ ctx[63](null);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function safeStringFunction(theFunction, argument) {
	if (typeof theFunction !== "function") {
		console.error("Not a function: " + theFunction + ", argument: " + argument);
	}

	let originalResult;

	try {
		originalResult = theFunction(argument);
	} catch(error) {
		console.warn("Error executing Autocomplete function on value: " + argument + " function: " + theFunction);
	}

	let result = originalResult;

	if (result === undefined || result === null) {
		result = "";
	}

	if (typeof result !== "string") {
		result = result.toString();
	}

	return result;
}

function instance$1($$self, $$props, $$invalidate) {
	let { items } = $$props;
	let { labelFieldName = undefined } = $$props;
	let { keywordsFieldName = labelFieldName } = $$props;
	let { valueFieldName = undefined } = $$props;

	let { labelFunction = function (item) {
		if (item === undefined || item === null) {
			return "";
		}

		return labelFieldName ? item[labelFieldName] : item;
	} } = $$props;

	let { keywordsFunction = function (item) {
		if (item === undefined || item === null) {
			return "";
		}

		return keywordsFieldName ? item[keywordsFieldName] : item;
	} } = $$props;

	let { valueFunction = function (item) {
		if (item === undefined || item === null) {
			return item;
		}

		return valueFieldName ? item[valueFieldName] : item;
	} } = $$props;

	let { keywordsCleanFunction = function (keywords) {
		return keywords;
	} } = $$props;

	let { textCleanFunction = function (userEnteredText) {
		return userEnteredText;
	} } = $$props;

	let { beforeChange = function (oldSelectedItem, newSelectedItem) {
		return true;
	} } = $$props;

	let { onChange = function (newSelectedItem) {
		
	} } = $$props;

	let { selectFirstIfEmpty = false } = $$props;
	let { minCharactersToSearch = 1 } = $$props;
	let { maxItemsToShowInList = 0 } = $$props;
	let { noResultsText = "No results found" } = $$props;
	const uniqueId = "sautocomplete-" + Math.floor(Math.random() * 1000);

	function safeLabelFunction(item) {
		// console.log("labelFunction: " + labelFunction);
		// console.log("safeLabelFunction, item: " + item);
		return safeStringFunction(labelFunction, item);
	}

	function safeKeywordsFunction(item) {
		// console.log("safeKeywordsFunction");
		const keywords = safeStringFunction(keywordsFunction, item);

		let result = safeStringFunction(keywordsCleanFunction, keywords);
		result = result.toLowerCase().trim();

		if (debug) {
			console.log("Extracted keywords: '" + result + "' from item: " + JSON.stringify(item));
		}

		return result;
	}

	let { placeholder = undefined } = $$props;
	let { className = undefined } = $$props;
	let { name = undefined } = $$props;
	let { disabled = false } = $$props;
	let { title = undefined } = $$props;
	let { debug = false } = $$props;
	let { selectedItem = undefined } = $$props;
	let { value = undefined } = $$props;
	let text;
	let filteredTextLength = 0;

	function onSelectedItemChanged() {
		$$invalidate(22, value = valueFunction(selectedItem));
		$$invalidate(7, text = safeLabelFunction(selectedItem));
		onChange(selectedItem);
	}

	// HTML elements
	let input;

	let list;

	// UI state
	let opened = false;

	let highlightIndex = -1;

	// view model
	let filteredListItems;

	let listItems = [];

	function prepareListItems() {
		let tStart;

		if (debug) {
			tStart = performance.now();
			console.log("prepare items to search");
			console.log("items: " + JSON.stringify(items));
		}

		const length = items ? items.length : 0;
		listItems = new Array(length);

		if (length > 0) {
			items.forEach((item, i) => {
				listItems[i] = getListItem(item);
			});
		}

		if (debug) {
			const tEnd = performance.now();
			console.log(listItems.length + " items to search prepared in " + (tEnd - tStart) + " milliseconds");
		}
	}

	function getListItem(item) {
		return {
			// keywords representation of the item
			keywords: safeKeywordsFunction(item),
			// item label
			label: safeLabelFunction(item),
			// store reference to the origial item
			item
		};
	}

	function prepareUserEnteredText(userEnteredText) {
		if (userEnteredText === undefined || userEnteredText === null) {
			return "";
		}

		const textFiltered = userEnteredText.replace(/[&/\\#,+()$~%.'":*?<>{}]/g, " ").trim();
		filteredTextLength = textFiltered.length;

		if (minCharactersToSearch > 1) {
			if (filteredTextLength < minCharactersToSearch) {
				return "";
			}
		}

		const cleanUserEnteredText = textCleanFunction(textFiltered);
		const textFilteredLowerCase = cleanUserEnteredText.toLowerCase().trim();

		if (debug) {
			console.log("Change user entered text '" + userEnteredText + "' into '" + textFilteredLowerCase + "'");
		}

		return textFilteredLowerCase;
	}

	function search() {
		let tStart;

		if (debug) {
			tStart = performance.now();
			console.log("Searching user entered text: '" + text + "'");
		}

		const textFiltered = prepareUserEnteredText(text);

		if (textFiltered === "") {
			$$invalidate(12, filteredListItems = listItems);
			closeIfMinCharsToSearchReached();

			if (debug) {
				console.log("User entered text is empty set the list of items to all items");
			}

			return;
		}

		const searchWords = textFiltered.split(" ");

		let tempfilteredListItems = listItems.filter(listItem => {
			const itemKeywords = listItem.keywords;
			let matches = 0;

			searchWords.forEach(searchWord => {
				if (itemKeywords.includes(searchWord)) {
					matches++;
				}
			});

			return matches >= searchWords.length;
		});

		const hlfilter = highlightFilter(textFiltered, ["label"]);
		const filteredListItemsHighlighted = tempfilteredListItems.map(hlfilter);
		$$invalidate(12, filteredListItems = filteredListItemsHighlighted);
		closeIfMinCharsToSearchReached();

		if (debug) {
			const tEnd = performance.now();
			console.log("Search took " + (tEnd - tStart) + " milliseconds, found " + filteredListItems.length + " items");
		}
	}

	// $: text, search();
	function selectListItem(listItem) {
		if (debug) {
			console.log("selectListItem");
		}

		const newSelectedItem = listItem.item;

		if (beforeChange(selectedItem, newSelectedItem)) {
			$$invalidate(21, selectedItem = newSelectedItem);
		}
	}

	function selectItem() {
		if (debug) {
			console.log("selectItem");
		}

		const listItem = filteredListItems[highlightIndex];
		selectListItem(listItem);
		close();
	}

	function up() {
		if (debug) {
			console.log("up");
		}

		open();
		if (highlightIndex > 0) $$invalidate(11, highlightIndex--, highlightIndex);
		highlight();
	}

	function down() {
		if (debug) {
			console.log("down");
		}

		open();
		if (highlightIndex < filteredListItems.length - 1) $$invalidate(11, highlightIndex++, highlightIndex);
		highlight();
	}

	function highlight() {
		if (debug) {
			console.log("highlight");
		}

		const query = ".selected";

		if (debug) {
			console.log("Seaching DOM element: " + query + " in " + list);
		}

		const el = list.querySelector(query);

		if (el) {
			if (typeof el.scrollIntoViewIfNeeded === "function") {
				if (debug) {
					console.log("Scrolling selected item into view");
				}

				el.scrollIntoViewIfNeeded();
			} else {
				if (debug) {
					console.warn("Could not scroll selected item into view, scrollIntoViewIfNeeded not supported");
				}
			}
		} else {
			if (debug) {
				console.warn("Selected item not found to scroll into view");
			}
		}
	}

	function onListItemClick(listItem) {
		if (debug) {
			console.log("onListItemClick");
		}

		selectListItem(listItem);
		close();
	}

	function onDocumentClick(e) {
		if (debug) {
			console.log("onDocumentClick: " + JSON.stringify(e.target));
		}

		if (e.target.closest("." + uniqueId)) {
			if (debug) {
				console.log("onDocumentClick inside");
			}

			// resetListToAllItemsAndOpen();
			highlight();
		} else {
			if (debug) {
				console.log("onDocumentClick outside");
			}

			close();
		}
	}

	function onKeyDown(e) {
		if (debug) {
			console.log("onKeyDown");
		}

		let key = e.key;
		if (key === "Tab" && e.shiftKey) key = "ShiftTab";

		const fnmap = {
			Tab: opened ? down.bind(this) : null,
			ShiftTab: opened ? up.bind(this) : null,
			ArrowDown: down.bind(this),
			ArrowUp: up.bind(this),
			Escape: onEsc.bind(this)
		};

		const fn = fnmap[key];

		if (typeof fn === "function") {
			e.preventDefault();
			fn(e);
		}
	}

	function onKeyPress(e) {
		if (debug) {
			console.log("onKeyPress");
		}

		if (e.key === "Enter") {
			e.preventDefault();
			selectItem();
		}
	}

	function onInput(e) {
		if (debug) {
			console.log("onInput");
		}

		$$invalidate(7, text = e.target.value);
		search();
		$$invalidate(11, highlightIndex = 0);
		open();
	}

	function onInputClick() {
		if (debug) {
			console.log("onInputClick");
		}

		resetListToAllItemsAndOpen();
	}

	function onEsc(e) {
		if (debug) {
			console.log("onEsc");
		}

		//if (text) return clear();
		e.stopPropagation();

		if (opened) {
			input.focus();
			close();
		}
	}

	function onFocus() {
		if (debug) {
			console.log("onFocus");
		}

		resetListToAllItemsAndOpen();
	}

	function resetListToAllItemsAndOpen() {
		if (debug) {
			console.log("resetListToAllItemsAndOpen");
		}

		$$invalidate(12, filteredListItems = listItems);
		open();

		// find selected item
		if (selectedItem) {
			if (debug) {
				console.log("Searching currently selected item: " + JSON.stringify(selectedItem));
			}

			for (let i = 0; i < listItems.length; i++) {
				const listItem = listItems[i];

				if (debug) {
					console.log("Item " + i + ": " + JSON.stringify(listItem));
				}

				if (selectedItem == listItem.item) {
					$$invalidate(11, highlightIndex = i);

					if (debug) {
						console.log("Found selected item: " + i + ": " + JSON.stringify(listItem));
					}

					highlight();
					break;
				}
			}
		}
	}

	function open() {
		if (debug) {
			console.log("open");
		}

		// check if the search text has more than the min chars required
		if (isMinCharsToSearchReached()) {
			return;
		}

		$$invalidate(10, opened = true);
	}

	function close() {
		if (debug) {
			console.log("close");
		}

		$$invalidate(10, opened = false);

		if (!text && selectFirstIfEmpty) {
			highlightFilter = 0;
			selectItem();
		}
	}

	function isMinCharsToSearchReached() {
		return minCharactersToSearch > 1 && filteredTextLength < minCharactersToSearch;
	}

	function closeIfMinCharsToSearchReached() {
		if (isMinCharsToSearchReached()) {
			close();
		}
	}

	function clear() {
		if (debug) {
			console.log("clear");
		}

		$$invalidate(7, text = "");
		setTimeout(() => input.focus());
	}

	function onBlur() {
		if (debug) {
			console.log("onBlur");
		}

		close();
	}

	// 'item number one'.replace(/(it)(.*)(nu)(.*)(one)/ig, '<b>$1</b>$2 <b>$3</b>$4 <b>$5</b>')
	function highlightFilter(q, fields) {
		const qs = "(" + q.trim().replace(/\s/g, ")(.*)(") + ")";
		const reg = new RegExp(qs, "ig");
		let n = 1;
		const len = qs.split(")(").length + 1;
		let repl = "";
		for (; n < len; n++) repl += n % 2 ? `<b class="text-primary">$${n}</b>` : `$${n}`;

		return i => {
			const newI = Object.assign({ highlighted: {} }, i);

			if (fields) {
				fields.forEach(f => {
					if (!newI[f]) return;
					newI.highlighted[f] = newI[f].replace(reg, repl);
				});
			}

			return newI;
		};
	}

	const writable_props = [
		"items",
		"labelFieldName",
		"keywordsFieldName",
		"valueFieldName",
		"labelFunction",
		"keywordsFunction",
		"valueFunction",
		"keywordsCleanFunction",
		"textCleanFunction",
		"beforeChange",
		"onChange",
		"selectFirstIfEmpty",
		"minCharactersToSearch",
		"maxItemsToShowInList",
		"noResultsText",
		"placeholder",
		"className",
		"name",
		"disabled",
		"title",
		"debug",
		"selectedItem",
		"value"
	];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$1.warn(`<AutoComplete> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("AutoComplete", $$slots, []);

	function input_1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(8, input = $$value);
		});
	}

	function input_1_input_handler() {
		text = this.value;
		$$invalidate(7, text);
	}

	const click_handler = listItem => onListItemClick(listItem);

	function div0_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(9, list = $$value);
		});
	}

	$$self.$set = $$props => {
		if ("items" in $$props) $$invalidate(23, items = $$props.items);
		if ("labelFieldName" in $$props) $$invalidate(24, labelFieldName = $$props.labelFieldName);
		if ("keywordsFieldName" in $$props) $$invalidate(25, keywordsFieldName = $$props.keywordsFieldName);
		if ("valueFieldName" in $$props) $$invalidate(26, valueFieldName = $$props.valueFieldName);
		if ("labelFunction" in $$props) $$invalidate(27, labelFunction = $$props.labelFunction);
		if ("keywordsFunction" in $$props) $$invalidate(28, keywordsFunction = $$props.keywordsFunction);
		if ("valueFunction" in $$props) $$invalidate(29, valueFunction = $$props.valueFunction);
		if ("keywordsCleanFunction" in $$props) $$invalidate(30, keywordsCleanFunction = $$props.keywordsCleanFunction);
		if ("textCleanFunction" in $$props) $$invalidate(31, textCleanFunction = $$props.textCleanFunction);
		if ("beforeChange" in $$props) $$invalidate(32, beforeChange = $$props.beforeChange);
		if ("onChange" in $$props) $$invalidate(33, onChange = $$props.onChange);
		if ("selectFirstIfEmpty" in $$props) $$invalidate(34, selectFirstIfEmpty = $$props.selectFirstIfEmpty);
		if ("minCharactersToSearch" in $$props) $$invalidate(35, minCharactersToSearch = $$props.minCharactersToSearch);
		if ("maxItemsToShowInList" in $$props) $$invalidate(0, maxItemsToShowInList = $$props.maxItemsToShowInList);
		if ("noResultsText" in $$props) $$invalidate(1, noResultsText = $$props.noResultsText);
		if ("placeholder" in $$props) $$invalidate(2, placeholder = $$props.placeholder);
		if ("className" in $$props) $$invalidate(3, className = $$props.className);
		if ("name" in $$props) $$invalidate(4, name = $$props.name);
		if ("disabled" in $$props) $$invalidate(5, disabled = $$props.disabled);
		if ("title" in $$props) $$invalidate(6, title = $$props.title);
		if ("debug" in $$props) $$invalidate(36, debug = $$props.debug);
		if ("selectedItem" in $$props) $$invalidate(21, selectedItem = $$props.selectedItem);
		if ("value" in $$props) $$invalidate(22, value = $$props.value);
	};

	$$self.$capture_state = () => ({
		items,
		labelFieldName,
		keywordsFieldName,
		valueFieldName,
		labelFunction,
		keywordsFunction,
		valueFunction,
		keywordsCleanFunction,
		textCleanFunction,
		beforeChange,
		onChange,
		selectFirstIfEmpty,
		minCharactersToSearch,
		maxItemsToShowInList,
		noResultsText,
		uniqueId,
		safeStringFunction,
		safeLabelFunction,
		safeKeywordsFunction,
		placeholder,
		className,
		name,
		disabled,
		title,
		debug,
		selectedItem,
		value,
		text,
		filteredTextLength,
		onSelectedItemChanged,
		input,
		list,
		opened,
		highlightIndex,
		filteredListItems,
		listItems,
		prepareListItems,
		getListItem,
		prepareUserEnteredText,
		search,
		selectListItem,
		selectItem,
		up,
		down,
		highlight,
		onListItemClick,
		onDocumentClick,
		onKeyDown,
		onKeyPress,
		onInput,
		onInputClick,
		onEsc,
		onFocus,
		resetListToAllItemsAndOpen,
		open,
		close,
		isMinCharsToSearchReached,
		closeIfMinCharsToSearchReached,
		clear,
		onBlur,
		highlightFilter
	});

	$$self.$inject_state = $$props => {
		if ("items" in $$props) $$invalidate(23, items = $$props.items);
		if ("labelFieldName" in $$props) $$invalidate(24, labelFieldName = $$props.labelFieldName);
		if ("keywordsFieldName" in $$props) $$invalidate(25, keywordsFieldName = $$props.keywordsFieldName);
		if ("valueFieldName" in $$props) $$invalidate(26, valueFieldName = $$props.valueFieldName);
		if ("labelFunction" in $$props) $$invalidate(27, labelFunction = $$props.labelFunction);
		if ("keywordsFunction" in $$props) $$invalidate(28, keywordsFunction = $$props.keywordsFunction);
		if ("valueFunction" in $$props) $$invalidate(29, valueFunction = $$props.valueFunction);
		if ("keywordsCleanFunction" in $$props) $$invalidate(30, keywordsCleanFunction = $$props.keywordsCleanFunction);
		if ("textCleanFunction" in $$props) $$invalidate(31, textCleanFunction = $$props.textCleanFunction);
		if ("beforeChange" in $$props) $$invalidate(32, beforeChange = $$props.beforeChange);
		if ("onChange" in $$props) $$invalidate(33, onChange = $$props.onChange);
		if ("selectFirstIfEmpty" in $$props) $$invalidate(34, selectFirstIfEmpty = $$props.selectFirstIfEmpty);
		if ("minCharactersToSearch" in $$props) $$invalidate(35, minCharactersToSearch = $$props.minCharactersToSearch);
		if ("maxItemsToShowInList" in $$props) $$invalidate(0, maxItemsToShowInList = $$props.maxItemsToShowInList);
		if ("noResultsText" in $$props) $$invalidate(1, noResultsText = $$props.noResultsText);
		if ("placeholder" in $$props) $$invalidate(2, placeholder = $$props.placeholder);
		if ("className" in $$props) $$invalidate(3, className = $$props.className);
		if ("name" in $$props) $$invalidate(4, name = $$props.name);
		if ("disabled" in $$props) $$invalidate(5, disabled = $$props.disabled);
		if ("title" in $$props) $$invalidate(6, title = $$props.title);
		if ("debug" in $$props) $$invalidate(36, debug = $$props.debug);
		if ("selectedItem" in $$props) $$invalidate(21, selectedItem = $$props.selectedItem);
		if ("value" in $$props) $$invalidate(22, value = $$props.value);
		if ("text" in $$props) $$invalidate(7, text = $$props.text);
		if ("filteredTextLength" in $$props) filteredTextLength = $$props.filteredTextLength;
		if ("input" in $$props) $$invalidate(8, input = $$props.input);
		if ("list" in $$props) $$invalidate(9, list = $$props.list);
		if ("opened" in $$props) $$invalidate(10, opened = $$props.opened);
		if ("highlightIndex" in $$props) $$invalidate(11, highlightIndex = $$props.highlightIndex);
		if ("filteredListItems" in $$props) $$invalidate(12, filteredListItems = $$props.filteredListItems);
		if ("listItems" in $$props) listItems = $$props.listItems;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*selectedItem*/ 2097152) {
			 (onSelectedItemChanged());
		}

		if ($$self.$$.dirty[0] & /*selectedItem*/ 2097152) {
			 console.log(selectedItem);
		}

		if ($$self.$$.dirty[0] & /*items*/ 8388608) {
			 (prepareListItems());
		}
	};

	return [
		maxItemsToShowInList,
		noResultsText,
		placeholder,
		className,
		name,
		disabled,
		title,
		text,
		input,
		list,
		opened,
		highlightIndex,
		filteredListItems,
		uniqueId,
		onListItemClick,
		onDocumentClick,
		onKeyDown,
		onKeyPress,
		onInput,
		onInputClick,
		onFocus,
		selectedItem,
		value,
		items,
		labelFieldName,
		keywordsFieldName,
		valueFieldName,
		labelFunction,
		keywordsFunction,
		valueFunction,
		keywordsCleanFunction,
		textCleanFunction,
		beforeChange,
		onChange,
		selectFirstIfEmpty,
		minCharactersToSearch,
		debug,
		filteredTextLength,
		listItems,
		highlightFilter,
		safeLabelFunction,
		safeKeywordsFunction,
		onSelectedItemChanged,
		prepareListItems,
		getListItem,
		prepareUserEnteredText,
		search,
		selectListItem,
		selectItem,
		up,
		down,
		highlight,
		onEsc,
		resetListToAllItemsAndOpen,
		open,
		close,
		isMinCharsToSearchReached,
		closeIfMinCharsToSearchReached,
		clear,
		onBlur,
		input_1_binding,
		input_1_input_handler,
		click_handler,
		div0_binding
	];
}

class AutoComplete extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance$1,
			create_fragment$1,
			safe_not_equal,
			{
				items: 23,
				labelFieldName: 24,
				keywordsFieldName: 25,
				valueFieldName: 26,
				labelFunction: 27,
				keywordsFunction: 28,
				valueFunction: 29,
				keywordsCleanFunction: 30,
				textCleanFunction: 31,
				beforeChange: 32,
				onChange: 33,
				selectFirstIfEmpty: 34,
				minCharactersToSearch: 35,
				maxItemsToShowInList: 0,
				noResultsText: 1,
				placeholder: 2,
				className: 3,
				name: 4,
				disabled: 5,
				title: 6,
				debug: 36,
				selectedItem: 21,
				value: 22
			},
			[-1, -1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "AutoComplete",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*items*/ ctx[23] === undefined && !("items" in props)) {
			console_1$1.warn("<AutoComplete> was created without expected prop 'items'");
		}
	}

	get items() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set items(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get labelFieldName() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set labelFieldName(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get keywordsFieldName() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set keywordsFieldName(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get valueFieldName() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set valueFieldName(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get labelFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set labelFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get keywordsFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set keywordsFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get valueFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set valueFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get keywordsCleanFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set keywordsCleanFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get textCleanFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set textCleanFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get beforeChange() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set beforeChange(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onChange() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onChange(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectFirstIfEmpty() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectFirstIfEmpty(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get minCharactersToSearch() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set minCharactersToSearch(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get maxItemsToShowInList() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set maxItemsToShowInList(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get noResultsText() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set noResultsText(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get placeholder() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set placeholder(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get className() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set className(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get name() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get debug() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set debug(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectedItem() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectedItem(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function fetchAvatar(node, url) {
	if (node instanceof HTMLImageElement) {
		 updateAvatarSrc(node, url);
	}
	
	// Here we don't need update, destroy 
	return {
		update: noOp,
		destroy: noOp,
	}
}

function noOp(_args) {
}

function updateAvatarSrc(img, userUrl) {
	const update = async () => {
		try {
			// fetch user profile
		  const response = await self.fetch(userUrl);
		  if (response.ok) {
  		  const { avatar_url }  = await response.json();
			  img.src = avatar_url;
				
		  } else {
			  // don't care ...
		  }
			
		} catch (error) {
			// don't care ...
		}
	};
	
	update();
}

// https://css-tricks.com/lodge/svg/09-svg-data-uris/
function genericDataUrl() {
  return `
    data:image/svg+xml;utf8, 
      <svg 
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" 
        version="1.1" 
        id="Layer_1" 
        x="0px" 
        y="0px" 
        viewBox="0 0 100 100" 
        enable-background="new 0 0 100 100" 
        xml:space="preserve"
        height="100px" 
        width="100px">
        <g>
          <path d="M28.1,36.6c4.6,1.9,12.2,1.6,20.9,1.1c8.9-0.4,19-0.9,28.9,0.9c6.3,1.2,11.9,3.1,16.8,6c-1.5-12.2-7.9-23.7-18.6-31.3 c-4.9-0.2-9.9,0.3-14.8,1.4C47.8,17.9,36.2,25.6,28.1,36.6z"/>
          <path d="M70.3,9.8C57.5,3.4,42.8,3.6,30.5,9.5c-3,6-8.4,19.6-5.3,24.9c8.6-11.7,20.9-19.8,35.2-23.1C63.7,10.5,67,10,70.3,9.8z"/>
          <path d="M16.5,51.3c0.6-1.7,1.2-3.4,2-5.1c-3.8-3.4-7.5-7-11-10.8c-2.1,6.1-2.8,12.5-2.3,18.7C9.6,51.1,13.4,50.2,16.5,51.3z"/>
          <path d="M9,31.6c3.5,3.9,7.2,7.6,11.1,11.1c0.8-1.6,1.7-3.1,2.6-4.6c0.1-0.2,0.3-0.4,0.4-0.6c-2.9-3.3-3.1-9.2-0.6-17.6c0.8-2.7,1.8-5.3,2.7-7.4c-5.2,3.4-9.8,8-13.3,13.7C10.8,27.9,9.8,29.7,9,31.6z"/>
          <path d="M15.4,54.7c-2.6-1-6.1,0.7-9.7,3.4c1.2,6.6,3.9,13,8,18.5C13,69.3,13.5,61.8,15.4,54.7z"/>
          <path d="M39.8,57.6C54.3,66.7,70,73,86.5,76.4c0.6-0.8,1.1-1.6,1.7-2.5c4.8-7.7,7-16.3,6.8-24.8c-13.8-9.3-31.3-8.4-45.8-7.7c-9.5,0.5-17.8,0.9-23.2-1.7c-0.1,0.1-0.2,0.3-0.3,0.4c-1,1.7-2,3.4-2.9,5.1C28.2,49.7,33.8,53.9,39.8,57.6z"/>
          <path d="M26.2,88.2c3.3,2,6.7,3.6,10.2,4.7c-3.5-6.2-6.3-12.6-8.8-18.5c-3.1-7.2-5.8-13.5-9-17.2c-1.9,8-2,16.4-0.3,24.7C20.6,84.2,23.2,86.3,26.2,88.2z"/>
          <path d="M30.9,73c2.9,6.8,6.1,14.4,10.5,21.2c15.6,3,32-2.3,42.6-14.6C67.7,76,52.2,69.6,37.9,60.7C32,57,26.5,53,21.3,48.6c-0.6,1.5-1.2,3-1.7,4.6C24.1,57.1,27.3,64.5,30.9,73z"/>
       </g>
      </svg>`;
}

/* src/components/Checkout.svelte generated by Svelte v3.21.0 */

const { Error: Error_1, console: console_1$2 } = globals;
const file$2 = "src/components/Checkout.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[14] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[19] = list[i].login;
	child_ctx[20] = list[i].url;
	return child_ctx;
}

// (105:0) {:catch error}
function create_catch_block_1(ctx) {
	let p;
	let t_value = /*error*/ ctx[18].message + "";
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { style: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(p, "color", "red");
			add_location(p, file$2, 105, 1, 2542);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*promise*/ 4 && t_value !== (t_value = /*error*/ ctx[18].message + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_catch_block_1.name,
		type: "catch",
		source: "(105:0) {:catch error}",
		ctx
	});

	return block;
}

// (103:0) {:then couriers}
function create_then_block_1(ctx) {
	let h3;
	let t_value = /*couriers*/ ctx[23].title + "";
	let t;

	const block = {
		c: function create() {
			h3 = element("h3");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			h3 = claim_element(nodes, "H3", {});
			var h3_nodes = children(h3);
			t = claim_text(h3_nodes, t_value);
			h3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h3, file$2, 103, 4, 2498);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h3, anchor);
			append_dev(h3, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*promise*/ 4 && t_value !== (t_value = /*couriers*/ ctx[23].title + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_then_block_1.name,
		type: "then",
		source: "(103:0) {:then couriers}",
		ctx
	});

	return block;
}

// (101:16)    <p>...waiting</p>  {:then couriers}
function create_pending_block_1(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("...waiting");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t = claim_text(p_nodes, "...waiting");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$2, 101, 1, 2457);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_pending_block_1.name,
		type: "pending",
		source: "(101:16)    <p>...waiting</p>  {:then couriers}",
		ctx
	});

	return block;
}

// (122:0) {:catch error}
function create_catch_block(ctx) {
	let p;
	let t_value = /*error*/ ctx[18].message + "";
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { style: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(p, "color", "red");
			add_location(p, file$2, 122, 1, 2955);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*promise*/ 4 && t_value !== (t_value = /*error*/ ctx[18].message + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_catch_block.name,
		type: "catch",
		source: "(122:0) {:catch error}",
		ctx
	});

	return block;
}

// (117:0) {:then users}
function create_then_block(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let each_value_1 = /*users*/ ctx[17];
	validate_each_argument(each_value_1);
	const get_key = ctx => /*login*/ ctx[19];
	validate_each_keys(ctx, each_value_1, get_each_context_1, get_key);

	for (let i = 0; i < each_value_1.length; i += 1) {
		let child_ctx = get_each_context_1(ctx, each_value_1, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block_1(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*genericAvatar, promise*/ 68) {
				const each_value_1 = /*users*/ ctx[17];
				validate_each_argument(each_value_1);
				validate_each_keys(ctx, each_value_1, get_each_context_1, get_key);
				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value_1, each_1_lookup, each_1_anchor.parentNode, destroy_block, create_each_block_1, each_1_anchor, get_each_context_1);
			}
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_then_block.name,
		type: "then",
		source: "(117:0) {:then users}",
		ctx
	});

	return block;
}

// (118:2) {#each users as {login, url}
function create_each_block_1(key_1, ctx) {
	let h3;
	let t0_value = /*login*/ ctx[19] + "";
	let t0;
	let t1;
	let img;
	let img_src_value;
	let img_alt_value;
	let fetchAvatar_action;
	let dispose;

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			h3 = element("h3");
			t0 = text(t0_value);
			t1 = space();
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			h3 = claim_element(nodes, "H3", {});
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, t0_value);
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			img = claim_element(nodes, "IMG", { height: true, src: true, alt: true });
			this.h();
		},
		h: function hydrate() {
			add_location(h3, file$2, 118, 4, 2824);
			attr_dev(img, "height", "100");
			if (img.src !== (img_src_value = /*genericAvatar*/ ctx[6])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*login*/ ctx[19]);
			add_location(img, file$2, 119, 4, 2846);
			this.first = h3;
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, h3, anchor);
			append_dev(h3, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, img, anchor);
			if (remount) dispose();
			dispose = action_destroyer(fetchAvatar_action = fetchAvatar.call(null, img, /*url*/ ctx[20]));
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*promise*/ 4 && t0_value !== (t0_value = /*login*/ ctx[19] + "")) set_data_dev(t0, t0_value);

			if (dirty & /*promise*/ 4 && img_alt_value !== (img_alt_value = /*login*/ ctx[19])) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (fetchAvatar_action && is_function(fetchAvatar_action.update) && dirty & /*promise*/ 4) fetchAvatar_action.update.call(null, /*url*/ ctx[20]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h3);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(img);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(118:2) {#each users as {login, url}",
		ctx
	});

	return block;
}

// (115:16)    <p>...waiting</p>  {:then users}
function create_pending_block(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("...waiting");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t = claim_text(p_nodes, "...waiting");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$2, 115, 1, 2744);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_pending_block.name,
		type: "pending",
		source: "(115:16)    <p>...waiting</p>  {:then users}",
		ctx
	});

	return block;
}

// (150:16) {#each $carts as product}
function create_each_block$1(ctx) {
	let current;

	const item = new CheckoutProduct({
			props: {
				product: /*product*/ ctx[14],
				price: localPrice(/*product*/ ctx[14].price * /*product*/ ctx[14].quantity)
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(item.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(item.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(item, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const item_changes = {};
			if (dirty & /*$carts*/ 32) item_changes.product = /*product*/ ctx[14];
			if (dirty & /*$carts*/ 32) item_changes.price = localPrice(/*product*/ ctx[14].price * /*product*/ ctx[14].quantity);
			item.$set(item_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(item.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(item.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(item, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(150:16) {#each $carts as product}",
		ctx
	});

	return block;
}

// (212:16) {#if selectedDistrict !== undefined}
function create_if_block$1(ctx) {
	let p;
	let t0_value = /*selectedDistrict*/ ctx[3].id + "";
	let t0;
	let t1;
	let t2_value = /*selectedDistrict*/ ctx[3].name + "";
	let t2;

	const block = {
		c: function create() {
			p = element("p");
			t0 = text(t0_value);
			t1 = space();
			t2 = text(t2_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, t0_value);
			t1 = claim_space(p_nodes);
			t2 = claim_text(p_nodes, t2_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$2, 212, 16, 8960);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			append_dev(p, t1);
			append_dev(p, t2);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*selectedDistrict*/ 8 && t0_value !== (t0_value = /*selectedDistrict*/ ctx[3].id + "")) set_data_dev(t0, t0_value);
			if (dirty & /*selectedDistrict*/ 8 && t2_value !== (t2_value = /*selectedDistrict*/ ctx[3].name + "")) set_data_dev(t2, t2_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(212:16) {#if selectedDistrict !== undefined}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let button0;
	let t0;
	let t1;
	let promise_1;
	let t2;
	let button1;
	let t3;
	let t4;
	let promise_2;
	let t5;
	let section;
	let div35;
	let div34;
	let div15;
	let div0;
	let p0;
	let t6;
	let t7;
	let button2;
	let svg0;
	let path0;
	let t8;
	let span0;
	let t9;
	let t10;
	let div1;
	let t11;
	let t12;
	let div2;
	let t13;
	let div11;
	let form;
	let div10;
	let header0;
	let h30;
	let t14;
	let t15;
	let div5;
	let div3;
	let label0;
	let t16;
	let span1;
	let t17;
	let t18;
	let input0;
	let t19;
	let div4;
	let label1;
	let t20;
	let t21;
	let input1;
	let t22;
	let div8;
	let div6;
	let label2;
	let t23;
	let span2;
	let t24;
	let t25;
	let input2;
	let t26;
	let div7;
	let label3;
	let t27;
	let t28;
	let updating_selectedItem;
	let t29;
	let div9;
	let label4;
	let t30;
	let span3;
	let t31;
	let t32;
	let textarea;
	let t33;
	let t34;
	let div12;
	let t35;
	let div14;
	let div13;
	let svg1;
	let path1;
	let t36;
	let span4;
	let t37;
	let t38;
	let div33;
	let div31;
	let header1;
	let h31;
	let t39;
	let t40;
	let div18;
	let div16;
	let p1;
	let t41;
	let span5;
	let t42_value = localPrice(/*totalPrice*/ ctx[4]) + "";
	let t42;
	let t43;
	let div17;
	let span6;
	let t44;
	let div21;
	let div19;
	let p2;
	let t45;
	let t46;
	let div20;
	let span7;
	let t47;
	let div24;
	let div22;
	let p3;
	let t48;
	let t49;
	let div23;
	let span8;
	let t50;
	let t51;
	let div27;
	let div25;
	let span9;
	let input3;
	let t52;
	let div26;
	let button3;
	let t53;
	let t54;
	let div30;
	let div28;
	let h4;
	let t55;
	let t56;
	let div29;
	let span10;
	let t57;
	let div32;
	let button4;
	let span11;
	let t58;
	let current;
	let dispose;

	let info = {
		ctx,
		current: null,
		token: null,
		pending: create_pending_block_1,
		then: create_then_block_1,
		catch: create_catch_block_1,
		value: 23,
		error: 18
	};

	handle_promise(promise_1 = /*promise*/ ctx[2], info);

	let info_1 = {
		ctx,
		current: null,
		token: null,
		pending: create_pending_block,
		then: create_then_block,
		catch: create_catch_block,
		value: 17,
		error: 18
	};

	handle_promise(promise_2 = /*promise*/ ctx[2], info_1);
	let each_value = /*$carts*/ ctx[5];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	function autocomplete_selectedItem_binding(value) {
		/*autocomplete_selectedItem_binding*/ ctx[13].call(null, value);
	}

	let autocomplete_props = {
		items: /*districts*/ ctx[0],
		placeholder: "Masukkan nama kecamatan",
		labelFieldName: "name",
		minCharactersToSearch: "3",
		maxItemsToShowInList: "10"
	};

	if (/*selectedDistrict*/ ctx[3] !== void 0) {
		autocomplete_props.selectedItem = /*selectedDistrict*/ ctx[3];
	}

	const autocomplete = new AutoComplete({
			props: autocomplete_props,
			$$inline: true
		});

	binding_callbacks.push(() => bind(autocomplete, "selectedItem", autocomplete_selectedItem_binding));
	let if_block = /*selectedDistrict*/ ctx[3] !== undefined && create_if_block$1(ctx);

	const block = {
		c: function create() {
			button0 = element("button");
			t0 = text("get cost");
			t1 = space();
			info.block.c();
			t2 = space();
			button1 = element("button");
			t3 = text("Load Users");
			t4 = space();
			info_1.block.c();
			t5 = space();
			section = element("section");
			div35 = element("div");
			div34 = element("div");
			div15 = element("div");
			div0 = element("div");
			p0 = element("p");
			t6 = text("Checkout Produk");
			t7 = space();
			button2 = element("button");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t8 = space();
			span0 = element("span");
			t9 = text("Clear Cart");
			t10 = space();
			div1 = element("div");
			t11 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t12 = space();
			div2 = element("div");
			t13 = space();
			div11 = element("div");
			form = element("form");
			div10 = element("div");
			header0 = element("header");
			h30 = element("h3");
			t14 = text("Detail Alamat Pengiriman");
			t15 = space();
			div5 = element("div");
			div3 = element("div");
			label0 = element("label");
			t16 = text("Nama Lengkap");
			span1 = element("span");
			t17 = text("*");
			t18 = space();
			input0 = element("input");
			t19 = space();
			div4 = element("div");
			label1 = element("label");
			t20 = text("Email (Opsional)");
			t21 = space();
			input1 = element("input");
			t22 = space();
			div8 = element("div");
			div6 = element("div");
			label2 = element("label");
			t23 = text("No. HP/WA");
			span2 = element("span");
			t24 = text("*");
			t25 = space();
			input2 = element("input");
			t26 = space();
			div7 = element("div");
			label3 = element("label");
			t27 = text("Kota atau Kecamatan");
			t28 = space();
			create_component(autocomplete.$$.fragment);
			t29 = space();
			div9 = element("div");
			label4 = element("label");
			t30 = text("Alamat Lengkap");
			span3 = element("span");
			t31 = text("*");
			t32 = space();
			textarea = element("textarea");
			t33 = space();
			if (if_block) if_block.c();
			t34 = space();
			div12 = element("div");
			t35 = space();
			div14 = element("div");
			div13 = element("div");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t36 = space();
			span4 = element("span");
			t37 = text("Silahkan pilih dan klik kurir pengiriman!");
			t38 = space();
			div33 = element("div");
			div31 = element("div");
			header1 = element("header");
			h31 = element("h3");
			t39 = text("Ringkasan Pesanan");
			t40 = space();
			div18 = element("div");
			div16 = element("div");
			p1 = element("p");
			t41 = text("Subtotal ");
			span5 = element("span");
			t42 = text(t42_value);
			t43 = space();
			div17 = element("div");
			span6 = element("span");
			t44 = space();
			div21 = element("div");
			div19 = element("div");
			p2 = element("p");
			t45 = text("Berat Total");
			t46 = space();
			div20 = element("div");
			span7 = element("span");
			t47 = space();
			div24 = element("div");
			div22 = element("div");
			p3 = element("p");
			t48 = text("Biaya Pengiriman");
			t49 = space();
			div23 = element("div");
			span8 = element("span");
			t50 = text("Pilih kurir dulu");
			t51 = space();
			div27 = element("div");
			div25 = element("div");
			span9 = element("span");
			input3 = element("input");
			t52 = space();
			div26 = element("div");
			button3 = element("button");
			t53 = text("GUNAKAN");
			t54 = space();
			div30 = element("div");
			div28 = element("div");
			h4 = element("h4");
			t55 = text("Total Bayar");
			t56 = space();
			div29 = element("div");
			span10 = element("span");
			t57 = space();
			div32 = element("div");
			button4 = element("button");
			span11 = element("span");
			t58 = text("Pesan Sekarang");
			this.h();
		},
		l: function claim(nodes) {
			button0 = claim_element(nodes, "BUTTON", {});
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "get cost");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			info.block.l(nodes);
			t2 = claim_space(nodes);
			button1 = claim_element(nodes, "BUTTON", { disabled: true });
			var button1_nodes = children(button1);
			t3 = claim_text(button1_nodes, "Load Users");
			button1_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			info_1.block.l(nodes);
			t5 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div35 = claim_element(section_nodes, "DIV", { class: true });
			var div35_nodes = children(div35);
			div34 = claim_element(div35_nodes, "DIV", { class: true });
			var div34_nodes = children(div34);
			div15 = claim_element(div34_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div0 = claim_element(div15_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t6 = claim_text(p0_nodes, "Checkout Produk");
			p0_nodes.forEach(detach_dev);
			t7 = claim_space(div0_nodes);
			button2 = claim_element(div0_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);

			svg0 = claim_element(
				button2_nodes,
				"svg",
				{
					"aria-hidden": true,
					"data-prefix": true,
					"data-icon": true,
					xmlns: true,
					viewBox: true,
					class: true,
					width: true,
					height: true
				},
				1
			);

			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { fill: true, d: true }, 1);
			var path0_nodes = children(path0);
			path0_nodes.forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			t8 = claim_space(button2_nodes);
			span0 = claim_element(button2_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t9 = claim_text(span0_nodes, "Clear Cart");
			span0_nodes.forEach(detach_dev);
			button2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t10 = claim_space(div15_nodes);
			div1 = claim_element(div15_nodes, "DIV", { class: true });
			children(div1).forEach(detach_dev);
			t11 = claim_space(div15_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div15_nodes);
			}

			t12 = claim_space(div15_nodes);
			div2 = claim_element(div15_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			t13 = claim_space(div15_nodes);
			div11 = claim_element(div15_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			form = claim_element(div11_nodes, "FORM", { action: true });
			var form_nodes = children(form);
			div10 = claim_element(form_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			header0 = claim_element(div10_nodes, "HEADER", { class: true });
			var header0_nodes = children(header0);
			h30 = claim_element(header0_nodes, "H3", { class: true });
			var h30_nodes = children(h30);
			t14 = claim_text(h30_nodes, "Detail Alamat Pengiriman");
			h30_nodes.forEach(detach_dev);
			header0_nodes.forEach(detach_dev);
			t15 = claim_space(div10_nodes);
			div5 = claim_element(div10_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label0 = claim_element(div3_nodes, "LABEL", { class: true, for: true });
			var label0_nodes = children(label0);
			t16 = claim_text(label0_nodes, "Nama Lengkap");
			span1 = claim_element(label0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t17 = claim_text(span1_nodes, "*");
			span1_nodes.forEach(detach_dev);
			label0_nodes.forEach(detach_dev);
			t18 = claim_space(div3_nodes);

			input0 = claim_element(div3_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			div3_nodes.forEach(detach_dev);
			t19 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			label1 = claim_element(div4_nodes, "LABEL", { class: true, for: true });
			var label1_nodes = children(label1);
			t20 = claim_text(label1_nodes, "Email (Opsional)");
			label1_nodes.forEach(detach_dev);
			t21 = claim_space(div4_nodes);

			input1 = claim_element(div4_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t22 = claim_space(div10_nodes);
			div8 = claim_element(div10_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label2 = claim_element(div6_nodes, "LABEL", { class: true, for: true });
			var label2_nodes = children(label2);
			t23 = claim_text(label2_nodes, "No. HP/WA");
			span2 = claim_element(label2_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t24 = claim_text(span2_nodes, "*");
			span2_nodes.forEach(detach_dev);
			label2_nodes.forEach(detach_dev);
			t25 = claim_space(div6_nodes);

			input2 = claim_element(div6_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			div6_nodes.forEach(detach_dev);
			t26 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label3 = claim_element(div7_nodes, "LABEL", { class: true, for: true });
			var label3_nodes = children(label3);
			t27 = claim_text(label3_nodes, "Kota atau Kecamatan");
			label3_nodes.forEach(detach_dev);
			t28 = claim_space(div7_nodes);
			claim_component(autocomplete.$$.fragment, div7_nodes);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t29 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			label4 = claim_element(div9_nodes, "LABEL", { class: true, for: true });
			var label4_nodes = children(label4);
			t30 = claim_text(label4_nodes, "Alamat Lengkap");
			span3 = claim_element(label4_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			t31 = claim_text(span3_nodes, "*");
			span3_nodes.forEach(detach_dev);
			label4_nodes.forEach(detach_dev);
			t32 = claim_space(div9_nodes);

			textarea = claim_element(div9_nodes, "TEXTAREA", {
				class: true,
				rows: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			children(textarea).forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t33 = claim_space(div15_nodes);
			if (if_block) if_block.l(div15_nodes);
			t34 = claim_space(div15_nodes);
			div12 = claim_element(div15_nodes, "DIV", { class: true });
			children(div12).forEach(detach_dev);
			t35 = claim_space(div15_nodes);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);

			svg1 = claim_element(
				div13_nodes,
				"svg",
				{
					"aria-hidden": true,
					"data-prefix": true,
					"data-icon": true,
					viewBox: true,
					width: true,
					height: true,
					class: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { fill: true, d: true }, 1);
			var path1_nodes = children(path1);
			path1_nodes.forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			t36 = claim_space(div13_nodes);
			span4 = claim_element(div13_nodes, "SPAN", {});
			var span4_nodes = children(span4);
			t37 = claim_text(span4_nodes, "Silahkan pilih dan klik kurir pengiriman!");
			span4_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t38 = claim_space(div34_nodes);
			div33 = claim_element(div34_nodes, "DIV", { class: true });
			var div33_nodes = children(div33);
			div31 = claim_element(div33_nodes, "DIV", { class: true });
			var div31_nodes = children(div31);
			header1 = claim_element(div31_nodes, "HEADER", { class: true });
			var header1_nodes = children(header1);
			h31 = claim_element(header1_nodes, "H3", { class: true });
			var h31_nodes = children(h31);
			t39 = claim_text(h31_nodes, "Ringkasan Pesanan");
			h31_nodes.forEach(detach_dev);
			header1_nodes.forEach(detach_dev);
			t40 = claim_space(div31_nodes);
			div18 = claim_element(div31_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			div16 = claim_element(div18_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			p1 = claim_element(div16_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t41 = claim_text(p1_nodes, "Subtotal ");
			span5 = claim_element(p1_nodes, "SPAN", {});
			var span5_nodes = children(span5);
			t42 = claim_text(span5_nodes, t42_value);
			span5_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			t43 = claim_space(div18_nodes);
			div17 = claim_element(div18_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			span6 = claim_element(div17_nodes, "SPAN", { class: true });
			children(span6).forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			t44 = claim_space(div31_nodes);
			div21 = claim_element(div31_nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			div19 = claim_element(div21_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			p2 = claim_element(div19_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t45 = claim_text(p2_nodes, "Berat Total");
			p2_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			t46 = claim_space(div21_nodes);
			div20 = claim_element(div21_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			span7 = claim_element(div20_nodes, "SPAN", { class: true });
			children(span7).forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			t47 = claim_space(div31_nodes);
			div24 = claim_element(div31_nodes, "DIV", { class: true });
			var div24_nodes = children(div24);
			div22 = claim_element(div24_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			p3 = claim_element(div22_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t48 = claim_text(p3_nodes, "Biaya Pengiriman");
			p3_nodes.forEach(detach_dev);
			div22_nodes.forEach(detach_dev);
			t49 = claim_space(div24_nodes);
			div23 = claim_element(div24_nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			span8 = claim_element(div23_nodes, "SPAN", { class: true });
			var span8_nodes = children(span8);
			t50 = claim_text(span8_nodes, "Pilih kurir dulu");
			span8_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			div24_nodes.forEach(detach_dev);
			t51 = claim_space(div31_nodes);
			div27 = claim_element(div31_nodes, "DIV", { class: true });
			var div27_nodes = children(div27);
			div25 = claim_element(div27_nodes, "DIV", { class: true });
			var div25_nodes = children(div25);
			span9 = claim_element(div25_nodes, "SPAN", { class: true });
			var span9_nodes = children(span9);

			input3 = claim_element(span9_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				placeholder: true,
				value: true,
				height: true
			});

			span9_nodes.forEach(detach_dev);
			div25_nodes.forEach(detach_dev);
			t52 = claim_space(div27_nodes);
			div26 = claim_element(div27_nodes, "DIV", { class: true });
			var div26_nodes = children(div26);
			button3 = claim_element(div26_nodes, "BUTTON", { type: true, class: true });
			var button3_nodes = children(button3);
			t53 = claim_text(button3_nodes, "GUNAKAN");
			button3_nodes.forEach(detach_dev);
			div26_nodes.forEach(detach_dev);
			div27_nodes.forEach(detach_dev);
			t54 = claim_space(div31_nodes);
			div30 = claim_element(div31_nodes, "DIV", { class: true });
			var div30_nodes = children(div30);
			div28 = claim_element(div30_nodes, "DIV", { class: true });
			var div28_nodes = children(div28);
			h4 = claim_element(div28_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t55 = claim_text(h4_nodes, "Total Bayar");
			h4_nodes.forEach(detach_dev);
			div28_nodes.forEach(detach_dev);
			t56 = claim_space(div30_nodes);
			div29 = claim_element(div30_nodes, "DIV", { class: true });
			var div29_nodes = children(div29);
			span10 = claim_element(div29_nodes, "SPAN", { class: true });
			children(span10).forEach(detach_dev);
			div29_nodes.forEach(detach_dev);
			div30_nodes.forEach(detach_dev);
			div31_nodes.forEach(detach_dev);
			t57 = claim_space(div33_nodes);
			div32 = claim_element(div33_nodes, "DIV", { class: true });
			var div32_nodes = children(div32);

			button4 = claim_element(div32_nodes, "BUTTON", {
				type: true,
				class: true,
				formtarget: true
			});

			var button4_nodes = children(button4);
			span11 = claim_element(button4_nodes, "SPAN", {});
			var span11_nodes = children(span11);
			t58 = claim_text(span11_nodes, "Pesan Sekarang");
			span11_nodes.forEach(detach_dev);
			button4_nodes.forEach(detach_dev);
			div32_nodes.forEach(detach_dev);
			div33_nodes.forEach(detach_dev);
			div34_nodes.forEach(detach_dev);
			div35_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(button0, file$2, 96, 0, 2382);
			button1.disabled = /*disabled*/ ctx[1];
			add_location(button1, file$2, 110, 0, 2650);
			attr_dev(p0, "class", "mb-0");
			add_location(p0, file$2, 133, 20, 3365);
			attr_dev(path0, "fill", "currentColor");
			attr_dev(path0, "d", "M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z");
			add_location(path0, file$2, 141, 28, 4034);
			attr_dev(svg0, "aria-hidden", "true");
			attr_dev(svg0, "data-prefix", "far");
			attr_dev(svg0, "data-icon", "trash-alt");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "viewBox", "0 0 448 512");
			attr_dev(svg0, "class", "trash-alt_svg__svg-inline--fa trash-alt_svg__fa-trash-alt trash-alt_svg__fa-w-14 trash-alt_svg__fa-2x text-red-500 mx-auto");
			attr_dev(svg0, "width", "14px");
			attr_dev(svg0, "height", "14px");
			add_location(svg0, file$2, 137, 24, 3638);
			attr_dev(span0, "class", "ml-3");
			add_location(span0, file$2, 145, 24, 4694);
			attr_dev(button2, "class", "cart__item-btn flex items-center text-xs uppercase text-gray-500 hover:text-primary focus:outline-none");
			add_location(button2, file$2, 134, 20, 3422);
			attr_dev(div0, "class", "flex justify-between items-center text-gray-700 py-2 px-3");
			add_location(div0, file$2, 132, 16, 3272);
			attr_dev(div1, "class", "bg-grey pt-4");
			add_location(div1, file$2, 147, 16, 4781);
			attr_dev(div2, "class", "bg-grey pt-8");
			add_location(div2, file$2, 153, 16, 5000);
			attr_dev(h30, "class", "text-gray-700");
			add_location(h30, file$2, 158, 32, 5280);
			attr_dev(header0, "class", "checkout__form-header");
			add_location(header0, file$2, 157, 28, 5208);
			attr_dev(span1, "class", "text-red-500");
			add_location(span1, file$2, 162, 99, 5623);
			attr_dev(label0, "class", "block text-gray-700 mb-2");
			attr_dev(label0, "for", "name");
			add_location(label0, file$2, 162, 36, 5560);
			attr_dev(input0, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input0, "type", "text");
			attr_dev(input0, "id", "name");
			attr_dev(input0, "name", "Name");
			input0.value = "";
			attr_dev(input0, "placeholder", "Nama lengkap anda");
			input0.required = "";
			add_location(input0, file$2, 164, 36, 5749);
			attr_dev(div3, "class", "form-address__item col-span-1 mb-2");
			add_location(div3, file$2, 161, 32, 5474);
			attr_dev(label1, "class", "block text-gray-700 mb-2");
			attr_dev(label1, "for", "name");
			add_location(label1, file$2, 170, 36, 6211);
			attr_dev(input1, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input1, "type", "text");
			attr_dev(input1, "id", "email");
			attr_dev(input1, "name", "email");
			input1.value = "";
			attr_dev(input1, "placeholder", "Email anda");
			input1.required = "";
			add_location(input1, file$2, 171, 36, 6324);
			attr_dev(div4, "class", "form-address__item col-span-1 mb-2");
			add_location(div4, file$2, 169, 32, 6125);
			attr_dev(div5, "class", "grid grid-cols-2 gap-6");
			add_location(div5, file$2, 160, 28, 5404);
			attr_dev(span2, "class", "text-red-500");
			add_location(span2, file$2, 180, 96, 6934);
			attr_dev(label2, "class", "block text-gray-700 mb-2");
			attr_dev(label2, "for", "name");
			add_location(label2, file$2, 180, 36, 6874);
			attr_dev(input2, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input2, "type", "text");
			attr_dev(input2, "id", "phone");
			attr_dev(input2, "name", "HP");
			input2.value = "";
			attr_dev(input2, "placeholder", "No HP/Whatsapp anda");
			input2.required = "";
			add_location(input2, file$2, 182, 36, 7060);
			attr_dev(div6, "class", "form-address__item mb-2");
			add_location(div6, file$2, 179, 32, 6799);
			attr_dev(label3, "class", "block text-gray-700 mb-2");
			attr_dev(label3, "for", "name");
			add_location(label3, file$2, 188, 36, 7532);
			attr_dev(div7, "class", "form-address__item relative col-span-1 mb-2");
			add_location(div7, file$2, 187, 32, 7437);
			attr_dev(div8, "class", "grid grid-cols-2 gap-6");
			add_location(div8, file$2, 178, 28, 6729);
			attr_dev(span3, "class", "text-red-500");
			add_location(span3, file$2, 200, 97, 8320);
			attr_dev(label4, "class", "block text-gray-700 mb-2");
			attr_dev(label4, "for", "name");
			add_location(label4, file$2, 200, 32, 8255);
			attr_dev(textarea, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(textarea, "rows", "3");
			attr_dev(textarea, "id", "alamat");
			attr_dev(textarea, "name", "Alamat");
			textarea.value = "";
			attr_dev(textarea, "placeholder", "Masukkan alamat lengkap + kode POS anda");
			textarea.required = "";
			add_location(textarea, file$2, 202, 32, 8438);
			attr_dev(div9, "class", "form-address__item mb-2");
			add_location(div9, file$2, 199, 28, 8184);
			attr_dev(div10, "class", "checkout__form form-address");
			add_location(div10, file$2, 156, 24, 5137);
			attr_dev(form, "action", "");
			add_location(form, file$2, 155, 20, 5095);
			attr_dev(div11, "class", "py-4 px-4");
			add_location(div11, file$2, 154, 16, 5050);
			attr_dev(div12, "class", "bg-grey pt-8");
			add_location(div12, file$2, 215, 16, 9055);
			attr_dev(path1, "fill", "currentColor");
			attr_dev(path1, "d", "M280 192c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h240zm352 192h-24V275.9c0-16.8-6.8-33.3-18.8-45.2l-83.9-83.9c-11.8-12-28.3-18.8-45.2-18.8H416V78.6c0-25.7-22.2-46.6-49.4-46.6H113.4C86.2 32 64 52.9 64 78.6V96H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h240c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H96V78.6c0-8.1 7.8-14.6 17.4-14.6h253.2c9.6 0 17.4 6.5 17.4 14.6V384H207.6C193 364.7 170 352 144 352c-18.1 0-34.6 6.2-48 16.4V288H64v144c0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16h195.2c-1.1 5.2-1.6 10.5-1.6 16 0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16H632c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zm-488 96c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm272-320h44.1c8.4 0 16.7 3.4 22.6 9.4l83.9 83.9c.8.8 1.1 1.9 1.8 2.8H416V160zm80 320c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-96h-16.4C545 364.7 522 352 496 352s-49 12.7-63.6 32H416v-96h160v96zM256 248v-16c0-4.4-3.6-8-8-8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h240c4.4 0 8-3.6 8-8z");
			add_location(path1, file$2, 222, 28, 9661);
			attr_dev(svg1, "aria-hidden", "true");
			attr_dev(svg1, "data-prefix", "fal");
			attr_dev(svg1, "data-icon", "shipping-fast");
			attr_dev(svg1, "viewBox", "0 0 640 512");
			attr_dev(svg1, "width", "36");
			attr_dev(svg1, "height", "36");
			attr_dev(svg1, "class", "shipping-fast_svg__svg-inline--fa shipping-fast_svg__fa-shipping-fast shipping-fast_svg__fa-w-20 shipping-fast_svg__fa-5x w-6 h-6 inline-block fill-current mr-2");
			add_location(svg1, file$2, 219, 24, 9291);
			add_location(span4, file$2, 226, 24, 10839);
			attr_dev(div13, "class", "flex items-center text-gray-600 border-b border-solid border-grey py-3 mb-4");
			add_location(div13, file$2, 218, 20, 9176);
			attr_dev(div14, "class", "form-address__item py-4 px-4 mb-4");
			add_location(div14, file$2, 217, 16, 9107);
			attr_dev(div15, "class", "col-span-8 bg-white");
			add_location(div15, file$2, 131, 12, 3221);
			attr_dev(h31, "class", "checkout-form__title text-gray-700");
			add_location(h31, file$2, 235, 24, 11163);
			attr_dev(header1, "class", "checkout-form__header");
			add_location(header1, file$2, 234, 20, 11099);
			add_location(span5, file$2, 240, 53, 11567);
			attr_dev(p1, "class", "mb-0");
			add_location(p1, file$2, 240, 28, 11542);
			attr_dev(div16, "class", "checkout-form--left");
			add_location(div16, file$2, 239, 24, 11479);
			attr_dev(span6, "class", "checkout-form__subtotal");
			add_location(span6, file$2, 243, 28, 11730);
			attr_dev(div17, "class", "checkout-form--right");
			add_location(div17, file$2, 242, 24, 11666);
			attr_dev(div18, "class", "checkout-form__box checkout-form__footer flex justify-between items-center text-sm text-gray-700 border-t border-dashed pt-2 mb-3");
			add_location(div18, file$2, 237, 20, 11285);
			attr_dev(p2, "class", "mb-0");
			add_location(p2, file$2, 248, 28, 12039);
			attr_dev(div19, "class", "checkout-form--left");
			add_location(div19, file$2, 247, 24, 11976);
			attr_dev(span7, "class", "checkout-form__weight-total");
			add_location(span7, file$2, 251, 28, 12192);
			attr_dev(div20, "class", "checkout-form--right");
			add_location(div20, file$2, 250, 24, 12128);
			attr_dev(div21, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 mb-3");
			add_location(div21, file$2, 246, 20, 11857);
			attr_dev(p3, "class", "mb-0");
			add_location(p3, file$2, 256, 28, 12505);
			attr_dev(div22, "class", "checkout-form--left");
			add_location(div22, file$2, 255, 24, 12442);
			attr_dev(span8, "class", "checkout-form__cost-courier");
			add_location(span8, file$2, 259, 28, 12663);
			attr_dev(div23, "class", "checkout-form--right");
			add_location(div23, file$2, 258, 24, 12599);
			attr_dev(div24, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 mb-3");
			add_location(div24, file$2, 254, 20, 12323);
			attr_dev(input3, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input3, "type", "text");
			attr_dev(input3, "id", "automation-voucher-input");
			attr_dev(input3, "placeholder", "Masukkan Kode Voucher");
			input3.value = "";
			attr_dev(input3, "height", "100%");
			add_location(input3, file$2, 264, 53, 13018);
			attr_dev(span9, "class", "next-input");
			add_location(span9, file$2, 264, 28, 12993);
			attr_dev(div25, "class", "flex-grow w-3/5 mr-4");
			add_location(div25, file$2, 263, 24, 12929);
			attr_dev(button3, "type", "button");
			attr_dev(button3, "class", "text-white leading-none flex bg-teal-500 hover:bg-teal-400 items-center focus:outline-none rounded py-2 px-4");
			add_location(button3, file$2, 270, 28, 13440);
			attr_dev(div26, "class", "flex-none");
			add_location(div26, file$2, 269, 24, 13387);
			attr_dev(div27, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 mb-3");
			add_location(div27, file$2, 262, 20, 12810);
			attr_dev(h4, "class", "mb-0");
			add_location(h4, file$2, 277, 28, 13929);
			attr_dev(div28, "class", "checkout-form--left");
			add_location(div28, file$2, 276, 24, 13866);
			attr_dev(span10, "class", "text-primary");
			add_location(span10, file$2, 280, 28, 14084);
			attr_dev(div29, "class", "checkout-form--right");
			add_location(div29, file$2, 279, 24, 14020);
			attr_dev(div30, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 font-medium mb-3");
			add_location(div30, file$2, 274, 20, 13710);
			attr_dev(div31, "class", "checkout-form__info");
			add_location(div31, file$2, 233, 16, 11044);
			add_location(span11, file$2, 288, 24, 14567);
			attr_dev(button4, "type", "submit");
			attr_dev(button4, "class", "checkout-form__btn w-full text-white text-center leading-none uppercase flex bg-green-500 hover:bg-green-400 items-center focus:outline-none rounded py-2 px-4");
			attr_dev(button4, "formtarget", "_blank");
			add_location(button4, file$2, 285, 20, 14282);
			attr_dev(div32, "class", "checkout-form__button pt-8");
			add_location(div32, file$2, 284, 16, 14220);
			attr_dev(div33, "class", "col-span-4 bg-white py-4 px-4");
			add_location(div33, file$2, 232, 12, 10983);
			attr_dev(div34, "class", "grid grid-cols-12 gap-8");
			add_location(div34, file$2, 130, 8, 3170);
			attr_dev(div35, "class", "checkout-box container w-full max-w-screen-xl mx-auto px-3 lg:px-12 pb-4");
			add_location(div35, file$2, 129, 4, 3074);
			attr_dev(section, "class", "block__checkout-order bg-grey pt-8");
			add_location(section, file$2, 128, 0, 3016);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, button0, anchor);
			append_dev(button0, t0);
			insert_dev(target, t1, anchor);
			info.block.m(target, info.anchor = anchor);
			info.mount = () => t2.parentNode;
			info.anchor = t2;
			insert_dev(target, t2, anchor);
			insert_dev(target, button1, anchor);
			append_dev(button1, t3);
			insert_dev(target, t4, anchor);
			info_1.block.m(target, info_1.anchor = anchor);
			info_1.mount = () => t5.parentNode;
			info_1.anchor = t5;
			insert_dev(target, t5, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, div35);
			append_dev(div35, div34);
			append_dev(div34, div15);
			append_dev(div15, div0);
			append_dev(div0, p0);
			append_dev(p0, t6);
			append_dev(div0, t7);
			append_dev(div0, button2);
			append_dev(button2, svg0);
			append_dev(svg0, path0);
			append_dev(button2, t8);
			append_dev(button2, span0);
			append_dev(span0, t9);
			append_dev(div15, t10);
			append_dev(div15, div1);
			append_dev(div15, t11);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div15, null);
			}

			append_dev(div15, t12);
			append_dev(div15, div2);
			append_dev(div15, t13);
			append_dev(div15, div11);
			append_dev(div11, form);
			append_dev(form, div10);
			append_dev(div10, header0);
			append_dev(header0, h30);
			append_dev(h30, t14);
			append_dev(div10, t15);
			append_dev(div10, div5);
			append_dev(div5, div3);
			append_dev(div3, label0);
			append_dev(label0, t16);
			append_dev(label0, span1);
			append_dev(span1, t17);
			append_dev(div3, t18);
			append_dev(div3, input0);
			append_dev(div5, t19);
			append_dev(div5, div4);
			append_dev(div4, label1);
			append_dev(label1, t20);
			append_dev(div4, t21);
			append_dev(div4, input1);
			append_dev(div10, t22);
			append_dev(div10, div8);
			append_dev(div8, div6);
			append_dev(div6, label2);
			append_dev(label2, t23);
			append_dev(label2, span2);
			append_dev(span2, t24);
			append_dev(div6, t25);
			append_dev(div6, input2);
			append_dev(div8, t26);
			append_dev(div8, div7);
			append_dev(div7, label3);
			append_dev(label3, t27);
			append_dev(div7, t28);
			mount_component(autocomplete, div7, null);
			append_dev(div10, t29);
			append_dev(div10, div9);
			append_dev(div9, label4);
			append_dev(label4, t30);
			append_dev(label4, span3);
			append_dev(span3, t31);
			append_dev(div9, t32);
			append_dev(div9, textarea);
			append_dev(div15, t33);
			if (if_block) if_block.m(div15, null);
			append_dev(div15, t34);
			append_dev(div15, div12);
			append_dev(div15, t35);
			append_dev(div15, div14);
			append_dev(div14, div13);
			append_dev(div13, svg1);
			append_dev(svg1, path1);
			append_dev(div13, t36);
			append_dev(div13, span4);
			append_dev(span4, t37);
			append_dev(div34, t38);
			append_dev(div34, div33);
			append_dev(div33, div31);
			append_dev(div31, header1);
			append_dev(header1, h31);
			append_dev(h31, t39);
			append_dev(div31, t40);
			append_dev(div31, div18);
			append_dev(div18, div16);
			append_dev(div16, p1);
			append_dev(p1, t41);
			append_dev(p1, span5);
			append_dev(span5, t42);
			append_dev(div18, t43);
			append_dev(div18, div17);
			append_dev(div17, span6);
			append_dev(div31, t44);
			append_dev(div31, div21);
			append_dev(div21, div19);
			append_dev(div19, p2);
			append_dev(p2, t45);
			append_dev(div21, t46);
			append_dev(div21, div20);
			append_dev(div20, span7);
			append_dev(div31, t47);
			append_dev(div31, div24);
			append_dev(div24, div22);
			append_dev(div22, p3);
			append_dev(p3, t48);
			append_dev(div24, t49);
			append_dev(div24, div23);
			append_dev(div23, span8);
			append_dev(span8, t50);
			append_dev(div31, t51);
			append_dev(div31, div27);
			append_dev(div27, div25);
			append_dev(div25, span9);
			append_dev(span9, input3);
			append_dev(div27, t52);
			append_dev(div27, div26);
			append_dev(div26, button3);
			append_dev(button3, t53);
			append_dev(div31, t54);
			append_dev(div31, div30);
			append_dev(div30, div28);
			append_dev(div28, h4);
			append_dev(h4, t55);
			append_dev(div30, t56);
			append_dev(div30, div29);
			append_dev(div29, span10);
			append_dev(div33, t57);
			append_dev(div33, div32);
			append_dev(div32, button4);
			append_dev(button4, span11);
			append_dev(span11, t58);
			current = true;
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(button0, "click", /*getCost*/ ctx[8], false, false, false),
				listen_dev(button1, "click", /*handleClick*/ ctx[7], false, false, false),
				listen_dev(button2, "click", /*clearCart*/ ctx[9], false, false, false)
			];
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;
			info.ctx = ctx;

			if (dirty & /*promise*/ 4 && promise_1 !== (promise_1 = /*promise*/ ctx[2]) && handle_promise(promise_1, info)) ; else {
				const child_ctx = ctx.slice();
				child_ctx[23] = info.resolved;
				info.block.p(child_ctx, dirty);
			}

			if (!current || dirty & /*disabled*/ 2) {
				prop_dev(button1, "disabled", /*disabled*/ ctx[1]);
			}

			info_1.ctx = ctx;

			if (dirty & /*promise*/ 4 && promise_2 !== (promise_2 = /*promise*/ ctx[2]) && handle_promise(promise_2, info_1)) ; else {
				const child_ctx = ctx.slice();
				child_ctx[17] = info_1.resolved;
				info_1.block.p(child_ctx, dirty);
			}

			if (dirty & /*$carts, localPrice*/ 32) {
				each_value = /*$carts*/ ctx[5];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div15, t12);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}

			const autocomplete_changes = {};
			if (dirty & /*districts*/ 1) autocomplete_changes.items = /*districts*/ ctx[0];

			if (!updating_selectedItem && dirty & /*selectedDistrict*/ 8) {
				updating_selectedItem = true;
				autocomplete_changes.selectedItem = /*selectedDistrict*/ ctx[3];
				add_flush_callback(() => updating_selectedItem = false);
			}

			autocomplete.$set(autocomplete_changes);

			if (/*selectedDistrict*/ ctx[3] !== undefined) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					if_block.m(div15, t34);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if ((!current || dirty & /*totalPrice*/ 16) && t42_value !== (t42_value = localPrice(/*totalPrice*/ ctx[4]) + "")) set_data_dev(t42, t42_value);
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			transition_in(autocomplete.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(autocomplete.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(button0);
			if (detaching) detach_dev(t1);
			info.block.d(detaching);
			info.token = null;
			info = null;
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(button1);
			if (detaching) detach_dev(t4);
			info_1.block.d(detaching);
			info_1.token = null;
			info_1 = null;
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
			destroy_component(autocomplete);
			if (if_block) if_block.d();
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function fetchUsers() {
	const response = await self.fetch("https://api.github.com/users?per_page=5");

	if (response.ok) {
		return response.json();
	} else {
		throw new Error(users);
	}
}

async function fetchCourier() {
	const response = await self.fetch("https://qirim.netlify.app/api/cost/23/9");

	if (response.ok) {
		return response.json();
	} else {
		throw new Error(couriers);
	}
}

function localPrice(amount) {
	return amount.toLocaleString("id-ID", {
		style: "currency",
		currency: "IDR",
		minimumFractionDigits: 0,
		maximumFractionDigits: 0
	});
}

function instance$2($$self, $$props, $$invalidate) {
	let $carts;
	validate_store(carts, "carts");
	component_subscribe($$self, carts, $$value => $$invalidate(5, $carts = $$value));
	let disabled = false;
	let promise = Promise.resolve([]);
	let genericAvatar = genericDataUrl();

	function handleClick() {
		// Now set it to the real fetch promise 
		$$invalidate(2, promise = fetchUsers());

		$$invalidate(1, disabled = true);
	}

	let { districts } = $$props;
	console.log(districts);
	let selectedDistrict;

	function getCost() {
		// Now set it to the real fetch promise 
		$$invalidate(2, promise = fetchCourier());
	}

	onMount(() => {
		carts.useLocalStorage();
	});

	let itemInCart = 0;
	let totalPrice = 0;
	let visible = false;

	const clearCart = () => {
		set_store_value(carts, $carts = []);
	};

	function toggle() {
		visible = !visible;
	}

	const writable_props = ["districts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$2.warn(`<Checkout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Checkout", $$slots, []);

	function autocomplete_selectedItem_binding(value) {
		selectedDistrict = value;
		$$invalidate(3, selectedDistrict);
	}

	$$self.$set = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
	};

	$$self.$capture_state = () => ({
		fly,
		carts,
		Item: CheckoutProduct,
		onMount,
		AutoComplete,
		genericDataUrl,
		fetchAvatar,
		disabled,
		promise,
		genericAvatar,
		fetchUsers,
		handleClick,
		districts,
		selectedDistrict,
		fetchCourier,
		getCost,
		itemInCart,
		totalPrice,
		visible,
		clearCart,
		localPrice,
		toggle,
		$carts
	});

	$$self.$inject_state = $$props => {
		if ("disabled" in $$props) $$invalidate(1, disabled = $$props.disabled);
		if ("promise" in $$props) $$invalidate(2, promise = $$props.promise);
		if ("genericAvatar" in $$props) $$invalidate(6, genericAvatar = $$props.genericAvatar);
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
		if ("selectedDistrict" in $$props) $$invalidate(3, selectedDistrict = $$props.selectedDistrict);
		if ("itemInCart" in $$props) itemInCart = $$props.itemInCart;
		if ("totalPrice" in $$props) $$invalidate(4, totalPrice = $$props.totalPrice);
		if ("visible" in $$props) visible = $$props.visible;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*selectedDistrict*/ 8) {
			 console.log("update kec:" + selectedDistrict);
		}

		if ($$self.$$.dirty & /*selectedDistrict*/ 8) {
			 if (selectedDistrict !== undefined) {
				console.log(selectedDistrict.id);
			}
		}

		if ($$self.$$.dirty & /*$carts*/ 32) {
			 {
				let qty = 0;
				let price = 0;

				for (let item of $carts) {
					qty += item.quantity;
					price += item.price * item.quantity;
				}

				itemInCart = qty;
				$$invalidate(4, totalPrice = price);
			}
		}
	};

	return [
		districts,
		disabled,
		promise,
		selectedDistrict,
		totalPrice,
		$carts,
		genericAvatar,
		handleClick,
		getCost,
		clearCart,
		itemInCart,
		visible,
		toggle,
		autocomplete_selectedItem_binding
	];
}

class Checkout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { districts: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Checkout",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*districts*/ ctx[0] === undefined && !("districts" in props)) {
			console_1$2.warn("<Checkout> was created without expected prop 'districts'");
		}
	}

	get districts() {
		throw new Error_1("<Checkout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set districts(value) {
		throw new Error_1("<Checkout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/checkout.svelte generated by Svelte v3.21.0 */

function create_fragment$3(ctx) {
	let t;
	let current;

	const checkout = new Checkout({
			props: { districts: /*districts*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			t = space();
			create_component(checkout.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1bunxp4\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			claim_component(checkout.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Checkout";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(checkout, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const checkout_changes = {};
			if (dirty & /*districts*/ 1) checkout_changes.districts = /*districts*/ ctx[0];
			checkout.$set(checkout_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(checkout.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(checkout.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			destroy_component(checkout, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	const res = await this.fetch("api/destination.json");
	const districts = await res.json();
	return { districts };
}

function instance$3($$self, $$props, $$invalidate) {
	let { districts } = $$props;
	const writable_props = ["districts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Checkout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Checkout", $$slots, []);

	$$self.$set = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
	};

	$$self.$capture_state = () => ({ preload, Checkout, districts });

	$$self.$inject_state = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [districts];
}

class Checkout_1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { districts: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Checkout_1",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*districts*/ ctx[0] === undefined && !("districts" in props)) {
			console.warn("<Checkout> was created without expected prop 'districts'");
		}
	}

	get districts() {
		throw new Error("<Checkout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set districts(value) {
		throw new Error("<Checkout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Checkout_1;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
