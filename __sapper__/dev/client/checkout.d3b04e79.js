import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, E as validate_store, F as carts, G as component_subscribe, o as onMount, a as validate_slots, g as globals, e as element, p as space, t as text, H as svg_element, c as claim_element, b as children, h as detach_dev, q as claim_space, f as claim_text, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, I as run_all, r as listen_dev, n as set_data_dev, J as prop_dev, u as noop, K as set_store_value, L as set_input_value, M as binding_callbacks, v as validate_each_argument, N as empty, w as destroy_each, O as HtmlTag, P as bind, Q as fly, x as create_component, z as claim_component, A as mount_component, B as transition_in, C as transition_out, D as destroy_component, R as group_outros, T as check_outros, U as add_flush_callback, y as query_selector_all } from './client.8cb5a0fa.js';

/* src/components/CheckoutProduct.svelte generated by Svelte v3.21.0 */

const { console: console_1 } = globals;
const file = "src/components/CheckoutProduct.svelte";

function create_fragment(ctx) {
	let div2;
	let figure;
	let img;
	let img_alt_value;
	let img_src_value;
	let t0;
	let h3;
	let t1_value = /*product*/ ctx[0].name + "";
	let t1;
	let t2;
	let t3_value = /*product*/ ctx[0].size + "";
	let t3;
	let t4;
	let span0;
	let t5;
	let div1;
	let div0;
	let button0;
	let t6;
	let t7;
	let span1;
	let t8_value = /*product*/ ctx[0].quantity + "";
	let t8;
	let t9;
	let button1;
	let t10;
	let t11;
	let span2;
	let t12;
	let t13;
	let span3;
	let t14;
	let button2;
	let svg;
	let path;
	let t15;
	let span4;
	let t16;
	let dispose;

	const block = {
		c: function create() {
			div2 = element("div");
			figure = element("figure");
			img = element("img");
			t0 = space();
			h3 = element("h3");
			t1 = text(t1_value);
			t2 = text(" ");
			t3 = text(t3_value);
			t4 = space();
			span0 = element("span");
			t5 = space();
			div1 = element("div");
			div0 = element("div");
			button0 = element("button");
			t6 = text("−");
			t7 = space();
			span1 = element("span");
			t8 = text(t8_value);
			t9 = space();
			button1 = element("button");
			t10 = text("+");
			t11 = space();
			span2 = element("span");
			t12 = text(/*price*/ ctx[1]);
			t13 = space();
			span3 = element("span");
			t14 = space();
			button2 = element("button");
			svg = svg_element("svg");
			path = svg_element("path");
			t15 = space();
			span4 = element("span");
			t16 = text("hapus");
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			figure = claim_element(div2_nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);

			img = claim_element(figure_nodes, "IMG", {
				alt: true,
				src: true,
				class: true,
				width: true,
				height: true
			});

			figure_nodes.forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			h3 = claim_element(div2_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t1 = claim_text(h3_nodes, t1_value);
			t2 = claim_text(h3_nodes, " ");
			t3 = claim_text(h3_nodes, t3_value);
			h3_nodes.forEach(detach_dev);
			t4 = claim_space(div2_nodes);
			span0 = claim_element(div2_nodes, "SPAN", { class: true });
			children(span0).forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			button0 = claim_element(div0_nodes, "BUTTON", { class: true, disabled: true });
			var button0_nodes = children(button0);
			t6 = claim_text(button0_nodes, "−");
			button0_nodes.forEach(detach_dev);
			t7 = claim_space(div0_nodes);
			span1 = claim_element(div0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t8 = claim_text(span1_nodes, t8_value);
			span1_nodes.forEach(detach_dev);
			t9 = claim_space(div0_nodes);
			button1 = claim_element(div0_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t10 = claim_text(button1_nodes, "+");
			button1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t11 = claim_space(div2_nodes);
			span2 = claim_element(div2_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t12 = claim_text(span2_nodes, /*price*/ ctx[1]);
			span2_nodes.forEach(detach_dev);
			t13 = claim_space(div2_nodes);
			span3 = claim_element(div2_nodes, "SPAN", { class: true, "x-text": true });
			children(span3).forEach(detach_dev);
			t14 = claim_space(div2_nodes);
			button2 = claim_element(div2_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);

			svg = claim_element(
				button2_nodes,
				"svg",
				{
					"aria-hidden": true,
					"data-prefix": true,
					"data-icon": true,
					viewBox: true,
					width: true,
					height: true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			path = claim_element(svg_nodes, "path", { fill: true, d: true }, 1);
			var path_nodes = children(path);
			path_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t15 = claim_space(button2_nodes);
			span4 = claim_element(button2_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			t16 = claim_text(span4_nodes, "hapus");
			span4_nodes.forEach(detach_dev);
			button2_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "alt", img_alt_value = /*product*/ ctx[0].name);
			if (img.src !== (img_src_value = "https://hijacket-api.netlify.app/carousel" + /*product*/ ctx[0].image)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "cart__item-thumb cart__item-image");
			attr_dev(img, "width", "60");
			attr_dev(img, "height", "60");
			add_location(img, file, 31, 8, 830);
			attr_dev(figure, "class", "col-span-1 row-span-2 pr-2 lg:pr-4");
			add_location(figure, file, 30, 4, 769);
			attr_dev(h3, "class", "checkout__item-name col-span-4 text-sm lg:text-lg font-medium text-gray-700 mb-0");
			add_location(h3, file, 33, 4, 1005);
			attr_dev(span0, "class", "checkout__price-total col-span-2 text-xs lg:text-base text-gray-700 text-right font-medium");
			add_location(span0, file, 34, 4, 1143);
			attr_dev(button0, "class", "checkout__decrease bg-gray-100 focus:outline-none py-4px px-2 btn--small");
			button0.disabled = /*disabled*/ ctx[2];
			add_location(button0, file, 38, 12, 1384);
			attr_dev(span1, "class", "checkout__qty focus:outline-none py-5px px-2");
			add_location(span1, file, 39, 12, 1537);
			attr_dev(button1, "class", "checkout__increase bg-gray-100 hover:bg-grey focus:outline-none py-4px px-2");
			add_location(button1, file, 40, 12, 1635);
			attr_dev(div0, "class", "inline-block text-xs text-gray-600");
			add_location(div0, file, 37, 8, 1322);
			attr_dev(div1, "class", "checkout__counter col-span-2");
			add_location(div1, file, 36, 4, 1270);
			attr_dev(span2, "class", "checkout__price col-span-2 text-xs lg:text-base text-primary");
			add_location(span2, file, 45, 4, 1833);
			attr_dev(span3, "class", "checkout__weight col-span-1 text-xs lg:text-base");
			attr_dev(span3, "x-text", "cart.weight + ' gram'");
			add_location(span3, file, 46, 4, 1928);
			attr_dev(path, "fill", "currentColor");
			attr_dev(path, "d", "M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z");
			add_location(path, file, 53, 12, 2443);
			attr_dev(svg, "aria-hidden", "true");
			attr_dev(svg, "data-prefix", "far");
			attr_dev(svg, "data-icon", "times");
			attr_dev(svg, "viewBox", "0 0 320 512");
			attr_dev(svg, "width", "16px");
			attr_dev(svg, "height", "16px");
			attr_dev(svg, "class", "times_svg__svg-inline--fa times_svg__fa-times times_svg__fa-w-10 times_svg__fa-2x cart__icon inline-block text-red-500 mr-2");
			add_location(svg, file, 50, 8, 2162);
			attr_dev(span4, "class", "text-xs text-gray-600 uppercase");
			add_location(span4, file, 57, 8, 2926);
			attr_dev(button2, "class", "checkout__remove col-span-1 flex items-center justify-end");
			add_location(button2, file, 48, 4, 2044);
			attr_dev(div2, "class", "checkout grid grid-cols-7 grid-rows-2 items-center py-3 px-4 first:pt-6 last:mb-4");
			add_location(div2, file, 29, 0, 668);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div2, anchor);
			append_dev(div2, figure);
			append_dev(figure, img);
			append_dev(div2, t0);
			append_dev(div2, h3);
			append_dev(h3, t1);
			append_dev(h3, t2);
			append_dev(h3, t3);
			append_dev(div2, t4);
			append_dev(div2, span0);
			append_dev(div2, t5);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, button0);
			append_dev(button0, t6);
			append_dev(div0, t7);
			append_dev(div0, span1);
			append_dev(span1, t8);
			append_dev(div0, t9);
			append_dev(div0, button1);
			append_dev(button1, t10);
			append_dev(div2, t11);
			append_dev(div2, span2);
			append_dev(span2, t12);
			append_dev(div2, t13);
			append_dev(div2, span3);
			append_dev(div2, t14);
			append_dev(div2, button2);
			append_dev(button2, svg);
			append_dev(svg, path);
			append_dev(button2, t15);
			append_dev(button2, span4);
			append_dev(span4, t16);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(button0, "click", /*decreaseBtn*/ ctx[4], false, false, false),
				listen_dev(button1, "click", /*increaseBtn*/ ctx[3], false, false, false),
				listen_dev(button2, "click", /*deleteProduct*/ ctx[5], false, false, false)
			];
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*product*/ 1 && img_alt_value !== (img_alt_value = /*product*/ ctx[0].name)) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (dirty & /*product*/ 1 && img.src !== (img_src_value = "https://hijacket-api.netlify.app/carousel" + /*product*/ ctx[0].image)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*product*/ 1 && t1_value !== (t1_value = /*product*/ ctx[0].name + "")) set_data_dev(t1, t1_value);
			if (dirty & /*product*/ 1 && t3_value !== (t3_value = /*product*/ ctx[0].size + "")) set_data_dev(t3, t3_value);

			if (dirty & /*disabled*/ 4) {
				prop_dev(button0, "disabled", /*disabled*/ ctx[2]);
			}

			if (dirty & /*product*/ 1 && t8_value !== (t8_value = /*product*/ ctx[0].quantity + "")) set_data_dev(t8, t8_value);
			if (dirty & /*price*/ 2) set_data_dev(t12, /*price*/ ctx[1]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $carts;
	validate_store(carts, "carts");
	component_subscribe($$self, carts, $$value => $$invalidate(6, $carts = $$value));
	let { product = {} } = $$props;
	let { price = 0 } = $$props;

	onMount(() => {
		carts.useLocalStorage();
	});

	let disabled = false;

	const increaseBtn = () => {
		$$invalidate(0, product.quantity++, product);
		carts.set($carts);
		$$invalidate(2, disabled = false);
	};

	const decreaseBtn = () => {
		$$invalidate(0, product.quantity--, product);
		carts.set($carts);
		if (product.quantity == 1) $$invalidate(2, disabled = true);
	};

	const deleteProduct = () => {
		set_store_value(carts, $carts = $carts.filter(item => product.sku != item.sku));
	};

	console.log("cart" + product);
	const writable_props = ["product", "price"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<CheckoutProduct> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("CheckoutProduct", $$slots, []);

	$$self.$set = $$props => {
		if ("product" in $$props) $$invalidate(0, product = $$props.product);
		if ("price" in $$props) $$invalidate(1, price = $$props.price);
	};

	$$self.$capture_state = () => ({
		carts,
		product,
		price,
		onMount,
		disabled,
		increaseBtn,
		decreaseBtn,
		deleteProduct,
		$carts
	});

	$$self.$inject_state = $$props => {
		if ("product" in $$props) $$invalidate(0, product = $$props.product);
		if ("price" in $$props) $$invalidate(1, price = $$props.price);
		if ("disabled" in $$props) $$invalidate(2, disabled = $$props.disabled);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [product, price, disabled, increaseBtn, decreaseBtn, deleteProduct];
}

class CheckoutProduct extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { product: 0, price: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "CheckoutProduct",
			options,
			id: create_fragment.name
		});
	}

	get product() {
		throw new Error("<CheckoutProduct>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set product(value) {
		throw new Error("<CheckoutProduct>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get price() {
		throw new Error("<CheckoutProduct>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set price(value) {
		throw new Error("<CheckoutProduct>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/AutoComplete.svelte generated by Svelte v3.21.0 */

const { Object: Object_1, console: console_1$1 } = globals;
const file$1 = "src/components/AutoComplete.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[64] = list[i];
	child_ctx[66] = i;
	return child_ctx;
}

// (547:28) 
function create_if_block_4(ctx) {
	let div;
	let t;

	const block = {
		c: function create() {
			div = element("div");
			t = text(/*noResultsText*/ ctx[1]);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t = claim_text(div_nodes, /*noResultsText*/ ctx[1]);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "autocomplete-list-item-no-results text-sm text-gray-500 bg-gray-100 leading-none py-2 px-4 svelte-1ssegu4");
			add_location(div, file$1, 547, 6, 17132);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*noResultsText*/ 2) set_data_dev(t, /*noResultsText*/ ctx[1]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(547:28) ",
		ctx
	});

	return block;
}

// (527:4) {#if filteredListItems && filteredListItems.length > 0}
function create_if_block(ctx) {
	let t;
	let if_block_anchor;
	let each_value = /*filteredListItems*/ ctx[12];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	let if_block = /*maxItemsToShowInList*/ ctx[0] > 0 && /*filteredListItems*/ ctx[12].length > /*maxItemsToShowInList*/ ctx[0] && create_if_block_1(ctx);

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			t = claim_space(nodes);
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, t, anchor);
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*highlightIndex, onListItemClick, filteredListItems, maxItemsToShowInList*/ 22529) {
				each_value = /*filteredListItems*/ ctx[12];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(t.parentNode, t);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (/*maxItemsToShowInList*/ ctx[0] > 0 && /*filteredListItems*/ ctx[12].length > /*maxItemsToShowInList*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t);
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(527:4) {#if filteredListItems && filteredListItems.length > 0}",
		ctx
	});

	return block;
}

// (529:8) {#if maxItemsToShowInList <= 0 || i < maxItemsToShowInList}
function create_if_block_2(ctx) {
	let div;
	let div_class_value;
	let dispose;

	function select_block_type_1(ctx, dirty) {
		if (/*listItem*/ ctx[64].highlighted) return create_if_block_3;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx);
	let if_block = current_block_type(ctx);

	function click_handler(...args) {
		return /*click_handler*/ ctx[62](/*listItem*/ ctx[64], ...args);
	}

	const block = {
		c: function create() {
			div = element("div");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "autocomplete-list-item text-sm text-gray-700 hover:text-primary hover:bg-orange-100 hover:border-l-2 hover:border-r-2 hover:border-solid hover:border-primary cursor-pointer leading-none py-2 px-4 " + (/*i*/ ctx[66] === /*highlightIndex*/ ctx[11]
			? "selected"
			: "") + " svelte-1ssegu4");

			add_location(div, file$1, 529, 10, 16237);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div, anchor);
			if_block.m(div, null);
			if (remount) dispose();
			dispose = listen_dev(div, "click", click_handler, false, false, false);
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div, null);
				}
			}

			if (dirty[0] & /*highlightIndex*/ 2048 && div_class_value !== (div_class_value = "autocomplete-list-item text-sm text-gray-700 hover:text-primary hover:bg-orange-100 hover:border-l-2 hover:border-r-2 hover:border-solid hover:border-primary cursor-pointer leading-none py-2 px-4 " + (/*i*/ ctx[66] === /*highlightIndex*/ ctx[11]
			? "selected"
			: "") + " svelte-1ssegu4")) {
				attr_dev(div, "class", div_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if_block.d();
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(529:8) {#if maxItemsToShowInList <= 0 || i < maxItemsToShowInList}",
		ctx
	});

	return block;
}

// (535:12) {:else}
function create_else_block(ctx) {
	let html_tag;
	let raw_value = /*listItem*/ ctx[64].label + "";

	const block = {
		c: function create() {
			this.h();
		},
		l: function claim(nodes) {
			this.h();
		},
		h: function hydrate() {
			html_tag = new HtmlTag(raw_value, null);
		},
		m: function mount(target, anchor) {
			html_tag.m(target, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*filteredListItems*/ 4096 && raw_value !== (raw_value = /*listItem*/ ctx[64].label + "")) html_tag.p(raw_value);
		},
		d: function destroy(detaching) {
			if (detaching) html_tag.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(535:12) {:else}",
		ctx
	});

	return block;
}

// (533:12) {#if listItem.highlighted}
function create_if_block_3(ctx) {
	let html_tag;
	let raw_value = /*listItem*/ ctx[64].highlighted.label + "";

	const block = {
		c: function create() {
			this.h();
		},
		l: function claim(nodes) {
			this.h();
		},
		h: function hydrate() {
			html_tag = new HtmlTag(raw_value, null);
		},
		m: function mount(target, anchor) {
			html_tag.m(target, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*filteredListItems*/ 4096 && raw_value !== (raw_value = /*listItem*/ ctx[64].highlighted.label + "")) html_tag.p(raw_value);
		},
		d: function destroy(detaching) {
			if (detaching) html_tag.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(533:12) {#if listItem.highlighted}",
		ctx
	});

	return block;
}

// (528:6) {#each filteredListItems as listItem, i}
function create_each_block(ctx) {
	let if_block_anchor;
	let if_block = (/*maxItemsToShowInList*/ ctx[0] <= 0 || /*i*/ ctx[66] < /*maxItemsToShowInList*/ ctx[0]) && create_if_block_2(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*maxItemsToShowInList*/ ctx[0] <= 0 || /*i*/ ctx[66] < /*maxItemsToShowInList*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_2(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(528:6) {#each filteredListItems as listItem, i}",
		ctx
	});

	return block;
}

// (542:6) {#if maxItemsToShowInList > 0 && filteredListItems.length > maxItemsToShowInList}
function create_if_block_1(ctx) {
	let div;
	let t0;
	let t1_value = /*filteredListItems*/ ctx[12].length - /*maxItemsToShowInList*/ ctx[0] + "";
	let t1;
	let t2;

	const block = {
		c: function create() {
			div = element("div");
			t0 = text("...");
			t1 = text(t1_value);
			t2 = text(" hasil tidak ditampilkan");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t0 = claim_text(div_nodes, "...");
			t1 = claim_text(div_nodes, t1_value);
			t2 = claim_text(div_nodes, " hasil tidak ditampilkan");
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "autocomplete-list-item-no-results text-sm text-gray-500 bg-gray-100 leading-none py-2 px-4 svelte-1ssegu4");
			add_location(div, file$1, 542, 8, 16873);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t0);
			append_dev(div, t1);
			append_dev(div, t2);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*filteredListItems, maxItemsToShowInList*/ 4097 && t1_value !== (t1_value = /*filteredListItems*/ ctx[12].length - /*maxItemsToShowInList*/ ctx[0] + "")) set_data_dev(t1, t1_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(542:6) {#if maxItemsToShowInList > 0 && filteredListItems.length > maxItemsToShowInList}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let div1;
	let input_1;
	let t;
	let div0;
	let div0_class_value;
	let div1_class_value;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (/*filteredListItems*/ ctx[12] && /*filteredListItems*/ ctx[12].length > 0) return create_if_block;
		if (/*noResultsText*/ ctx[1]) return create_if_block_4;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type && current_block_type(ctx);

	const block = {
		c: function create() {
			div1 = element("div");
			input_1 = element("input");
			t = space();
			div0 = element("div");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);

			input_1 = claim_element(div1_nodes, "INPUT", {
				type: true,
				class: true,
				placeholder: true,
				name: true,
				disabled: true,
				title: true
			});

			t = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (if_block) if_block.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(input_1, "type", "text");
			attr_dev(input_1, "class", "input autocomplete-input w-full text-sm relative bg-transparent border border-solid rounded-sm text-gray-700 hover:text-gray-500 focus:text-gray-600 focus:border-primary focus:outline-none transition-all duration-500 ease-in-out hover:placeholder-gray-300 z-50 py-3px px-3 svelte-1ssegu4");
			attr_dev(input_1, "placeholder", /*placeholder*/ ctx[2]);
			attr_dev(input_1, "name", /*name*/ ctx[4]);
			input_1.disabled = /*disabled*/ ctx[5];
			attr_dev(input_1, "title", /*title*/ ctx[6]);
			add_location(input_1, file$1, 509, 2, 15288);
			attr_dev(div0, "class", div0_class_value = "autocomplete-list " + (/*opened*/ ctx[10] ? "" : "hidden display-none") + " is-fullwidth w-full relative bg-white border border-solid border-gray-300 overflow-y-auto z-100 top-0 py-3" + " svelte-1ssegu4");
			add_location(div0, file$1, 523, 2, 15844);
			attr_dev(div1, "class", div1_class_value = "" + (/*className*/ ctx[3] + " autocomplete select is-fullwidth " + /*uniqueId*/ ctx[13] + " svelte-1ssegu4"));
			add_location(div1, file$1, 508, 0, 15215);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div1, anchor);
			append_dev(div1, input_1);
			/*input_1_binding*/ ctx[60](input_1);
			set_input_value(input_1, /*text*/ ctx[7]);
			append_dev(div1, t);
			append_dev(div1, div0);
			if (if_block) if_block.m(div0, null);
			/*div0_binding*/ ctx[63](div0);
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(window, "click", /*onDocumentClick*/ ctx[15], false, false, false),
				listen_dev(input_1, "input", /*input_1_input_handler*/ ctx[61]),
				listen_dev(input_1, "input", /*onInput*/ ctx[18], false, false, false),
				listen_dev(input_1, "focus", /*onFocus*/ ctx[20], false, false, false),
				listen_dev(input_1, "keydown", /*onKeyDown*/ ctx[16], false, false, false),
				listen_dev(input_1, "click", /*onInputClick*/ ctx[19], false, false, false),
				listen_dev(input_1, "keypress", /*onKeyPress*/ ctx[17], false, false, false)
			];
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*placeholder*/ 4) {
				attr_dev(input_1, "placeholder", /*placeholder*/ ctx[2]);
			}

			if (dirty[0] & /*name*/ 16) {
				attr_dev(input_1, "name", /*name*/ ctx[4]);
			}

			if (dirty[0] & /*disabled*/ 32) {
				prop_dev(input_1, "disabled", /*disabled*/ ctx[5]);
			}

			if (dirty[0] & /*title*/ 64) {
				attr_dev(input_1, "title", /*title*/ ctx[6]);
			}

			if (dirty[0] & /*text*/ 128 && input_1.value !== /*text*/ ctx[7]) {
				set_input_value(input_1, /*text*/ ctx[7]);
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if (if_block) if_block.d(1);
				if_block = current_block_type && current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div0, null);
				}
			}

			if (dirty[0] & /*opened*/ 1024 && div0_class_value !== (div0_class_value = "autocomplete-list " + (/*opened*/ ctx[10] ? "" : "hidden display-none") + " is-fullwidth w-full relative bg-white border border-solid border-gray-300 overflow-y-auto z-100 top-0 py-3" + " svelte-1ssegu4")) {
				attr_dev(div0, "class", div0_class_value);
			}

			if (dirty[0] & /*className*/ 8 && div1_class_value !== (div1_class_value = "" + (/*className*/ ctx[3] + " autocomplete select is-fullwidth " + /*uniqueId*/ ctx[13] + " svelte-1ssegu4"))) {
				attr_dev(div1, "class", div1_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			/*input_1_binding*/ ctx[60](null);

			if (if_block) {
				if_block.d();
			}

			/*div0_binding*/ ctx[63](null);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function safeStringFunction(theFunction, argument) {
	if (typeof theFunction !== "function") {
		console.error("Not a function: " + theFunction + ", argument: " + argument);
	}

	let originalResult;

	try {
		originalResult = theFunction(argument);
	} catch(error) {
		console.warn("Error executing Autocomplete function on value: " + argument + " function: " + theFunction);
	}

	let result = originalResult;

	if (result === undefined || result === null) {
		result = "";
	}

	if (typeof result !== "string") {
		result = result.toString();
	}

	return result;
}

function instance$1($$self, $$props, $$invalidate) {
	let { items } = $$props;
	let { labelFieldName = undefined } = $$props;
	let { keywordsFieldName = labelFieldName } = $$props;
	let { valueFieldName = undefined } = $$props;

	let { labelFunction = function (item) {
		if (item === undefined || item === null) {
			return "";
		}

		return labelFieldName ? item[labelFieldName] : item;
	} } = $$props;

	let { keywordsFunction = function (item) {
		if (item === undefined || item === null) {
			return "";
		}

		return keywordsFieldName ? item[keywordsFieldName] : item;
	} } = $$props;

	let { valueFunction = function (item) {
		if (item === undefined || item === null) {
			return item;
		}

		return valueFieldName ? item[valueFieldName] : item;
	} } = $$props;

	let { keywordsCleanFunction = function (keywords) {
		return keywords;
	} } = $$props;

	let { textCleanFunction = function (userEnteredText) {
		return userEnteredText;
	} } = $$props;

	let { beforeChange = function (oldSelectedItem, newSelectedItem) {
		return true;
	} } = $$props;

	let { onChange = function (newSelectedItem) {
		
	} } = $$props;

	let { selectFirstIfEmpty = false } = $$props;
	let { minCharactersToSearch = 1 } = $$props;
	let { maxItemsToShowInList = 0 } = $$props;
	let { noResultsText = "No results found" } = $$props;
	const uniqueId = "sautocomplete-" + Math.floor(Math.random() * 1000);

	function safeLabelFunction(item) {
		// console.log("labelFunction: " + labelFunction);
		// console.log("safeLabelFunction, item: " + item);
		return safeStringFunction(labelFunction, item);
	}

	function safeKeywordsFunction(item) {
		// console.log("safeKeywordsFunction");
		const keywords = safeStringFunction(keywordsFunction, item);

		let result = safeStringFunction(keywordsCleanFunction, keywords);
		result = result.toLowerCase().trim();

		if (debug) {
			console.log("Extracted keywords: '" + result + "' from item: " + JSON.stringify(item));
		}

		return result;
	}

	let { placeholder = undefined } = $$props;
	let { className = undefined } = $$props;
	let { name = undefined } = $$props;
	let { disabled = false } = $$props;
	let { title = undefined } = $$props;
	let { debug = false } = $$props;
	let { selectedItem = undefined } = $$props;
	let { value = undefined } = $$props;
	let text;
	let filteredTextLength = 0;

	function onSelectedItemChanged() {
		$$invalidate(22, value = valueFunction(selectedItem));
		$$invalidate(7, text = safeLabelFunction(selectedItem));
		onChange(selectedItem);
	}

	// HTML elements
	let input;

	let list;

	// UI state
	let opened = false;

	let highlightIndex = -1;

	// view model
	let filteredListItems;

	let listItems = [];

	function prepareListItems() {
		let tStart;

		if (debug) {
			tStart = performance.now();
			console.log("prepare items to search");
			console.log("items: " + JSON.stringify(items));
		}

		const length = items ? items.length : 0;
		listItems = new Array(length);

		if (length > 0) {
			items.forEach((item, i) => {
				listItems[i] = getListItem(item);
			});
		}

		if (debug) {
			const tEnd = performance.now();
			console.log(listItems.length + " items to search prepared in " + (tEnd - tStart) + " milliseconds");
		}
	}

	function getListItem(item) {
		return {
			// keywords representation of the item
			keywords: safeKeywordsFunction(item),
			// item label
			label: safeLabelFunction(item),
			// store reference to the origial item
			item
		};
	}

	function prepareUserEnteredText(userEnteredText) {
		if (userEnteredText === undefined || userEnteredText === null) {
			return "";
		}

		const textFiltered = userEnteredText.replace(/[&/\\#,+()$~%.'":*?<>{}]/g, " ").trim();
		filteredTextLength = textFiltered.length;

		if (minCharactersToSearch > 1) {
			if (filteredTextLength < minCharactersToSearch) {
				return "";
			}
		}

		const cleanUserEnteredText = textCleanFunction(textFiltered);
		const textFilteredLowerCase = cleanUserEnteredText.toLowerCase().trim();

		if (debug) {
			console.log("Change user entered text '" + userEnteredText + "' into '" + textFilteredLowerCase + "'");
		}

		return textFilteredLowerCase;
	}

	function search() {
		let tStart;

		if (debug) {
			tStart = performance.now();
			console.log("Searching user entered text: '" + text + "'");
		}

		const textFiltered = prepareUserEnteredText(text);

		if (textFiltered === "") {
			$$invalidate(12, filteredListItems = listItems);
			closeIfMinCharsToSearchReached();

			if (debug) {
				console.log("User entered text is empty set the list of items to all items");
			}

			return;
		}

		const searchWords = textFiltered.split(" ");

		let tempfilteredListItems = listItems.filter(listItem => {
			const itemKeywords = listItem.keywords;
			let matches = 0;

			searchWords.forEach(searchWord => {
				if (itemKeywords.includes(searchWord)) {
					matches++;
				}
			});

			return matches >= searchWords.length;
		});

		const hlfilter = highlightFilter(textFiltered, ["label"]);
		const filteredListItemsHighlighted = tempfilteredListItems.map(hlfilter);
		$$invalidate(12, filteredListItems = filteredListItemsHighlighted);
		closeIfMinCharsToSearchReached();

		if (debug) {
			const tEnd = performance.now();
			console.log("Search took " + (tEnd - tStart) + " milliseconds, found " + filteredListItems.length + " items");
		}
	}

	// $: text, search();
	function selectListItem(listItem) {
		if (debug) {
			console.log("selectListItem");
		}

		const newSelectedItem = listItem.item;

		if (beforeChange(selectedItem, newSelectedItem)) {
			$$invalidate(21, selectedItem = newSelectedItem);
		}
	}

	function selectItem() {
		if (debug) {
			console.log("selectItem");
		}

		const listItem = filteredListItems[highlightIndex];
		selectListItem(listItem);
		close();
	}

	function up() {
		if (debug) {
			console.log("up");
		}

		open();
		if (highlightIndex > 0) $$invalidate(11, highlightIndex--, highlightIndex);
		highlight();
	}

	function down() {
		if (debug) {
			console.log("down");
		}

		open();
		if (highlightIndex < filteredListItems.length - 1) $$invalidate(11, highlightIndex++, highlightIndex);
		highlight();
	}

	function highlight() {
		if (debug) {
			console.log("highlight");
		}

		const query = ".selected";

		if (debug) {
			console.log("Seaching DOM element: " + query + " in " + list);
		}

		const el = list.querySelector(query);

		if (el) {
			if (typeof el.scrollIntoViewIfNeeded === "function") {
				if (debug) {
					console.log("Scrolling selected item into view");
				}

				el.scrollIntoViewIfNeeded();
			} else {
				if (debug) {
					console.warn("Could not scroll selected item into view, scrollIntoViewIfNeeded not supported");
				}
			}
		} else {
			if (debug) {
				console.warn("Selected item not found to scroll into view");
			}
		}
	}

	function onListItemClick(listItem) {
		if (debug) {
			console.log("onListItemClick");
		}

		selectListItem(listItem);
		close();
	}

	function onDocumentClick(e) {
		if (debug) {
			console.log("onDocumentClick: " + JSON.stringify(e.target));
		}

		if (e.target.closest("." + uniqueId)) {
			if (debug) {
				console.log("onDocumentClick inside");
			}

			// resetListToAllItemsAndOpen();
			highlight();
		} else {
			if (debug) {
				console.log("onDocumentClick outside");
			}

			close();
		}
	}

	function onKeyDown(e) {
		if (debug) {
			console.log("onKeyDown");
		}

		let key = e.key;
		if (key === "Tab" && e.shiftKey) key = "ShiftTab";

		const fnmap = {
			Tab: opened ? down.bind(this) : null,
			ShiftTab: opened ? up.bind(this) : null,
			ArrowDown: down.bind(this),
			ArrowUp: up.bind(this),
			Escape: onEsc.bind(this)
		};

		const fn = fnmap[key];

		if (typeof fn === "function") {
			e.preventDefault();
			fn(e);
		}
	}

	function onKeyPress(e) {
		if (debug) {
			console.log("onKeyPress");
		}

		if (e.key === "Enter") {
			e.preventDefault();
			selectItem();
		}
	}

	function onInput(e) {
		if (debug) {
			console.log("onInput");
		}

		$$invalidate(7, text = e.target.value);
		search();
		$$invalidate(11, highlightIndex = 0);
		open();
	}

	function onInputClick() {
		if (debug) {
			console.log("onInputClick");
		}

		resetListToAllItemsAndOpen();
	}

	function onEsc(e) {
		if (debug) {
			console.log("onEsc");
		}

		//if (text) return clear();
		e.stopPropagation();

		if (opened) {
			input.focus();
			close();
		}
	}

	function onFocus() {
		if (debug) {
			console.log("onFocus");
		}

		resetListToAllItemsAndOpen();
	}

	function resetListToAllItemsAndOpen() {
		if (debug) {
			console.log("resetListToAllItemsAndOpen");
		}

		$$invalidate(12, filteredListItems = listItems);
		open();

		// find selected item
		if (selectedItem) {
			if (debug) {
				console.log("Searching currently selected item: " + JSON.stringify(selectedItem));
			}

			for (let i = 0; i < listItems.length; i++) {
				const listItem = listItems[i];

				if (debug) {
					console.log("Item " + i + ": " + JSON.stringify(listItem));
				}

				if (selectedItem == listItem.item) {
					$$invalidate(11, highlightIndex = i);

					if (debug) {
						console.log("Found selected item: " + i + ": " + JSON.stringify(listItem));
					}

					highlight();
					break;
				}
			}
		}
	}

	function open() {
		if (debug) {
			console.log("open");
		}

		// check if the search text has more than the min chars required
		if (isMinCharsToSearchReached()) {
			return;
		}

		$$invalidate(10, opened = true);
	}

	function close() {
		if (debug) {
			console.log("close");
		}

		$$invalidate(10, opened = false);

		if (!text && selectFirstIfEmpty) {
			highlightFilter = 0;
			selectItem();
		}
	}

	function isMinCharsToSearchReached() {
		return minCharactersToSearch > 1 && filteredTextLength < minCharactersToSearch;
	}

	function closeIfMinCharsToSearchReached() {
		if (isMinCharsToSearchReached()) {
			close();
		}
	}

	function clear() {
		if (debug) {
			console.log("clear");
		}

		$$invalidate(7, text = "");
		setTimeout(() => input.focus());
	}

	function onBlur() {
		if (debug) {
			console.log("onBlur");
		}

		close();
	}

	// 'item number one'.replace(/(it)(.*)(nu)(.*)(one)/ig, '<b>$1</b>$2 <b>$3</b>$4 <b>$5</b>')
	function highlightFilter(q, fields) {
		const qs = "(" + q.trim().replace(/\s/g, ")(.*)(") + ")";
		const reg = new RegExp(qs, "ig");
		let n = 1;
		const len = qs.split(")(").length + 1;
		let repl = "";
		for (; n < len; n++) repl += n % 2 ? `<b class="text-primary">$${n}</b>` : `$${n}`;

		return i => {
			const newI = Object.assign({ highlighted: {} }, i);

			if (fields) {
				fields.forEach(f => {
					if (!newI[f]) return;
					newI.highlighted[f] = newI[f].replace(reg, repl);
				});
			}

			return newI;
		};
	}

	const writable_props = [
		"items",
		"labelFieldName",
		"keywordsFieldName",
		"valueFieldName",
		"labelFunction",
		"keywordsFunction",
		"valueFunction",
		"keywordsCleanFunction",
		"textCleanFunction",
		"beforeChange",
		"onChange",
		"selectFirstIfEmpty",
		"minCharactersToSearch",
		"maxItemsToShowInList",
		"noResultsText",
		"placeholder",
		"className",
		"name",
		"disabled",
		"title",
		"debug",
		"selectedItem",
		"value"
	];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$1.warn(`<AutoComplete> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("AutoComplete", $$slots, []);

	function input_1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(8, input = $$value);
		});
	}

	function input_1_input_handler() {
		text = this.value;
		$$invalidate(7, text);
	}

	const click_handler = listItem => onListItemClick(listItem);

	function div0_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(9, list = $$value);
		});
	}

	$$self.$set = $$props => {
		if ("items" in $$props) $$invalidate(23, items = $$props.items);
		if ("labelFieldName" in $$props) $$invalidate(24, labelFieldName = $$props.labelFieldName);
		if ("keywordsFieldName" in $$props) $$invalidate(25, keywordsFieldName = $$props.keywordsFieldName);
		if ("valueFieldName" in $$props) $$invalidate(26, valueFieldName = $$props.valueFieldName);
		if ("labelFunction" in $$props) $$invalidate(27, labelFunction = $$props.labelFunction);
		if ("keywordsFunction" in $$props) $$invalidate(28, keywordsFunction = $$props.keywordsFunction);
		if ("valueFunction" in $$props) $$invalidate(29, valueFunction = $$props.valueFunction);
		if ("keywordsCleanFunction" in $$props) $$invalidate(30, keywordsCleanFunction = $$props.keywordsCleanFunction);
		if ("textCleanFunction" in $$props) $$invalidate(31, textCleanFunction = $$props.textCleanFunction);
		if ("beforeChange" in $$props) $$invalidate(32, beforeChange = $$props.beforeChange);
		if ("onChange" in $$props) $$invalidate(33, onChange = $$props.onChange);
		if ("selectFirstIfEmpty" in $$props) $$invalidate(34, selectFirstIfEmpty = $$props.selectFirstIfEmpty);
		if ("minCharactersToSearch" in $$props) $$invalidate(35, minCharactersToSearch = $$props.minCharactersToSearch);
		if ("maxItemsToShowInList" in $$props) $$invalidate(0, maxItemsToShowInList = $$props.maxItemsToShowInList);
		if ("noResultsText" in $$props) $$invalidate(1, noResultsText = $$props.noResultsText);
		if ("placeholder" in $$props) $$invalidate(2, placeholder = $$props.placeholder);
		if ("className" in $$props) $$invalidate(3, className = $$props.className);
		if ("name" in $$props) $$invalidate(4, name = $$props.name);
		if ("disabled" in $$props) $$invalidate(5, disabled = $$props.disabled);
		if ("title" in $$props) $$invalidate(6, title = $$props.title);
		if ("debug" in $$props) $$invalidate(36, debug = $$props.debug);
		if ("selectedItem" in $$props) $$invalidate(21, selectedItem = $$props.selectedItem);
		if ("value" in $$props) $$invalidate(22, value = $$props.value);
	};

	$$self.$capture_state = () => ({
		items,
		labelFieldName,
		keywordsFieldName,
		valueFieldName,
		labelFunction,
		keywordsFunction,
		valueFunction,
		keywordsCleanFunction,
		textCleanFunction,
		beforeChange,
		onChange,
		selectFirstIfEmpty,
		minCharactersToSearch,
		maxItemsToShowInList,
		noResultsText,
		uniqueId,
		safeStringFunction,
		safeLabelFunction,
		safeKeywordsFunction,
		placeholder,
		className,
		name,
		disabled,
		title,
		debug,
		selectedItem,
		value,
		text,
		filteredTextLength,
		onSelectedItemChanged,
		input,
		list,
		opened,
		highlightIndex,
		filteredListItems,
		listItems,
		prepareListItems,
		getListItem,
		prepareUserEnteredText,
		search,
		selectListItem,
		selectItem,
		up,
		down,
		highlight,
		onListItemClick,
		onDocumentClick,
		onKeyDown,
		onKeyPress,
		onInput,
		onInputClick,
		onEsc,
		onFocus,
		resetListToAllItemsAndOpen,
		open,
		close,
		isMinCharsToSearchReached,
		closeIfMinCharsToSearchReached,
		clear,
		onBlur,
		highlightFilter
	});

	$$self.$inject_state = $$props => {
		if ("items" in $$props) $$invalidate(23, items = $$props.items);
		if ("labelFieldName" in $$props) $$invalidate(24, labelFieldName = $$props.labelFieldName);
		if ("keywordsFieldName" in $$props) $$invalidate(25, keywordsFieldName = $$props.keywordsFieldName);
		if ("valueFieldName" in $$props) $$invalidate(26, valueFieldName = $$props.valueFieldName);
		if ("labelFunction" in $$props) $$invalidate(27, labelFunction = $$props.labelFunction);
		if ("keywordsFunction" in $$props) $$invalidate(28, keywordsFunction = $$props.keywordsFunction);
		if ("valueFunction" in $$props) $$invalidate(29, valueFunction = $$props.valueFunction);
		if ("keywordsCleanFunction" in $$props) $$invalidate(30, keywordsCleanFunction = $$props.keywordsCleanFunction);
		if ("textCleanFunction" in $$props) $$invalidate(31, textCleanFunction = $$props.textCleanFunction);
		if ("beforeChange" in $$props) $$invalidate(32, beforeChange = $$props.beforeChange);
		if ("onChange" in $$props) $$invalidate(33, onChange = $$props.onChange);
		if ("selectFirstIfEmpty" in $$props) $$invalidate(34, selectFirstIfEmpty = $$props.selectFirstIfEmpty);
		if ("minCharactersToSearch" in $$props) $$invalidate(35, minCharactersToSearch = $$props.minCharactersToSearch);
		if ("maxItemsToShowInList" in $$props) $$invalidate(0, maxItemsToShowInList = $$props.maxItemsToShowInList);
		if ("noResultsText" in $$props) $$invalidate(1, noResultsText = $$props.noResultsText);
		if ("placeholder" in $$props) $$invalidate(2, placeholder = $$props.placeholder);
		if ("className" in $$props) $$invalidate(3, className = $$props.className);
		if ("name" in $$props) $$invalidate(4, name = $$props.name);
		if ("disabled" in $$props) $$invalidate(5, disabled = $$props.disabled);
		if ("title" in $$props) $$invalidate(6, title = $$props.title);
		if ("debug" in $$props) $$invalidate(36, debug = $$props.debug);
		if ("selectedItem" in $$props) $$invalidate(21, selectedItem = $$props.selectedItem);
		if ("value" in $$props) $$invalidate(22, value = $$props.value);
		if ("text" in $$props) $$invalidate(7, text = $$props.text);
		if ("filteredTextLength" in $$props) filteredTextLength = $$props.filteredTextLength;
		if ("input" in $$props) $$invalidate(8, input = $$props.input);
		if ("list" in $$props) $$invalidate(9, list = $$props.list);
		if ("opened" in $$props) $$invalidate(10, opened = $$props.opened);
		if ("highlightIndex" in $$props) $$invalidate(11, highlightIndex = $$props.highlightIndex);
		if ("filteredListItems" in $$props) $$invalidate(12, filteredListItems = $$props.filteredListItems);
		if ("listItems" in $$props) listItems = $$props.listItems;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*selectedItem*/ 2097152) {
			 (onSelectedItemChanged());
		}

		if ($$self.$$.dirty[0] & /*selectedItem*/ 2097152) {
			 console.log(selectedItem);
		}

		if ($$self.$$.dirty[0] & /*items*/ 8388608) {
			 (prepareListItems());
		}
	};

	return [
		maxItemsToShowInList,
		noResultsText,
		placeholder,
		className,
		name,
		disabled,
		title,
		text,
		input,
		list,
		opened,
		highlightIndex,
		filteredListItems,
		uniqueId,
		onListItemClick,
		onDocumentClick,
		onKeyDown,
		onKeyPress,
		onInput,
		onInputClick,
		onFocus,
		selectedItem,
		value,
		items,
		labelFieldName,
		keywordsFieldName,
		valueFieldName,
		labelFunction,
		keywordsFunction,
		valueFunction,
		keywordsCleanFunction,
		textCleanFunction,
		beforeChange,
		onChange,
		selectFirstIfEmpty,
		minCharactersToSearch,
		debug,
		filteredTextLength,
		listItems,
		highlightFilter,
		safeLabelFunction,
		safeKeywordsFunction,
		onSelectedItemChanged,
		prepareListItems,
		getListItem,
		prepareUserEnteredText,
		search,
		selectListItem,
		selectItem,
		up,
		down,
		highlight,
		onEsc,
		resetListToAllItemsAndOpen,
		open,
		close,
		isMinCharsToSearchReached,
		closeIfMinCharsToSearchReached,
		clear,
		onBlur,
		input_1_binding,
		input_1_input_handler,
		click_handler,
		div0_binding
	];
}

class AutoComplete extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance$1,
			create_fragment$1,
			safe_not_equal,
			{
				items: 23,
				labelFieldName: 24,
				keywordsFieldName: 25,
				valueFieldName: 26,
				labelFunction: 27,
				keywordsFunction: 28,
				valueFunction: 29,
				keywordsCleanFunction: 30,
				textCleanFunction: 31,
				beforeChange: 32,
				onChange: 33,
				selectFirstIfEmpty: 34,
				minCharactersToSearch: 35,
				maxItemsToShowInList: 0,
				noResultsText: 1,
				placeholder: 2,
				className: 3,
				name: 4,
				disabled: 5,
				title: 6,
				debug: 36,
				selectedItem: 21,
				value: 22
			},
			[-1, -1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "AutoComplete",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*items*/ ctx[23] === undefined && !("items" in props)) {
			console_1$1.warn("<AutoComplete> was created without expected prop 'items'");
		}
	}

	get items() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set items(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get labelFieldName() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set labelFieldName(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get keywordsFieldName() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set keywordsFieldName(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get valueFieldName() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set valueFieldName(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get labelFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set labelFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get keywordsFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set keywordsFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get valueFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set valueFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get keywordsCleanFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set keywordsCleanFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get textCleanFunction() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set textCleanFunction(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get beforeChange() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set beforeChange(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onChange() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onChange(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectFirstIfEmpty() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectFirstIfEmpty(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get minCharactersToSearch() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set minCharactersToSearch(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get maxItemsToShowInList() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set maxItemsToShowInList(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get noResultsText() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set noResultsText(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get placeholder() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set placeholder(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get className() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set className(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get name() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get debug() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set debug(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectedItem() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectedItem(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<AutoComplete>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<AutoComplete>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Checkout.svelte generated by Svelte v3.21.0 */

const { console: console_1$2 } = globals;
const file$2 = "src/components/Checkout.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[10] = list[i];
	return child_ctx;
}

// (84:16) {#each $carts as product}
function create_each_block$1(ctx) {
	let current;

	const item = new CheckoutProduct({
			props: {
				product: /*product*/ ctx[10],
				price: localPrice(/*product*/ ctx[10].price * /*product*/ ctx[10].quantity)
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(item.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(item.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(item, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const item_changes = {};
			if (dirty & /*$carts*/ 8) item_changes.product = /*product*/ ctx[10];
			if (dirty & /*$carts*/ 8) item_changes.price = localPrice(/*product*/ ctx[10].price * /*product*/ ctx[10].quantity);
			item.$set(item_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(item.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(item.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(item, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(84:16) {#each $carts as product}",
		ctx
	});

	return block;
}

// (146:16) {#if selectedDistrict !== undefined}
function create_if_block$1(ctx) {
	let p;
	let t0_value = /*selectedDistrict*/ ctx[1].id + "";
	let t0;
	let t1;
	let t2_value = /*selectedDistrict*/ ctx[1].name + "";
	let t2;

	const block = {
		c: function create() {
			p = element("p");
			t0 = text(t0_value);
			t1 = space();
			t2 = text(t2_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, t0_value);
			t1 = claim_space(p_nodes);
			t2 = claim_text(p_nodes, t2_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$2, 146, 16, 7335);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			append_dev(p, t1);
			append_dev(p, t2);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*selectedDistrict*/ 2 && t0_value !== (t0_value = /*selectedDistrict*/ ctx[1].id + "")) set_data_dev(t0, t0_value);
			if (dirty & /*selectedDistrict*/ 2 && t2_value !== (t2_value = /*selectedDistrict*/ ctx[1].name + "")) set_data_dev(t2, t2_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(146:16) {#if selectedDistrict !== undefined}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let section;
	let div35;
	let div34;
	let div15;
	let div0;
	let p0;
	let t0;
	let t1;
	let button0;
	let svg0;
	let path0;
	let t2;
	let span0;
	let t3;
	let t4;
	let div1;
	let t5;
	let t6;
	let div2;
	let t7;
	let div11;
	let form;
	let div10;
	let header0;
	let h30;
	let t8;
	let t9;
	let div5;
	let div3;
	let label0;
	let t10;
	let span1;
	let t11;
	let t12;
	let input0;
	let t13;
	let div4;
	let label1;
	let t14;
	let t15;
	let input1;
	let t16;
	let div8;
	let div6;
	let label2;
	let t17;
	let span2;
	let t18;
	let t19;
	let input2;
	let t20;
	let div7;
	let label3;
	let t21;
	let t22;
	let updating_selectedItem;
	let t23;
	let div9;
	let label4;
	let t24;
	let span3;
	let t25;
	let t26;
	let textarea;
	let t27;
	let t28;
	let div12;
	let t29;
	let div14;
	let div13;
	let svg1;
	let path1;
	let t30;
	let span4;
	let t31;
	let t32;
	let div33;
	let div31;
	let header1;
	let h31;
	let t33;
	let t34;
	let div18;
	let div16;
	let p1;
	let t35;
	let span5;
	let t36_value = localPrice(/*totalPrice*/ ctx[2]) + "";
	let t36;
	let t37;
	let div17;
	let span6;
	let t38;
	let div21;
	let div19;
	let p2;
	let t39;
	let t40;
	let div20;
	let span7;
	let t41;
	let div24;
	let div22;
	let p3;
	let t42;
	let t43;
	let div23;
	let span8;
	let t44;
	let t45;
	let div27;
	let div25;
	let span9;
	let input3;
	let t46;
	let div26;
	let button1;
	let t47;
	let t48;
	let div30;
	let div28;
	let h4;
	let t49;
	let t50;
	let div29;
	let span10;
	let t51;
	let div32;
	let button2;
	let span11;
	let t52;
	let current;
	let dispose;
	let each_value = /*$carts*/ ctx[3];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	function autocomplete_selectedItem_binding(value) {
		/*autocomplete_selectedItem_binding*/ ctx[9].call(null, value);
	}

	let autocomplete_props = {
		items: /*districts*/ ctx[0],
		placeholder: "Masukkan nama kecamatan",
		labelFieldName: "name",
		minCharactersToSearch: "3",
		maxItemsToShowInList: "10"
	};

	if (/*selectedDistrict*/ ctx[1] !== void 0) {
		autocomplete_props.selectedItem = /*selectedDistrict*/ ctx[1];
	}

	const autocomplete = new AutoComplete({
			props: autocomplete_props,
			$$inline: true
		});

	binding_callbacks.push(() => bind(autocomplete, "selectedItem", autocomplete_selectedItem_binding));
	let if_block = /*selectedDistrict*/ ctx[1] !== undefined && create_if_block$1(ctx);

	const block = {
		c: function create() {
			section = element("section");
			div35 = element("div");
			div34 = element("div");
			div15 = element("div");
			div0 = element("div");
			p0 = element("p");
			t0 = text("Checkout Produk");
			t1 = space();
			button0 = element("button");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t2 = space();
			span0 = element("span");
			t3 = text("Clear Cart");
			t4 = space();
			div1 = element("div");
			t5 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t6 = space();
			div2 = element("div");
			t7 = space();
			div11 = element("div");
			form = element("form");
			div10 = element("div");
			header0 = element("header");
			h30 = element("h3");
			t8 = text("Detail Alamat Pengiriman");
			t9 = space();
			div5 = element("div");
			div3 = element("div");
			label0 = element("label");
			t10 = text("Nama Lengkap");
			span1 = element("span");
			t11 = text("*");
			t12 = space();
			input0 = element("input");
			t13 = space();
			div4 = element("div");
			label1 = element("label");
			t14 = text("Email (Opsional)");
			t15 = space();
			input1 = element("input");
			t16 = space();
			div8 = element("div");
			div6 = element("div");
			label2 = element("label");
			t17 = text("No. HP/WA");
			span2 = element("span");
			t18 = text("*");
			t19 = space();
			input2 = element("input");
			t20 = space();
			div7 = element("div");
			label3 = element("label");
			t21 = text("Kota atau Kecamatan");
			t22 = space();
			create_component(autocomplete.$$.fragment);
			t23 = space();
			div9 = element("div");
			label4 = element("label");
			t24 = text("Alamat Lengkap");
			span3 = element("span");
			t25 = text("*");
			t26 = space();
			textarea = element("textarea");
			t27 = space();
			if (if_block) if_block.c();
			t28 = space();
			div12 = element("div");
			t29 = space();
			div14 = element("div");
			div13 = element("div");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t30 = space();
			span4 = element("span");
			t31 = text("Silahkan pilih dan klik kurir pengiriman!");
			t32 = space();
			div33 = element("div");
			div31 = element("div");
			header1 = element("header");
			h31 = element("h3");
			t33 = text("Ringkasan Pesanan");
			t34 = space();
			div18 = element("div");
			div16 = element("div");
			p1 = element("p");
			t35 = text("Subtotal ");
			span5 = element("span");
			t36 = text(t36_value);
			t37 = space();
			div17 = element("div");
			span6 = element("span");
			t38 = space();
			div21 = element("div");
			div19 = element("div");
			p2 = element("p");
			t39 = text("Berat Total");
			t40 = space();
			div20 = element("div");
			span7 = element("span");
			t41 = space();
			div24 = element("div");
			div22 = element("div");
			p3 = element("p");
			t42 = text("Biaya Pengiriman");
			t43 = space();
			div23 = element("div");
			span8 = element("span");
			t44 = text("Pilih kurir dulu");
			t45 = space();
			div27 = element("div");
			div25 = element("div");
			span9 = element("span");
			input3 = element("input");
			t46 = space();
			div26 = element("div");
			button1 = element("button");
			t47 = text("GUNAKAN");
			t48 = space();
			div30 = element("div");
			div28 = element("div");
			h4 = element("h4");
			t49 = text("Total Bayar");
			t50 = space();
			div29 = element("div");
			span10 = element("span");
			t51 = space();
			div32 = element("div");
			button2 = element("button");
			span11 = element("span");
			t52 = text("Pesan Sekarang");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div35 = claim_element(section_nodes, "DIV", { class: true });
			var div35_nodes = children(div35);
			div34 = claim_element(div35_nodes, "DIV", { class: true });
			var div34_nodes = children(div34);
			div15 = claim_element(div34_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div0 = claim_element(div15_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Checkout Produk");
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			button0 = claim_element(div0_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);

			svg0 = claim_element(
				button0_nodes,
				"svg",
				{
					"aria-hidden": true,
					"data-prefix": true,
					"data-icon": true,
					xmlns: true,
					viewBox: true,
					class: true,
					width: true,
					height: true
				},
				1
			);

			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { fill: true, d: true }, 1);
			var path0_nodes = children(path0);
			path0_nodes.forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			t2 = claim_space(button0_nodes);
			span0 = claim_element(button0_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t3 = claim_text(span0_nodes, "Clear Cart");
			span0_nodes.forEach(detach_dev);
			button0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div15_nodes);
			div1 = claim_element(div15_nodes, "DIV", { class: true });
			children(div1).forEach(detach_dev);
			t5 = claim_space(div15_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div15_nodes);
			}

			t6 = claim_space(div15_nodes);
			div2 = claim_element(div15_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			t7 = claim_space(div15_nodes);
			div11 = claim_element(div15_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			form = claim_element(div11_nodes, "FORM", { action: true });
			var form_nodes = children(form);
			div10 = claim_element(form_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			header0 = claim_element(div10_nodes, "HEADER", { class: true });
			var header0_nodes = children(header0);
			h30 = claim_element(header0_nodes, "H3", { class: true });
			var h30_nodes = children(h30);
			t8 = claim_text(h30_nodes, "Detail Alamat Pengiriman");
			h30_nodes.forEach(detach_dev);
			header0_nodes.forEach(detach_dev);
			t9 = claim_space(div10_nodes);
			div5 = claim_element(div10_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label0 = claim_element(div3_nodes, "LABEL", { class: true, for: true });
			var label0_nodes = children(label0);
			t10 = claim_text(label0_nodes, "Nama Lengkap");
			span1 = claim_element(label0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t11 = claim_text(span1_nodes, "*");
			span1_nodes.forEach(detach_dev);
			label0_nodes.forEach(detach_dev);
			t12 = claim_space(div3_nodes);

			input0 = claim_element(div3_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			div3_nodes.forEach(detach_dev);
			t13 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			label1 = claim_element(div4_nodes, "LABEL", { class: true, for: true });
			var label1_nodes = children(label1);
			t14 = claim_text(label1_nodes, "Email (Opsional)");
			label1_nodes.forEach(detach_dev);
			t15 = claim_space(div4_nodes);

			input1 = claim_element(div4_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t16 = claim_space(div10_nodes);
			div8 = claim_element(div10_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div6 = claim_element(div8_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label2 = claim_element(div6_nodes, "LABEL", { class: true, for: true });
			var label2_nodes = children(label2);
			t17 = claim_text(label2_nodes, "No. HP/WA");
			span2 = claim_element(label2_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t18 = claim_text(span2_nodes, "*");
			span2_nodes.forEach(detach_dev);
			label2_nodes.forEach(detach_dev);
			t19 = claim_space(div6_nodes);

			input2 = claim_element(div6_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			div6_nodes.forEach(detach_dev);
			t20 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label3 = claim_element(div7_nodes, "LABEL", { class: true, for: true });
			var label3_nodes = children(label3);
			t21 = claim_text(label3_nodes, "Kota atau Kecamatan");
			label3_nodes.forEach(detach_dev);
			t22 = claim_space(div7_nodes);
			claim_component(autocomplete.$$.fragment, div7_nodes);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t23 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			label4 = claim_element(div9_nodes, "LABEL", { class: true, for: true });
			var label4_nodes = children(label4);
			t24 = claim_text(label4_nodes, "Alamat Lengkap");
			span3 = claim_element(label4_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			t25 = claim_text(span3_nodes, "*");
			span3_nodes.forEach(detach_dev);
			label4_nodes.forEach(detach_dev);
			t26 = claim_space(div9_nodes);

			textarea = claim_element(div9_nodes, "TEXTAREA", {
				class: true,
				rows: true,
				id: true,
				name: true,
				value: true,
				placeholder: true,
				required: true
			});

			children(textarea).forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t27 = claim_space(div15_nodes);
			if (if_block) if_block.l(div15_nodes);
			t28 = claim_space(div15_nodes);
			div12 = claim_element(div15_nodes, "DIV", { class: true });
			children(div12).forEach(detach_dev);
			t29 = claim_space(div15_nodes);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);

			svg1 = claim_element(
				div13_nodes,
				"svg",
				{
					"aria-hidden": true,
					"data-prefix": true,
					"data-icon": true,
					viewBox: true,
					width: true,
					height: true,
					class: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { fill: true, d: true }, 1);
			var path1_nodes = children(path1);
			path1_nodes.forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			t30 = claim_space(div13_nodes);
			span4 = claim_element(div13_nodes, "SPAN", {});
			var span4_nodes = children(span4);
			t31 = claim_text(span4_nodes, "Silahkan pilih dan klik kurir pengiriman!");
			span4_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t32 = claim_space(div34_nodes);
			div33 = claim_element(div34_nodes, "DIV", { class: true });
			var div33_nodes = children(div33);
			div31 = claim_element(div33_nodes, "DIV", { class: true });
			var div31_nodes = children(div31);
			header1 = claim_element(div31_nodes, "HEADER", { class: true });
			var header1_nodes = children(header1);
			h31 = claim_element(header1_nodes, "H3", { class: true });
			var h31_nodes = children(h31);
			t33 = claim_text(h31_nodes, "Ringkasan Pesanan");
			h31_nodes.forEach(detach_dev);
			header1_nodes.forEach(detach_dev);
			t34 = claim_space(div31_nodes);
			div18 = claim_element(div31_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			div16 = claim_element(div18_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			p1 = claim_element(div16_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t35 = claim_text(p1_nodes, "Subtotal ");
			span5 = claim_element(p1_nodes, "SPAN", {});
			var span5_nodes = children(span5);
			t36 = claim_text(span5_nodes, t36_value);
			span5_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			t37 = claim_space(div18_nodes);
			div17 = claim_element(div18_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			span6 = claim_element(div17_nodes, "SPAN", { class: true });
			children(span6).forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			t38 = claim_space(div31_nodes);
			div21 = claim_element(div31_nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			div19 = claim_element(div21_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			p2 = claim_element(div19_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t39 = claim_text(p2_nodes, "Berat Total");
			p2_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			t40 = claim_space(div21_nodes);
			div20 = claim_element(div21_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			span7 = claim_element(div20_nodes, "SPAN", { class: true });
			children(span7).forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			t41 = claim_space(div31_nodes);
			div24 = claim_element(div31_nodes, "DIV", { class: true });
			var div24_nodes = children(div24);
			div22 = claim_element(div24_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			p3 = claim_element(div22_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t42 = claim_text(p3_nodes, "Biaya Pengiriman");
			p3_nodes.forEach(detach_dev);
			div22_nodes.forEach(detach_dev);
			t43 = claim_space(div24_nodes);
			div23 = claim_element(div24_nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			span8 = claim_element(div23_nodes, "SPAN", { class: true });
			var span8_nodes = children(span8);
			t44 = claim_text(span8_nodes, "Pilih kurir dulu");
			span8_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			div24_nodes.forEach(detach_dev);
			t45 = claim_space(div31_nodes);
			div27 = claim_element(div31_nodes, "DIV", { class: true });
			var div27_nodes = children(div27);
			div25 = claim_element(div27_nodes, "DIV", { class: true });
			var div25_nodes = children(div25);
			span9 = claim_element(div25_nodes, "SPAN", { class: true });
			var span9_nodes = children(span9);

			input3 = claim_element(span9_nodes, "INPUT", {
				class: true,
				type: true,
				id: true,
				placeholder: true,
				value: true,
				height: true
			});

			span9_nodes.forEach(detach_dev);
			div25_nodes.forEach(detach_dev);
			t46 = claim_space(div27_nodes);
			div26 = claim_element(div27_nodes, "DIV", { class: true });
			var div26_nodes = children(div26);
			button1 = claim_element(div26_nodes, "BUTTON", { type: true, class: true });
			var button1_nodes = children(button1);
			t47 = claim_text(button1_nodes, "GUNAKAN");
			button1_nodes.forEach(detach_dev);
			div26_nodes.forEach(detach_dev);
			div27_nodes.forEach(detach_dev);
			t48 = claim_space(div31_nodes);
			div30 = claim_element(div31_nodes, "DIV", { class: true });
			var div30_nodes = children(div30);
			div28 = claim_element(div30_nodes, "DIV", { class: true });
			var div28_nodes = children(div28);
			h4 = claim_element(div28_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t49 = claim_text(h4_nodes, "Total Bayar");
			h4_nodes.forEach(detach_dev);
			div28_nodes.forEach(detach_dev);
			t50 = claim_space(div30_nodes);
			div29 = claim_element(div30_nodes, "DIV", { class: true });
			var div29_nodes = children(div29);
			span10 = claim_element(div29_nodes, "SPAN", { class: true });
			children(span10).forEach(detach_dev);
			div29_nodes.forEach(detach_dev);
			div30_nodes.forEach(detach_dev);
			div31_nodes.forEach(detach_dev);
			t51 = claim_space(div33_nodes);
			div32 = claim_element(div33_nodes, "DIV", { class: true });
			var div32_nodes = children(div32);

			button2 = claim_element(div32_nodes, "BUTTON", {
				type: true,
				class: true,
				formtarget: true
			});

			var button2_nodes = children(button2);
			span11 = claim_element(button2_nodes, "SPAN", {});
			var span11_nodes = children(span11);
			t52 = claim_text(span11_nodes, "Pesan Sekarang");
			span11_nodes.forEach(detach_dev);
			button2_nodes.forEach(detach_dev);
			div32_nodes.forEach(detach_dev);
			div33_nodes.forEach(detach_dev);
			div34_nodes.forEach(detach_dev);
			div35_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p0, "class", "mb-0");
			add_location(p0, file$2, 67, 20, 1740);
			attr_dev(path0, "fill", "currentColor");
			attr_dev(path0, "d", "M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z");
			add_location(path0, file$2, 75, 28, 2409);
			attr_dev(svg0, "aria-hidden", "true");
			attr_dev(svg0, "data-prefix", "far");
			attr_dev(svg0, "data-icon", "trash-alt");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "viewBox", "0 0 448 512");
			attr_dev(svg0, "class", "trash-alt_svg__svg-inline--fa trash-alt_svg__fa-trash-alt trash-alt_svg__fa-w-14 trash-alt_svg__fa-2x text-red-500 mx-auto");
			attr_dev(svg0, "width", "14px");
			attr_dev(svg0, "height", "14px");
			add_location(svg0, file$2, 71, 24, 2013);
			attr_dev(span0, "class", "ml-3");
			add_location(span0, file$2, 79, 24, 3069);
			attr_dev(button0, "class", "cart__item-btn flex items-center text-xs uppercase text-gray-500 hover:text-primary focus:outline-none");
			add_location(button0, file$2, 68, 20, 1797);
			attr_dev(div0, "class", "flex justify-between items-center text-gray-700 py-2 px-3");
			add_location(div0, file$2, 66, 16, 1647);
			attr_dev(div1, "class", "bg-grey pt-4");
			add_location(div1, file$2, 81, 16, 3156);
			attr_dev(div2, "class", "bg-grey pt-8");
			add_location(div2, file$2, 87, 16, 3375);
			attr_dev(h30, "class", "text-gray-700");
			add_location(h30, file$2, 92, 32, 3655);
			attr_dev(header0, "class", "checkout__form-header");
			add_location(header0, file$2, 91, 28, 3583);
			attr_dev(span1, "class", "text-red-500");
			add_location(span1, file$2, 96, 99, 3998);
			attr_dev(label0, "class", "block text-gray-700 mb-2");
			attr_dev(label0, "for", "name");
			add_location(label0, file$2, 96, 36, 3935);
			attr_dev(input0, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input0, "type", "text");
			attr_dev(input0, "id", "name");
			attr_dev(input0, "name", "Name");
			input0.value = "";
			attr_dev(input0, "placeholder", "Nama lengkap anda");
			input0.required = "";
			add_location(input0, file$2, 98, 36, 4124);
			attr_dev(div3, "class", "form-address__item col-span-1 mb-2");
			add_location(div3, file$2, 95, 32, 3849);
			attr_dev(label1, "class", "block text-gray-700 mb-2");
			attr_dev(label1, "for", "name");
			add_location(label1, file$2, 104, 36, 4586);
			attr_dev(input1, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input1, "type", "text");
			attr_dev(input1, "id", "email");
			attr_dev(input1, "name", "email");
			input1.value = "";
			attr_dev(input1, "placeholder", "Email anda");
			input1.required = "";
			add_location(input1, file$2, 105, 36, 4699);
			attr_dev(div4, "class", "form-address__item col-span-1 mb-2");
			add_location(div4, file$2, 103, 32, 4500);
			attr_dev(div5, "class", "grid grid-cols-2 gap-6");
			add_location(div5, file$2, 94, 28, 3779);
			attr_dev(span2, "class", "text-red-500");
			add_location(span2, file$2, 114, 96, 5309);
			attr_dev(label2, "class", "block text-gray-700 mb-2");
			attr_dev(label2, "for", "name");
			add_location(label2, file$2, 114, 36, 5249);
			attr_dev(input2, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input2, "type", "text");
			attr_dev(input2, "id", "phone");
			attr_dev(input2, "name", "HP");
			input2.value = "";
			attr_dev(input2, "placeholder", "No HP/Whatsapp anda");
			input2.required = "";
			add_location(input2, file$2, 116, 36, 5435);
			attr_dev(div6, "class", "form-address__item mb-2");
			add_location(div6, file$2, 113, 32, 5174);
			attr_dev(label3, "class", "block text-gray-700 mb-2");
			attr_dev(label3, "for", "name");
			add_location(label3, file$2, 122, 36, 5907);
			attr_dev(div7, "class", "form-address__item relative col-span-1 mb-2");
			add_location(div7, file$2, 121, 32, 5812);
			attr_dev(div8, "class", "grid grid-cols-2 gap-6");
			add_location(div8, file$2, 112, 28, 5104);
			attr_dev(span3, "class", "text-red-500");
			add_location(span3, file$2, 134, 97, 6695);
			attr_dev(label4, "class", "block text-gray-700 mb-2");
			attr_dev(label4, "for", "name");
			add_location(label4, file$2, 134, 32, 6630);
			attr_dev(textarea, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(textarea, "rows", "3");
			attr_dev(textarea, "id", "alamat");
			attr_dev(textarea, "name", "Alamat");
			textarea.value = "";
			attr_dev(textarea, "placeholder", "Masukkan alamat lengkap + kode POS anda");
			textarea.required = "";
			add_location(textarea, file$2, 136, 32, 6813);
			attr_dev(div9, "class", "form-address__item mb-2");
			add_location(div9, file$2, 133, 28, 6559);
			attr_dev(div10, "class", "checkout__form form-address");
			add_location(div10, file$2, 90, 24, 3512);
			attr_dev(form, "action", "");
			add_location(form, file$2, 89, 20, 3470);
			attr_dev(div11, "class", "py-4 px-4");
			add_location(div11, file$2, 88, 16, 3425);
			attr_dev(div12, "class", "bg-grey pt-8");
			add_location(div12, file$2, 149, 16, 7430);
			attr_dev(path1, "fill", "currentColor");
			attr_dev(path1, "d", "M280 192c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h240zm352 192h-24V275.9c0-16.8-6.8-33.3-18.8-45.2l-83.9-83.9c-11.8-12-28.3-18.8-45.2-18.8H416V78.6c0-25.7-22.2-46.6-49.4-46.6H113.4C86.2 32 64 52.9 64 78.6V96H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h240c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H96V78.6c0-8.1 7.8-14.6 17.4-14.6h253.2c9.6 0 17.4 6.5 17.4 14.6V384H207.6C193 364.7 170 352 144 352c-18.1 0-34.6 6.2-48 16.4V288H64v144c0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16h195.2c-1.1 5.2-1.6 10.5-1.6 16 0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16H632c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8zm-488 96c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm272-320h44.1c8.4 0 16.7 3.4 22.6 9.4l83.9 83.9c.8.8 1.1 1.9 1.8 2.8H416V160zm80 320c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-96h-16.4C545 364.7 522 352 496 352s-49 12.7-63.6 32H416v-96h160v96zM256 248v-16c0-4.4-3.6-8-8-8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h240c4.4 0 8-3.6 8-8z");
			add_location(path1, file$2, 156, 28, 8036);
			attr_dev(svg1, "aria-hidden", "true");
			attr_dev(svg1, "data-prefix", "fal");
			attr_dev(svg1, "data-icon", "shipping-fast");
			attr_dev(svg1, "viewBox", "0 0 640 512");
			attr_dev(svg1, "width", "36");
			attr_dev(svg1, "height", "36");
			attr_dev(svg1, "class", "shipping-fast_svg__svg-inline--fa shipping-fast_svg__fa-shipping-fast shipping-fast_svg__fa-w-20 shipping-fast_svg__fa-5x w-6 h-6 inline-block fill-current mr-2");
			add_location(svg1, file$2, 153, 24, 7666);
			add_location(span4, file$2, 160, 24, 9214);
			attr_dev(div13, "class", "flex items-center text-gray-600 border-b border-solid border-grey py-3 mb-4");
			add_location(div13, file$2, 152, 20, 7551);
			attr_dev(div14, "class", "form-address__item py-4 px-4 mb-4");
			add_location(div14, file$2, 151, 16, 7482);
			attr_dev(div15, "class", "col-span-8 bg-white");
			add_location(div15, file$2, 65, 12, 1596);
			attr_dev(h31, "class", "checkout-form__title text-gray-700");
			add_location(h31, file$2, 169, 24, 9538);
			attr_dev(header1, "class", "checkout-form__header");
			add_location(header1, file$2, 168, 20, 9474);
			add_location(span5, file$2, 174, 53, 9942);
			attr_dev(p1, "class", "mb-0");
			add_location(p1, file$2, 174, 28, 9917);
			attr_dev(div16, "class", "checkout-form--left");
			add_location(div16, file$2, 173, 24, 9854);
			attr_dev(span6, "class", "checkout-form__subtotal");
			add_location(span6, file$2, 177, 28, 10105);
			attr_dev(div17, "class", "checkout-form--right");
			add_location(div17, file$2, 176, 24, 10041);
			attr_dev(div18, "class", "checkout-form__box checkout-form__footer flex justify-between items-center text-sm text-gray-700 border-t border-dashed pt-2 mb-3");
			add_location(div18, file$2, 171, 20, 9660);
			attr_dev(p2, "class", "mb-0");
			add_location(p2, file$2, 182, 28, 10414);
			attr_dev(div19, "class", "checkout-form--left");
			add_location(div19, file$2, 181, 24, 10351);
			attr_dev(span7, "class", "checkout-form__weight-total");
			add_location(span7, file$2, 185, 28, 10567);
			attr_dev(div20, "class", "checkout-form--right");
			add_location(div20, file$2, 184, 24, 10503);
			attr_dev(div21, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 mb-3");
			add_location(div21, file$2, 180, 20, 10232);
			attr_dev(p3, "class", "mb-0");
			add_location(p3, file$2, 190, 28, 10880);
			attr_dev(div22, "class", "checkout-form--left");
			add_location(div22, file$2, 189, 24, 10817);
			attr_dev(span8, "class", "checkout-form__cost-courier");
			add_location(span8, file$2, 193, 28, 11038);
			attr_dev(div23, "class", "checkout-form--right");
			add_location(div23, file$2, 192, 24, 10974);
			attr_dev(div24, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 mb-3");
			add_location(div24, file$2, 188, 20, 10698);
			attr_dev(input3, "class", "w-full text-sm border border-solid rounded-sm focus:outline-none py-3px px-3");
			attr_dev(input3, "type", "text");
			attr_dev(input3, "id", "automation-voucher-input");
			attr_dev(input3, "placeholder", "Masukkan Kode Voucher");
			input3.value = "";
			attr_dev(input3, "height", "100%");
			add_location(input3, file$2, 198, 53, 11393);
			attr_dev(span9, "class", "next-input");
			add_location(span9, file$2, 198, 28, 11368);
			attr_dev(div25, "class", "flex-grow w-3/5 mr-4");
			add_location(div25, file$2, 197, 24, 11304);
			attr_dev(button1, "type", "button");
			attr_dev(button1, "class", "text-white leading-none flex bg-teal-500 hover:bg-teal-400 items-center focus:outline-none rounded py-2 px-4");
			add_location(button1, file$2, 204, 28, 11815);
			attr_dev(div26, "class", "flex-none");
			add_location(div26, file$2, 203, 24, 11762);
			attr_dev(div27, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 mb-3");
			add_location(div27, file$2, 196, 20, 11185);
			attr_dev(h4, "class", "mb-0");
			add_location(h4, file$2, 211, 28, 12304);
			attr_dev(div28, "class", "checkout-form--left");
			add_location(div28, file$2, 210, 24, 12241);
			attr_dev(span10, "class", "text-primary");
			add_location(span10, file$2, 214, 28, 12459);
			attr_dev(div29, "class", "checkout-form--right");
			add_location(div29, file$2, 213, 24, 12395);
			attr_dev(div30, "class", "checkout-form__box flex justify-between items-center text-sm text-gray-700 font-medium mb-3");
			add_location(div30, file$2, 208, 20, 12085);
			attr_dev(div31, "class", "checkout-form__info");
			add_location(div31, file$2, 167, 16, 9419);
			add_location(span11, file$2, 222, 24, 12942);
			attr_dev(button2, "type", "submit");
			attr_dev(button2, "class", "checkout-form__btn w-full text-white text-center leading-none uppercase flex bg-green-500 hover:bg-green-400 items-center focus:outline-none rounded py-2 px-4");
			attr_dev(button2, "formtarget", "_blank");
			add_location(button2, file$2, 219, 20, 12657);
			attr_dev(div32, "class", "checkout-form__button pt-8");
			add_location(div32, file$2, 218, 16, 12595);
			attr_dev(div33, "class", "col-span-4 bg-white py-4 px-4");
			add_location(div33, file$2, 166, 12, 9358);
			attr_dev(div34, "class", "grid grid-cols-12 gap-8");
			add_location(div34, file$2, 64, 8, 1545);
			attr_dev(div35, "class", "checkout-box container w-full max-w-screen-xl mx-auto px-3 lg:px-12 pb-4");
			add_location(div35, file$2, 63, 4, 1449);
			attr_dev(section, "class", "block__checkout-order bg-grey pt-8");
			add_location(section, file$2, 62, 0, 1391);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, section, anchor);
			append_dev(section, div35);
			append_dev(div35, div34);
			append_dev(div34, div15);
			append_dev(div15, div0);
			append_dev(div0, p0);
			append_dev(p0, t0);
			append_dev(div0, t1);
			append_dev(div0, button0);
			append_dev(button0, svg0);
			append_dev(svg0, path0);
			append_dev(button0, t2);
			append_dev(button0, span0);
			append_dev(span0, t3);
			append_dev(div15, t4);
			append_dev(div15, div1);
			append_dev(div15, t5);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div15, null);
			}

			append_dev(div15, t6);
			append_dev(div15, div2);
			append_dev(div15, t7);
			append_dev(div15, div11);
			append_dev(div11, form);
			append_dev(form, div10);
			append_dev(div10, header0);
			append_dev(header0, h30);
			append_dev(h30, t8);
			append_dev(div10, t9);
			append_dev(div10, div5);
			append_dev(div5, div3);
			append_dev(div3, label0);
			append_dev(label0, t10);
			append_dev(label0, span1);
			append_dev(span1, t11);
			append_dev(div3, t12);
			append_dev(div3, input0);
			append_dev(div5, t13);
			append_dev(div5, div4);
			append_dev(div4, label1);
			append_dev(label1, t14);
			append_dev(div4, t15);
			append_dev(div4, input1);
			append_dev(div10, t16);
			append_dev(div10, div8);
			append_dev(div8, div6);
			append_dev(div6, label2);
			append_dev(label2, t17);
			append_dev(label2, span2);
			append_dev(span2, t18);
			append_dev(div6, t19);
			append_dev(div6, input2);
			append_dev(div8, t20);
			append_dev(div8, div7);
			append_dev(div7, label3);
			append_dev(label3, t21);
			append_dev(div7, t22);
			mount_component(autocomplete, div7, null);
			append_dev(div10, t23);
			append_dev(div10, div9);
			append_dev(div9, label4);
			append_dev(label4, t24);
			append_dev(label4, span3);
			append_dev(span3, t25);
			append_dev(div9, t26);
			append_dev(div9, textarea);
			append_dev(div15, t27);
			if (if_block) if_block.m(div15, null);
			append_dev(div15, t28);
			append_dev(div15, div12);
			append_dev(div15, t29);
			append_dev(div15, div14);
			append_dev(div14, div13);
			append_dev(div13, svg1);
			append_dev(svg1, path1);
			append_dev(div13, t30);
			append_dev(div13, span4);
			append_dev(span4, t31);
			append_dev(div34, t32);
			append_dev(div34, div33);
			append_dev(div33, div31);
			append_dev(div31, header1);
			append_dev(header1, h31);
			append_dev(h31, t33);
			append_dev(div31, t34);
			append_dev(div31, div18);
			append_dev(div18, div16);
			append_dev(div16, p1);
			append_dev(p1, t35);
			append_dev(p1, span5);
			append_dev(span5, t36);
			append_dev(div18, t37);
			append_dev(div18, div17);
			append_dev(div17, span6);
			append_dev(div31, t38);
			append_dev(div31, div21);
			append_dev(div21, div19);
			append_dev(div19, p2);
			append_dev(p2, t39);
			append_dev(div21, t40);
			append_dev(div21, div20);
			append_dev(div20, span7);
			append_dev(div31, t41);
			append_dev(div31, div24);
			append_dev(div24, div22);
			append_dev(div22, p3);
			append_dev(p3, t42);
			append_dev(div24, t43);
			append_dev(div24, div23);
			append_dev(div23, span8);
			append_dev(span8, t44);
			append_dev(div31, t45);
			append_dev(div31, div27);
			append_dev(div27, div25);
			append_dev(div25, span9);
			append_dev(span9, input3);
			append_dev(div27, t46);
			append_dev(div27, div26);
			append_dev(div26, button1);
			append_dev(button1, t47);
			append_dev(div31, t48);
			append_dev(div31, div30);
			append_dev(div30, div28);
			append_dev(div28, h4);
			append_dev(h4, t49);
			append_dev(div30, t50);
			append_dev(div30, div29);
			append_dev(div29, span10);
			append_dev(div33, t51);
			append_dev(div33, div32);
			append_dev(div32, button2);
			append_dev(button2, span11);
			append_dev(span11, t52);
			current = true;
			if (remount) dispose();
			dispose = listen_dev(button0, "click", /*clearCart*/ ctx[4], false, false, false);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$carts, localPrice*/ 8) {
				each_value = /*$carts*/ ctx[3];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div15, t6);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}

			const autocomplete_changes = {};
			if (dirty & /*districts*/ 1) autocomplete_changes.items = /*districts*/ ctx[0];

			if (!updating_selectedItem && dirty & /*selectedDistrict*/ 2) {
				updating_selectedItem = true;
				autocomplete_changes.selectedItem = /*selectedDistrict*/ ctx[1];
				add_flush_callback(() => updating_selectedItem = false);
			}

			autocomplete.$set(autocomplete_changes);

			if (/*selectedDistrict*/ ctx[1] !== undefined) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					if_block.m(div15, t28);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if ((!current || dirty & /*totalPrice*/ 4) && t36_value !== (t36_value = localPrice(/*totalPrice*/ ctx[2]) + "")) set_data_dev(t36, t36_value);
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			transition_in(autocomplete.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(autocomplete.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
			destroy_component(autocomplete);
			if (if_block) if_block.d();
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function localPrice(amount) {
	return amount.toLocaleString("id-ID", {
		style: "currency",
		currency: "IDR",
		minimumFractionDigits: 0,
		maximumFractionDigits: 0
	});
}

function instance$2($$self, $$props, $$invalidate) {
	let $carts;
	validate_store(carts, "carts");
	component_subscribe($$self, carts, $$value => $$invalidate(3, $carts = $$value));
	let { districts } = $$props;
	console.log(districts);
	let selectedDistrict;

	if (selectedDistrict !== undefined) {
		console.log("update kec:" + selectedDistrict);
	}

	let kecamatan;
	console.log(kecamatan);

	onMount(() => {
		carts.useLocalStorage();
	});

	let itemInCart = 0;
	let totalPrice = 0;
	let visible = false;

	const clearCart = () => {
		set_store_value(carts, $carts = []);
	};

	function toggle() {
		visible = !visible;
	}

	const writable_props = ["districts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$2.warn(`<Checkout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Checkout", $$slots, []);

	function autocomplete_selectedItem_binding(value) {
		selectedDistrict = value;
		$$invalidate(1, selectedDistrict);
	}

	$$self.$set = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
	};

	$$self.$capture_state = () => ({
		fly,
		carts,
		Item: CheckoutProduct,
		onMount,
		AutoComplete,
		districts,
		selectedDistrict,
		kecamatan,
		itemInCart,
		totalPrice,
		visible,
		clearCart,
		localPrice,
		toggle,
		$carts
	});

	$$self.$inject_state = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
		if ("selectedDistrict" in $$props) $$invalidate(1, selectedDistrict = $$props.selectedDistrict);
		if ("kecamatan" in $$props) kecamatan = $$props.kecamatan;
		if ("itemInCart" in $$props) itemInCart = $$props.itemInCart;
		if ("totalPrice" in $$props) $$invalidate(2, totalPrice = $$props.totalPrice);
		if ("visible" in $$props) visible = $$props.visible;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*selectedDistrict*/ 2) {
			 console.log("update kec:" + selectedDistrict);
		}

		if ($$self.$$.dirty & /*selectedDistrict*/ 2) {
			 kecamatan = selectedDistrict !== undefined
			? selectedDistrict.id
			: "belum ada";
		}

		if ($$self.$$.dirty & /*$carts*/ 8) {
			 {
				let qty = 0;
				let price = 0;

				for (let item of $carts) {
					qty += item.quantity;
					price += item.price * item.quantity;
				}

				itemInCart = qty;
				$$invalidate(2, totalPrice = price);
			}
		}
	};

	return [
		districts,
		selectedDistrict,
		totalPrice,
		$carts,
		clearCart,
		kecamatan,
		itemInCart,
		visible,
		toggle,
		autocomplete_selectedItem_binding
	];
}

class Checkout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { districts: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Checkout",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*districts*/ ctx[0] === undefined && !("districts" in props)) {
			console_1$2.warn("<Checkout> was created without expected prop 'districts'");
		}
	}

	get districts() {
		throw new Error("<Checkout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set districts(value) {
		throw new Error("<Checkout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/checkout.svelte generated by Svelte v3.21.0 */

const { console: console_1$3 } = globals;

function create_fragment$3(ctx) {
	let t;
	let current;

	const checkout = new Checkout({
			props: { districts: /*districts*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			t = space();
			create_component(checkout.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1bunxp4\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			claim_component(checkout.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Checkout";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(checkout, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const checkout_changes = {};
			if (dirty & /*districts*/ 1) checkout_changes.districts = /*districts*/ ctx[0];
			checkout.$set(checkout_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(checkout.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(checkout.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			destroy_component(checkout, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	const res = await this.fetch("api/destination.json");
	const districts = await res.json();
	return { districts };
}

function instance$3($$self, $$props, $$invalidate) {
	let { districts } = $$props;
	console.log(districts);
	const writable_props = ["districts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$3.warn(`<Checkout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Checkout", $$slots, []);

	$$self.$set = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
	};

	$$self.$capture_state = () => ({ preload, Checkout, districts });

	$$self.$inject_state = $$props => {
		if ("districts" in $$props) $$invalidate(0, districts = $$props.districts);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [districts];
}

class Checkout_1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { districts: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Checkout_1",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*districts*/ ctx[0] === undefined && !("districts" in props)) {
			console_1$3.warn("<Checkout> was created without expected prop 'districts'");
		}
	}

	get districts() {
		throw new Error("<Checkout>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set districts(value) {
		throw new Error("<Checkout>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Checkout_1;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQuZDNiMDRlNzkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NoZWNrb3V0UHJvZHVjdC5zdmVsdGUiLCIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9BdXRvQ29tcGxldGUuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQ2hlY2tvdXQuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL3JvdXRlcy9jaGVja291dC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cclxuICAgIGltcG9ydCB7IGNhcnRzIH0gZnJvbSAnLi9jYXJ0LmpzJ1xyXG4gICAgZXhwb3J0IGxldCBwcm9kdWN0ID0ge31cclxuICAgIGV4cG9ydCBsZXQgcHJpY2UgPSAwXHJcbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJ1xyXG5cclxuICAgIG9uTW91bnQoKCkgPT4ge1xyXG4gICAgICAgIGNhcnRzLnVzZUxvY2FsU3RvcmFnZSgpO1xyXG4gICAgfSlcclxuXHJcbiAgICBsZXQgZGlzYWJsZWQgPSBmYWxzZVxyXG4gICAgXHJcbiAgICBjb25zdCBpbmNyZWFzZUJ0biA9ICgpID0+IHtcclxuICAgICAgICBwcm9kdWN0LnF1YW50aXR5KytcclxuICAgICAgICAkY2FydHMgPSAkY2FydHNcclxuICAgICAgICBkaXNhYmxlZCA9IGZhbHNlXHJcbiAgICB9XHJcbiAgICBjb25zdCBkZWNyZWFzZUJ0biA9ICgpID0+IHtcclxuICAgICAgICBwcm9kdWN0LnF1YW50aXR5LS1cclxuICAgICAgICAkY2FydHMgPSAkY2FydHNcclxuICAgICAgICBpZiAocHJvZHVjdC5xdWFudGl0eSA9PSAxKSBkaXNhYmxlZCA9IHRydWVcclxuICAgIH1cclxuICAgIGNvbnN0IGRlbGV0ZVByb2R1Y3QgPSAoKSA9PiB7XHJcbiAgICAgICAgJGNhcnRzID0gJGNhcnRzLmZpbHRlciggaXRlbSA9PiBwcm9kdWN0LnNrdSAhPSBpdGVtLnNrdSApXHJcbiAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjYXJ0JyArIHByb2R1Y3QpXHJcbjwvc2NyaXB0PlxyXG5cclxuPGRpdiBjbGFzcz1cImNoZWNrb3V0IGdyaWQgZ3JpZC1jb2xzLTcgZ3JpZC1yb3dzLTIgaXRlbXMtY2VudGVyIHB5LTMgcHgtNCBmaXJzdDpwdC02IGxhc3Q6bWItNFwiPlxyXG4gICAgPGZpZ3VyZSBjbGFzcz1cImNvbC1zcGFuLTEgcm93LXNwYW4tMiBwci0yIGxnOnByLTRcIj5cclxuICAgICAgICA8aW1nIGFsdD1cIntwcm9kdWN0Lm5hbWV9XCIgc3JjPVwiaHR0cHM6Ly9oaWphY2tldC1hcGkubmV0bGlmeS5hcHAvY2Fyb3VzZWx7cHJvZHVjdC5pbWFnZX1cIiBjbGFzcz1cImNhcnRfX2l0ZW0tdGh1bWIgY2FydF9faXRlbS1pbWFnZVwiIHdpZHRoPVwiNjBcIiBoZWlnaHQ9XCI2MFwiPlxyXG4gICAgPC9maWd1cmU+XHJcbiAgICA8aDMgY2xhc3M9XCJjaGVja291dF9faXRlbS1uYW1lIGNvbC1zcGFuLTQgdGV4dC1zbSBsZzp0ZXh0LWxnIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMFwiPntwcm9kdWN0Lm5hbWV9Jm5ic3A7e3Byb2R1Y3Quc2l6ZX08L2gzPlxyXG4gICAgPHNwYW5cclxuICAgICAgICBjbGFzcz1cImNoZWNrb3V0X19wcmljZS10b3RhbCBjb2wtc3Bhbi0yIHRleHQteHMgbGc6dGV4dC1iYXNlIHRleHQtZ3JheS03MDAgdGV4dC1yaWdodCBmb250LW1lZGl1bVwiPjwvc3Bhbj5cclxuICAgIDxkaXYgY2xhc3M9XCJjaGVja291dF9fY291bnRlciBjb2wtc3Bhbi0yXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImlubGluZS1ibG9jayB0ZXh0LXhzIHRleHQtZ3JheS02MDBcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImNoZWNrb3V0X19kZWNyZWFzZSBiZy1ncmF5LTEwMCBmb2N1czpvdXRsaW5lLW5vbmUgcHktNHB4IHB4LTIgYnRuLS1zbWFsbFwiIG9uOmNsaWNrPXtkZWNyZWFzZUJ0bn0ge2Rpc2FibGVkfT4mbWludXM7PC9idXR0b24+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY2hlY2tvdXRfX3F0eSBmb2N1czpvdXRsaW5lLW5vbmUgcHktNXB4IHB4LTJcIj57cHJvZHVjdC5xdWFudGl0eX08L3NwYW4+XHJcbiAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgIGNsYXNzPVwiY2hlY2tvdXRfX2luY3JlYXNlIGJnLWdyYXktMTAwIGhvdmVyOmJnLWdyZXkgZm9jdXM6b3V0bGluZS1ub25lIHB5LTRweCBweC0yXCJcclxuICAgICAgICAgICAgICAgIG9uOmNsaWNrPXtpbmNyZWFzZUJ0bn0+JnBsdXM7PC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxzcGFuIGNsYXNzPVwiY2hlY2tvdXRfX3ByaWNlIGNvbC1zcGFuLTIgdGV4dC14cyBsZzp0ZXh0LWJhc2UgdGV4dC1wcmltYXJ5XCI+e3ByaWNlfTwvc3Bhbj5cclxuICAgIDxzcGFuIGNsYXNzPVwiY2hlY2tvdXRfX3dlaWdodCBjb2wtc3Bhbi0xIHRleHQteHMgbGc6dGV4dC1iYXNlXCJcclxuICAgICAgICB4LXRleHQ9XCJjYXJ0LndlaWdodCArICcgZ3JhbSdcIj48L3NwYW4+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiY2hlY2tvdXRfX3JlbW92ZSBjb2wtc3Bhbi0xIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktZW5kXCJcclxuICAgICAgICBvbjpjbGljaz17ZGVsZXRlUHJvZHVjdH0+XHJcbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLXByZWZpeD1cImZhclwiIGRhdGEtaWNvbj1cInRpbWVzXCIgdmlld0JveD1cIjAgMCAzMjAgNTEyXCJcclxuICAgICAgICAgICAgd2lkdGg9XCIxNnB4XCIgaGVpZ2h0PVwiMTZweFwiXHJcbiAgICAgICAgICAgIGNsYXNzPVwidGltZXNfc3ZnX19zdmctaW5saW5lLS1mYSB0aW1lc19zdmdfX2ZhLXRpbWVzIHRpbWVzX3N2Z19fZmEtdy0xMCB0aW1lc19zdmdfX2ZhLTJ4IGNhcnRfX2ljb24gaW5saW5lLWJsb2NrIHRleHQtcmVkLTUwMCBtci0yXCI+XHJcbiAgICAgICAgICAgIDxwYXRoIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxyXG4gICAgICAgICAgICAgICAgZD1cIk0yMDcuNiAyNTZsMTA3LjcyLTEwNy43MmM2LjIzLTYuMjMgNi4yMy0xNi4zNCAwLTIyLjU4bC0yNS4wMy0yNS4wM2MtNi4yMy02LjIzLTE2LjM0LTYuMjMtMjIuNTggMEwxNjAgMjA4LjQgNTIuMjggMTAwLjY4Yy02LjIzLTYuMjMtMTYuMzQtNi4yMy0yMi41OCAwTDQuNjggMTI1LjdjLTYuMjMgNi4yMy02LjIzIDE2LjM0IDAgMjIuNThMMTEyLjQgMjU2IDQuNjggMzYzLjcyYy02LjIzIDYuMjMtNi4yMyAxNi4zNCAwIDIyLjU4bDI1LjAzIDI1LjAzYzYuMjMgNi4yMyAxNi4zNCA2LjIzIDIyLjU4IDBMMTYwIDMwMy42bDEwNy43MiAxMDcuNzJjNi4yMyA2LjIzIDE2LjM0IDYuMjMgMjIuNTggMGwyNS4wMy0yNS4wM2M2LjIzLTYuMjMgNi4yMy0xNi4zNCAwLTIyLjU4TDIwNy42IDI1NnpcIj5cclxuICAgICAgICAgICAgPC9wYXRoPlxyXG4gICAgICAgIDwvc3ZnPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC14cyB0ZXh0LWdyYXktNjAwIHVwcGVyY2FzZVwiPmhhcHVzPC9zcGFuPlxyXG4gICAgPC9idXR0b24+XHJcbjwvZGl2PiIsIjxzY3JpcHQ+XHJcbiAgLy8gdGhlIGxpc3Qgb2YgaXRlbXMgIHRoZSB1c2VyIGNhbiBzZWxlY3QgZnJvbVxyXG4gIGV4cG9ydCBsZXQgaXRlbXM7XHJcbiAgLy8gZmllbGQgb2YgZWFjaCBpdGVtIHRoYXQncyB1c2VkIGZvciB0aGUgbGFiZWxzIGluIHRoZSBsaXN0XHJcbiAgZXhwb3J0IGxldCBsYWJlbEZpZWxkTmFtZSA9IHVuZGVmaW5lZDtcclxuICBleHBvcnQgbGV0IGtleXdvcmRzRmllbGROYW1lID0gbGFiZWxGaWVsZE5hbWU7XHJcbiAgZXhwb3J0IGxldCB2YWx1ZUZpZWxkTmFtZSA9IHVuZGVmaW5lZDtcclxuICBleHBvcnQgbGV0IGxhYmVsRnVuY3Rpb24gPSBmdW5jdGlvbihpdGVtKSB7XHJcbiAgICBpZiAoaXRlbSA9PT0gdW5kZWZpbmVkIHx8IGl0ZW0gPT09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbGFiZWxGaWVsZE5hbWUgPyBpdGVtW2xhYmVsRmllbGROYW1lXSA6IGl0ZW07XHJcbiAgfTtcclxuICBleHBvcnQgbGV0IGtleXdvcmRzRnVuY3Rpb24gPSBmdW5jdGlvbihpdGVtKSB7XHJcbiAgICBpZiAoaXRlbSA9PT0gdW5kZWZpbmVkIHx8IGl0ZW0gPT09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ga2V5d29yZHNGaWVsZE5hbWUgPyBpdGVtW2tleXdvcmRzRmllbGROYW1lXSA6IGl0ZW07XHJcbiAgfTtcclxuICBleHBvcnQgbGV0IHZhbHVlRnVuY3Rpb24gPSBmdW5jdGlvbihpdGVtKSB7XHJcbiAgICBpZiAoaXRlbSA9PT0gdW5kZWZpbmVkIHx8IGl0ZW0gPT09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIGl0ZW07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsdWVGaWVsZE5hbWUgPyBpdGVtW3ZhbHVlRmllbGROYW1lXSA6IGl0ZW07XHJcbiAgfTtcclxuICBleHBvcnQgbGV0IGtleXdvcmRzQ2xlYW5GdW5jdGlvbiA9IGZ1bmN0aW9uKGtleXdvcmRzKSB7XHJcbiAgICByZXR1cm4ga2V5d29yZHM7XHJcbiAgfTtcclxuICBleHBvcnQgbGV0IHRleHRDbGVhbkZ1bmN0aW9uID0gZnVuY3Rpb24odXNlckVudGVyZWRUZXh0KSB7XHJcbiAgICByZXR1cm4gdXNlckVudGVyZWRUZXh0O1xyXG4gIH07XHJcbiAgZXhwb3J0IGxldCBiZWZvcmVDaGFuZ2UgPSBmdW5jdGlvbihvbGRTZWxlY3RlZEl0ZW0sIG5ld1NlbGVjdGVkSXRlbSkge1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfTtcclxuICBleHBvcnQgbGV0IG9uQ2hhbmdlID0gZnVuY3Rpb24obmV3U2VsZWN0ZWRJdGVtKSB7fTtcclxuICBleHBvcnQgbGV0IHNlbGVjdEZpcnN0SWZFbXB0eSA9IGZhbHNlO1xyXG4gIGV4cG9ydCBsZXQgbWluQ2hhcmFjdGVyc1RvU2VhcmNoID0gMTtcclxuICBleHBvcnQgbGV0IG1heEl0ZW1zVG9TaG93SW5MaXN0ID0gMDtcclxuICBleHBvcnQgbGV0IG5vUmVzdWx0c1RleHQgPSBcIk5vIHJlc3VsdHMgZm91bmRcIjtcclxuICBjb25zdCB1bmlxdWVJZCA9IFwic2F1dG9jb21wbGV0ZS1cIiArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApO1xyXG4gIGZ1bmN0aW9uIHNhZmVTdHJpbmdGdW5jdGlvbih0aGVGdW5jdGlvbiwgYXJndW1lbnQpIHtcclxuICAgIGlmICh0eXBlb2YgdGhlRnVuY3Rpb24gIT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiTm90IGEgZnVuY3Rpb246IFwiICsgdGhlRnVuY3Rpb24gKyBcIiwgYXJndW1lbnQ6IFwiICsgYXJndW1lbnRcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIGxldCBvcmlnaW5hbFJlc3VsdDtcclxuICAgIHRyeSB7XHJcbiAgICAgIG9yaWdpbmFsUmVzdWx0ID0gdGhlRnVuY3Rpb24oYXJndW1lbnQpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS53YXJuKFxyXG4gICAgICAgIFwiRXJyb3IgZXhlY3V0aW5nIEF1dG9jb21wbGV0ZSBmdW5jdGlvbiBvbiB2YWx1ZTogXCIgK1xyXG4gICAgICAgICAgYXJndW1lbnQgK1xyXG4gICAgICAgICAgXCIgZnVuY3Rpb246IFwiICtcclxuICAgICAgICAgIHRoZUZ1bmN0aW9uXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBsZXQgcmVzdWx0ID0gb3JpZ2luYWxSZXN1bHQ7XHJcbiAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQgfHwgcmVzdWx0ID09PSBudWxsKSB7XHJcbiAgICAgIHJlc3VsdCA9IFwiXCI7XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIHJlc3VsdCAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICByZXN1bHQgPSByZXN1bHQudG9TdHJpbmcoKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHNhZmVMYWJlbEZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwibGFiZWxGdW5jdGlvbjogXCIgKyBsYWJlbEZ1bmN0aW9uKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwic2FmZUxhYmVsRnVuY3Rpb24sIGl0ZW06IFwiICsgaXRlbSk7XHJcbiAgICByZXR1cm4gc2FmZVN0cmluZ0Z1bmN0aW9uKGxhYmVsRnVuY3Rpb24sIGl0ZW0pO1xyXG4gIH1cclxuICBmdW5jdGlvbiBzYWZlS2V5d29yZHNGdW5jdGlvbihpdGVtKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhcInNhZmVLZXl3b3Jkc0Z1bmN0aW9uXCIpO1xyXG4gICAgY29uc3Qga2V5d29yZHMgPSBzYWZlU3RyaW5nRnVuY3Rpb24oa2V5d29yZHNGdW5jdGlvbiwgaXRlbSk7XHJcbiAgICBsZXQgcmVzdWx0ID0gc2FmZVN0cmluZ0Z1bmN0aW9uKGtleXdvcmRzQ2xlYW5GdW5jdGlvbiwga2V5d29yZHMpO1xyXG4gICAgcmVzdWx0ID0gcmVzdWx0LnRvTG93ZXJDYXNlKCkudHJpbSgpO1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICAgIFwiRXh0cmFjdGVkIGtleXdvcmRzOiAnXCIgK1xyXG4gICAgICAgICAgcmVzdWx0ICtcclxuICAgICAgICAgIFwiJyBmcm9tIGl0ZW06IFwiICtcclxuICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGl0ZW0pXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICAvLyB0aGUgdGV4dCBkaXNwbGF5ZWQgd2hlbiBubyBvcHRpb24gaXMgc2VsZWN0ZWRcclxuICBleHBvcnQgbGV0IHBsYWNlaG9sZGVyID0gdW5kZWZpbmVkO1xyXG4gIC8vIGFwcGx5IGEgY2xhc3NOYW1lIHRvIHRoZSBjb250cm9sXHJcbiAgZXhwb3J0IGxldCBjbGFzc05hbWUgPSB1bmRlZmluZWQ7XHJcbiAgLy8gZ2VuZXJhdGUgYW4gSFRNTCBpbnB1dCB3aXRoIHRoaXMgbmFtZSwgY29udGFpbmluZyB0aGUgY3VycmVudCB2YWx1ZVxyXG4gIGV4cG9ydCBsZXQgbmFtZSA9IHVuZGVmaW5lZDtcclxuICAvLyBhZGRzIHRoZSBkaXNhYmxlZCB0YWcgdG8gdGhlIEhUTUwgaW5wdXRcclxuICBleHBvcnQgbGV0IGRpc2FibGVkID0gZmFsc2U7XHJcbiAgLy8gYWRkIHRoZSB0aXRsZSB0byB0aGUgSFRNTCBpbnB1dFxyXG4gIGV4cG9ydCBsZXQgdGl0bGUgPSB1bmRlZmluZWQ7XHJcbiAgZXhwb3J0IGxldCBkZWJ1ZyA9IGZhbHNlO1xyXG4gIC8vIHNlbGVjdGVkIGl0ZW0gc3RhdGVcclxuICBleHBvcnQgbGV0IHNlbGVjdGVkSXRlbSA9IHVuZGVmaW5lZDtcclxuICBleHBvcnQgbGV0IHZhbHVlID0gdW5kZWZpbmVkO1xyXG4gIGxldCB0ZXh0O1xyXG4gIGxldCBmaWx0ZXJlZFRleHRMZW5ndGggPSAwO1xyXG4gIGZ1bmN0aW9uIG9uU2VsZWN0ZWRJdGVtQ2hhbmdlZCgpIHtcclxuICAgIHZhbHVlID0gdmFsdWVGdW5jdGlvbihzZWxlY3RlZEl0ZW0pO1xyXG4gICAgdGV4dCA9IHNhZmVMYWJlbEZ1bmN0aW9uKHNlbGVjdGVkSXRlbSk7XHJcbiAgICBvbkNoYW5nZShzZWxlY3RlZEl0ZW0pO1xyXG4gIH1cclxuICAkOiBzZWxlY3RlZEl0ZW0sIG9uU2VsZWN0ZWRJdGVtQ2hhbmdlZCgpO1xyXG4gICQ6IGNvbnNvbGUubG9nKHNlbGVjdGVkSXRlbSlcclxuICAvLyBIVE1MIGVsZW1lbnRzXHJcbiAgbGV0IGlucHV0O1xyXG4gIGxldCBsaXN0O1xyXG4gIC8vIFVJIHN0YXRlXHJcbiAgbGV0IG9wZW5lZCA9IGZhbHNlO1xyXG4gIGxldCBoaWdobGlnaHRJbmRleCA9IC0xO1xyXG4gIC8vIHZpZXcgbW9kZWxcclxuICBsZXQgZmlsdGVyZWRMaXN0SXRlbXM7XHJcbiAgbGV0IGxpc3RJdGVtcyA9IFtdO1xyXG4gIGZ1bmN0aW9uIHByZXBhcmVMaXN0SXRlbXMoKSB7XHJcbiAgICBsZXQgdFN0YXJ0O1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIHRTdGFydCA9IHBlcmZvcm1hbmNlLm5vdygpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcInByZXBhcmUgaXRlbXMgdG8gc2VhcmNoXCIpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIml0ZW1zOiBcIiArIEpTT04uc3RyaW5naWZ5KGl0ZW1zKSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBsZW5ndGggPSBpdGVtcyA/IGl0ZW1zLmxlbmd0aCA6IDA7XHJcbiAgICBsaXN0SXRlbXMgPSBuZXcgQXJyYXkobGVuZ3RoKTtcclxuICAgIGlmIChsZW5ndGggPiAwKSB7XHJcbiAgICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0sIGkpID0+IHtcclxuICAgICAgICBsaXN0SXRlbXNbaV0gPSBnZXRMaXN0SXRlbShpdGVtKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc3QgdEVuZCA9IHBlcmZvcm1hbmNlLm5vdygpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICBsaXN0SXRlbXMubGVuZ3RoICtcclxuICAgICAgICAgIFwiIGl0ZW1zIHRvIHNlYXJjaCBwcmVwYXJlZCBpbiBcIiArXHJcbiAgICAgICAgICAodEVuZCAtIHRTdGFydCkgK1xyXG4gICAgICAgICAgXCIgbWlsbGlzZWNvbmRzXCJcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gZ2V0TGlzdEl0ZW0oaXRlbSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLy8ga2V5d29yZHMgcmVwcmVzZW50YXRpb24gb2YgdGhlIGl0ZW1cclxuICAgICAga2V5d29yZHM6IHNhZmVLZXl3b3Jkc0Z1bmN0aW9uKGl0ZW0pLFxyXG4gICAgICAvLyBpdGVtIGxhYmVsXHJcbiAgICAgIGxhYmVsOiBzYWZlTGFiZWxGdW5jdGlvbihpdGVtKSxcclxuICAgICAgLy8gc3RvcmUgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaWFsIGl0ZW1cclxuICAgICAgaXRlbTogaXRlbVxyXG4gICAgfTtcclxuICB9XHJcbiAgJDogaXRlbXMsIHByZXBhcmVMaXN0SXRlbXMoKTtcclxuICBmdW5jdGlvbiBwcmVwYXJlVXNlckVudGVyZWRUZXh0KHVzZXJFbnRlcmVkVGV4dCkge1xyXG4gICAgaWYgKHVzZXJFbnRlcmVkVGV4dCA9PT0gdW5kZWZpbmVkIHx8IHVzZXJFbnRlcmVkVGV4dCA9PT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxuICAgIGNvbnN0IHRleHRGaWx0ZXJlZCA9IHVzZXJFbnRlcmVkVGV4dFxyXG4gICAgICAucmVwbGFjZSgvWyYvXFxcXCMsKygpJH4lLidcIjoqPzw+e31dL2csIFwiIFwiKVxyXG4gICAgICAudHJpbSgpO1xyXG4gICAgZmlsdGVyZWRUZXh0TGVuZ3RoID0gdGV4dEZpbHRlcmVkLmxlbmd0aDtcclxuICAgIGlmIChtaW5DaGFyYWN0ZXJzVG9TZWFyY2ggPiAxKSB7XHJcbiAgICAgIGlmIChmaWx0ZXJlZFRleHRMZW5ndGggPCBtaW5DaGFyYWN0ZXJzVG9TZWFyY2gpIHtcclxuICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgY29uc3QgY2xlYW5Vc2VyRW50ZXJlZFRleHQgPSB0ZXh0Q2xlYW5GdW5jdGlvbih0ZXh0RmlsdGVyZWQpO1xyXG4gICAgY29uc3QgdGV4dEZpbHRlcmVkTG93ZXJDYXNlID0gY2xlYW5Vc2VyRW50ZXJlZFRleHQudG9Mb3dlckNhc2UoKS50cmltKCk7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXHJcbiAgICAgICAgXCJDaGFuZ2UgdXNlciBlbnRlcmVkIHRleHQgJ1wiICtcclxuICAgICAgICAgIHVzZXJFbnRlcmVkVGV4dCArXHJcbiAgICAgICAgICBcIicgaW50byAnXCIgK1xyXG4gICAgICAgICAgdGV4dEZpbHRlcmVkTG93ZXJDYXNlICtcclxuICAgICAgICAgIFwiJ1wiXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGV4dEZpbHRlcmVkTG93ZXJDYXNlO1xyXG4gIH1cclxuICBmdW5jdGlvbiBzZWFyY2goKSB7XHJcbiAgICBsZXQgdFN0YXJ0O1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIHRTdGFydCA9IHBlcmZvcm1hbmNlLm5vdygpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlNlYXJjaGluZyB1c2VyIGVudGVyZWQgdGV4dDogJ1wiICsgdGV4dCArIFwiJ1wiKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHRleHRGaWx0ZXJlZCA9IHByZXBhcmVVc2VyRW50ZXJlZFRleHQodGV4dCk7XHJcbiAgICBpZiAodGV4dEZpbHRlcmVkID09PSBcIlwiKSB7XHJcbiAgICAgIGZpbHRlcmVkTGlzdEl0ZW1zID0gbGlzdEl0ZW1zO1xyXG4gICAgICBjbG9zZUlmTWluQ2hhcnNUb1NlYXJjaFJlYWNoZWQoKTtcclxuICAgICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXHJcbiAgICAgICAgICBcIlVzZXIgZW50ZXJlZCB0ZXh0IGlzIGVtcHR5IHNldCB0aGUgbGlzdCBvZiBpdGVtcyB0byBhbGwgaXRlbXNcIlxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgc2VhcmNoV29yZHMgPSB0ZXh0RmlsdGVyZWQuc3BsaXQoXCIgXCIpO1xyXG4gICAgbGV0IHRlbXBmaWx0ZXJlZExpc3RJdGVtcyA9IGxpc3RJdGVtcy5maWx0ZXIobGlzdEl0ZW0gPT4ge1xyXG4gICAgICBjb25zdCBpdGVtS2V5d29yZHMgPSBsaXN0SXRlbS5rZXl3b3JkcztcclxuICAgICAgbGV0IG1hdGNoZXMgPSAwO1xyXG4gICAgICBzZWFyY2hXb3Jkcy5mb3JFYWNoKHNlYXJjaFdvcmQgPT4ge1xyXG4gICAgICAgIGlmIChpdGVtS2V5d29yZHMuaW5jbHVkZXMoc2VhcmNoV29yZCkpIHtcclxuICAgICAgICAgIG1hdGNoZXMrKztcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4gbWF0Y2hlcyA+PSBzZWFyY2hXb3Jkcy5sZW5ndGg7XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGhsZmlsdGVyID0gaGlnaGxpZ2h0RmlsdGVyKHRleHRGaWx0ZXJlZCwgW1wibGFiZWxcIl0pO1xyXG4gICAgY29uc3QgZmlsdGVyZWRMaXN0SXRlbXNIaWdobGlnaHRlZCA9IHRlbXBmaWx0ZXJlZExpc3RJdGVtcy5tYXAoaGxmaWx0ZXIpO1xyXG4gICAgZmlsdGVyZWRMaXN0SXRlbXMgPSBmaWx0ZXJlZExpc3RJdGVtc0hpZ2hsaWdodGVkO1xyXG4gICAgY2xvc2VJZk1pbkNoYXJzVG9TZWFyY2hSZWFjaGVkKCk7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc3QgdEVuZCA9IHBlcmZvcm1hbmNlLm5vdygpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICBcIlNlYXJjaCB0b29rIFwiICtcclxuICAgICAgICAgICh0RW5kIC0gdFN0YXJ0KSArXHJcbiAgICAgICAgICBcIiBtaWxsaXNlY29uZHMsIGZvdW5kIFwiICtcclxuICAgICAgICAgIGZpbHRlcmVkTGlzdEl0ZW1zLmxlbmd0aCArXHJcbiAgICAgICAgICBcIiBpdGVtc1wiXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vICQ6IHRleHQsIHNlYXJjaCgpO1xyXG4gIGZ1bmN0aW9uIHNlbGVjdExpc3RJdGVtKGxpc3RJdGVtKSB7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJzZWxlY3RMaXN0SXRlbVwiKTtcclxuICAgIH1cclxuICAgIGNvbnN0IG5ld1NlbGVjdGVkSXRlbSA9IGxpc3RJdGVtLml0ZW07XHJcbiAgICBpZiAoYmVmb3JlQ2hhbmdlKHNlbGVjdGVkSXRlbSwgbmV3U2VsZWN0ZWRJdGVtKSkge1xyXG4gICAgICBzZWxlY3RlZEl0ZW0gPSBuZXdTZWxlY3RlZEl0ZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHNlbGVjdEl0ZW0oKSB7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJzZWxlY3RJdGVtXCIpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgbGlzdEl0ZW0gPSBmaWx0ZXJlZExpc3RJdGVtc1toaWdobGlnaHRJbmRleF07XHJcbiAgICBzZWxlY3RMaXN0SXRlbShsaXN0SXRlbSk7XHJcbiAgICBjbG9zZSgpO1xyXG4gIH1cclxuICBmdW5jdGlvbiB1cCgpIHtcclxuICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICBjb25zb2xlLmxvZyhcInVwXCIpO1xyXG4gICAgfVxyXG4gICAgb3BlbigpO1xyXG4gICAgaWYgKGhpZ2hsaWdodEluZGV4ID4gMCkgaGlnaGxpZ2h0SW5kZXgtLTtcclxuICAgIGhpZ2hsaWdodCgpO1xyXG4gIH1cclxuICBmdW5jdGlvbiBkb3duKCkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiZG93blwiKTtcclxuICAgIH1cclxuICAgIG9wZW4oKTtcclxuICAgIGlmIChoaWdobGlnaHRJbmRleCA8IGZpbHRlcmVkTGlzdEl0ZW1zLmxlbmd0aCAtIDEpIGhpZ2hsaWdodEluZGV4Kys7XHJcbiAgICBoaWdobGlnaHQoKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gaGlnaGxpZ2h0KCkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiaGlnaGxpZ2h0XCIpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcXVlcnkgPSBcIi5zZWxlY3RlZFwiO1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiU2VhY2hpbmcgRE9NIGVsZW1lbnQ6IFwiICsgcXVlcnkgKyBcIiBpbiBcIiArIGxpc3QpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgZWwgPSBsaXN0LnF1ZXJ5U2VsZWN0b3IocXVlcnkpO1xyXG4gICAgaWYgKGVsKSB7XHJcbiAgICAgIGlmICh0eXBlb2YgZWwuc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlNjcm9sbGluZyBzZWxlY3RlZCBpdGVtIGludG8gdmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWwuc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZCgpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICAgICAgY29uc29sZS53YXJuKFxyXG4gICAgICAgICAgICBcIkNvdWxkIG5vdCBzY3JvbGwgc2VsZWN0ZWQgaXRlbSBpbnRvIHZpZXcsIHNjcm9sbEludG9WaWV3SWZOZWVkZWQgbm90IHN1cHBvcnRlZFwiXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKFwiU2VsZWN0ZWQgaXRlbSBub3QgZm91bmQgdG8gc2Nyb2xsIGludG8gdmlld1wiKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBvbkxpc3RJdGVtQ2xpY2sobGlzdEl0ZW0pIHtcclxuICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIm9uTGlzdEl0ZW1DbGlja1wiKTtcclxuICAgIH1cclxuICAgIHNlbGVjdExpc3RJdGVtKGxpc3RJdGVtKTtcclxuICAgIGNsb3NlKCk7XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIG9uRG9jdW1lbnRDbGljayhlKSB7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJvbkRvY3VtZW50Q2xpY2s6IFwiICsgSlNPTi5zdHJpbmdpZnkoZS50YXJnZXQpKTtcclxuICAgIH1cclxuICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLlwiICsgdW5pcXVlSWQpKSB7XHJcbiAgICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwib25Eb2N1bWVudENsaWNrIGluc2lkZVwiKTtcclxuICAgICAgfVxyXG4gICAgICAvLyByZXNldExpc3RUb0FsbEl0ZW1zQW5kT3BlbigpO1xyXG4gICAgICBoaWdobGlnaHQoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwib25Eb2N1bWVudENsaWNrIG91dHNpZGVcIik7XHJcbiAgICAgIH1cclxuICAgICAgY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gb25LZXlEb3duKGUpIHtcclxuICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIm9uS2V5RG93blwiKTtcclxuICAgIH1cclxuICAgIGxldCBrZXkgPSBlLmtleTtcclxuICAgIGlmIChrZXkgPT09IFwiVGFiXCIgJiYgZS5zaGlmdEtleSkga2V5ID0gXCJTaGlmdFRhYlwiO1xyXG4gICAgY29uc3QgZm5tYXAgPSB7XHJcbiAgICAgIFRhYjogb3BlbmVkID8gZG93bi5iaW5kKHRoaXMpIDogbnVsbCxcclxuICAgICAgU2hpZnRUYWI6IG9wZW5lZCA/IHVwLmJpbmQodGhpcykgOiBudWxsLFxyXG4gICAgICBBcnJvd0Rvd246IGRvd24uYmluZCh0aGlzKSxcclxuICAgICAgQXJyb3dVcDogdXAuYmluZCh0aGlzKSxcclxuICAgICAgRXNjYXBlOiBvbkVzYy5iaW5kKHRoaXMpXHJcbiAgICB9O1xyXG4gICAgY29uc3QgZm4gPSBmbm1hcFtrZXldO1xyXG4gICAgaWYgKHR5cGVvZiBmbiA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgZm4oZSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIG9uS2V5UHJlc3MoZSkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwib25LZXlQcmVzc1wiKTtcclxuICAgIH1cclxuICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgc2VsZWN0SXRlbSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBvbklucHV0KGUpIHtcclxuICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIm9uSW5wdXRcIik7XHJcbiAgICB9XHJcbiAgICB0ZXh0ID0gZS50YXJnZXQudmFsdWU7XHJcbiAgICBzZWFyY2goKTtcclxuICAgIGhpZ2hsaWdodEluZGV4ID0gMDtcclxuICAgIG9wZW4oKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gb25JbnB1dENsaWNrKCkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwib25JbnB1dENsaWNrXCIpO1xyXG4gICAgfVxyXG4gICAgcmVzZXRMaXN0VG9BbGxJdGVtc0FuZE9wZW4oKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gb25Fc2MoZSkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwib25Fc2NcIik7XHJcbiAgICB9XHJcbiAgICAvL2lmICh0ZXh0KSByZXR1cm4gY2xlYXIoKTtcclxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICBpZiAob3BlbmVkKSB7XHJcbiAgICAgIGlucHV0LmZvY3VzKCk7XHJcbiAgICAgIGNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIG9uRm9jdXMoKSB7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJvbkZvY3VzXCIpO1xyXG4gICAgfVxyXG4gICAgcmVzZXRMaXN0VG9BbGxJdGVtc0FuZE9wZW4oKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gcmVzZXRMaXN0VG9BbGxJdGVtc0FuZE9wZW4oKSB7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJyZXNldExpc3RUb0FsbEl0ZW1zQW5kT3BlblwiKTtcclxuICAgIH1cclxuICAgIGZpbHRlcmVkTGlzdEl0ZW1zID0gbGlzdEl0ZW1zO1xyXG4gICAgb3BlbigpO1xyXG4gICAgLy8gZmluZCBzZWxlY3RlZCBpdGVtXHJcbiAgICBpZiAoc2VsZWN0ZWRJdGVtKSB7XHJcbiAgICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICAgICAgXCJTZWFyY2hpbmcgY3VycmVudGx5IHNlbGVjdGVkIGl0ZW06IFwiICsgSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRJdGVtKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0SXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBsaXN0SXRlbSA9IGxpc3RJdGVtc1tpXTtcclxuICAgICAgICBpZiAoZGVidWcpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiSXRlbSBcIiArIGkgKyBcIjogXCIgKyBKU09OLnN0cmluZ2lmeShsaXN0SXRlbSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc2VsZWN0ZWRJdGVtID09IGxpc3RJdGVtLml0ZW0pIHtcclxuICAgICAgICAgIGhpZ2hsaWdodEluZGV4ID0gaTtcclxuICAgICAgICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAgICAgICBcIkZvdW5kIHNlbGVjdGVkIGl0ZW06IFwiICsgaSArIFwiOiBcIiArIEpTT04uc3RyaW5naWZ5KGxpc3RJdGVtKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaGlnaGxpZ2h0KCk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gb3BlbigpIHtcclxuICAgIGlmIChkZWJ1Zykge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIm9wZW5cIik7XHJcbiAgICB9XHJcbiAgICAvLyBjaGVjayBpZiB0aGUgc2VhcmNoIHRleHQgaGFzIG1vcmUgdGhhbiB0aGUgbWluIGNoYXJzIHJlcXVpcmVkXHJcbiAgICBpZiAoaXNNaW5DaGFyc1RvU2VhcmNoUmVhY2hlZCgpKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIG9wZW5lZCA9IHRydWU7XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGNsb3NlKCkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiY2xvc2VcIik7XHJcbiAgICB9XHJcbiAgICBvcGVuZWQgPSBmYWxzZTtcclxuICAgIGlmICghdGV4dCAmJiBzZWxlY3RGaXJzdElmRW1wdHkpIHtcclxuICAgICAgaGlnaGxpZ2h0RmlsdGVyID0gMDtcclxuICAgICAgc2VsZWN0SXRlbSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBpc01pbkNoYXJzVG9TZWFyY2hSZWFjaGVkKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgbWluQ2hhcmFjdGVyc1RvU2VhcmNoID4gMSAmJiBmaWx0ZXJlZFRleHRMZW5ndGggPCBtaW5DaGFyYWN0ZXJzVG9TZWFyY2hcclxuICAgICk7XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGNsb3NlSWZNaW5DaGFyc1RvU2VhcmNoUmVhY2hlZCgpIHtcclxuICAgIGlmIChpc01pbkNoYXJzVG9TZWFyY2hSZWFjaGVkKCkpIHtcclxuICAgICAgY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gY2xlYXIoKSB7XHJcbiAgICBpZiAoZGVidWcpIHtcclxuICAgICAgY29uc29sZS5sb2coXCJjbGVhclwiKTtcclxuICAgIH1cclxuICAgIHRleHQgPSBcIlwiO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiBpbnB1dC5mb2N1cygpKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gb25CbHVyKCkge1xyXG4gICAgaWYgKGRlYnVnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwib25CbHVyXCIpO1xyXG4gICAgfVxyXG4gICAgY2xvc2UoKTtcclxuICB9XHJcbiAgLy8gJ2l0ZW0gbnVtYmVyIG9uZScucmVwbGFjZSgvKGl0KSguKikobnUpKC4qKShvbmUpL2lnLCAnPGI+JDE8L2I+JDIgPGI+JDM8L2I+JDQgPGI+JDU8L2I+JylcclxuICBmdW5jdGlvbiBoaWdobGlnaHRGaWx0ZXIocSwgZmllbGRzKSB7XHJcbiAgICBjb25zdCBxcyA9IFwiKFwiICsgcS50cmltKCkucmVwbGFjZSgvXFxzL2csIFwiKSguKikoXCIpICsgXCIpXCI7XHJcbiAgICBjb25zdCByZWcgPSBuZXcgUmVnRXhwKHFzLCBcImlnXCIpO1xyXG4gICAgbGV0IG4gPSAxO1xyXG4gICAgY29uc3QgbGVuID0gcXMuc3BsaXQoXCIpKFwiKS5sZW5ndGggKyAxO1xyXG4gICAgbGV0IHJlcGwgPSBcIlwiO1xyXG4gICAgZm9yICg7IG4gPCBsZW47IG4rKykgcmVwbCArPSBuICUgMiA/IGA8YiBjbGFzcz1cInRleHQtcHJpbWFyeVwiPiQke259PC9iPmAgOiBgJCR7bn1gO1xyXG4gICAgcmV0dXJuIGkgPT4ge1xyXG4gICAgICBjb25zdCBuZXdJID0gT2JqZWN0LmFzc2lnbih7IGhpZ2hsaWdodGVkOiB7fSB9LCBpKTtcclxuICAgICAgaWYgKGZpZWxkcykge1xyXG4gICAgICAgIGZpZWxkcy5mb3JFYWNoKGYgPT4ge1xyXG4gICAgICAgICAgaWYgKCFuZXdJW2ZdKSByZXR1cm47XHJcbiAgICAgICAgICBuZXdJLmhpZ2hsaWdodGVkW2ZdID0gbmV3SVtmXS5yZXBsYWNlKHJlZywgcmVwbCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIG5ld0k7XHJcbiAgICB9O1xyXG4gIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGU+XHJcbiAgLmF1dG9jb21wbGV0ZSB7XHJcbiAgICBtaW4td2lkdGg6IDIwMHB4O1xyXG4gIH1cclxuICAuYXV0b2NvbXBsZXRlICoge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcbiAgLmF1dG9jb21wbGV0ZS1pbnB1dCB7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA1cHggMTFweDtcclxuICB9XHJcbiAgLmF1dG9jb21wbGV0ZS1saXN0IHtcclxuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTUgKiAoMXJlbSArIDEwcHgpICsgMTVweCk7XHJcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICB9XHJcbiAgLmF1dG9jb21wbGV0ZS1saXN0OmVtcHR5IHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIC5hdXRvY29tcGxldGUtbGlzdC1pdGVtLnNlbGVjdGVkIHtcclxuICAgIEBhcHBseSB0ZXh0LXByaW1hcnkgYmctb3JhbmdlLTEwMCBib3JkZXItbC0yIGJvcmRlci1yLTIgYm9yZGVyLXNvbGlkIGJvcmRlci1wcmltYXJ5O1xyXG4gIH1cclxuPC9zdHlsZT5cclxuXHJcbjxkaXYgY2xhc3M9XCJ7Y2xhc3NOYW1lfSBhdXRvY29tcGxldGUgc2VsZWN0IGlzLWZ1bGx3aWR0aCB7dW5pcXVlSWR9XCI+XHJcbiAgPGlucHV0XHJcbiAgICB0eXBlPVwidGV4dFwiXHJcbiAgICBjbGFzcz1cImlucHV0IGF1dG9jb21wbGV0ZS1pbnB1dCB3LWZ1bGwgdGV4dC1zbSByZWxhdGl2ZSBiZy10cmFuc3BhcmVudCBib3JkZXIgYm9yZGVyLXNvbGlkIHJvdW5kZWQtc20gdGV4dC1ncmF5LTcwMCBob3Zlcjp0ZXh0LWdyYXktNTAwIGZvY3VzOnRleHQtZ3JheS02MDAgZm9jdXM6Ym9yZGVyLXByaW1hcnkgZm9jdXM6b3V0bGluZS1ub25lIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTUwMCBlYXNlLWluLW91dCBob3ZlcjpwbGFjZWhvbGRlci1ncmF5LTMwMCB6LTUwIHB5LTNweCBweC0zXCJcclxuICAgIHtwbGFjZWhvbGRlcn1cclxuICAgIHtuYW1lfVxyXG4gICAge2Rpc2FibGVkfVxyXG4gICAge3RpdGxlfVxyXG4gICAgYmluZDp0aGlzPXtpbnB1dH1cclxuICAgIGJpbmQ6dmFsdWU9e3RleHR9XHJcbiAgICBvbjppbnB1dD17b25JbnB1dH1cclxuICAgIG9uOmZvY3VzPXtvbkZvY3VzfVxyXG4gICAgb246a2V5ZG93bj17b25LZXlEb3dufVxyXG4gICAgb246Y2xpY2s9e29uSW5wdXRDbGlja31cclxuICAgIG9uOmtleXByZXNzPXtvbktleVByZXNzfS8+XHJcbiAgPGRpdlxyXG4gICAgY2xhc3M9XCJhdXRvY29tcGxldGUtbGlzdCB7b3BlbmVkID8gJycgOiAnaGlkZGVuIGRpc3BsYXktbm9uZSd9IGlzLWZ1bGx3aWR0aCB3LWZ1bGwgcmVsYXRpdmUgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1zb2xpZCBib3JkZXItZ3JheS0zMDAgb3ZlcmZsb3cteS1hdXRvIHotMTAwIHRvcC0wIHB5LTNcIlxyXG4gICAgYmluZDp0aGlzPXtsaXN0fT5cclxuICAgIHsjaWYgZmlsdGVyZWRMaXN0SXRlbXMgJiYgZmlsdGVyZWRMaXN0SXRlbXMubGVuZ3RoID4gMH1cclxuICAgICAgeyNlYWNoIGZpbHRlcmVkTGlzdEl0ZW1zIGFzIGxpc3RJdGVtLCBpfVxyXG4gICAgICAgIHsjaWYgbWF4SXRlbXNUb1Nob3dJbkxpc3QgPD0gMCB8fCBpIDwgbWF4SXRlbXNUb1Nob3dJbkxpc3R9XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNsYXNzPVwiYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSB0ZXh0LXNtIHRleHQtZ3JheS03MDAgaG92ZXI6dGV4dC1wcmltYXJ5IGhvdmVyOmJnLW9yYW5nZS0xMDAgaG92ZXI6Ym9yZGVyLWwtMiBob3Zlcjpib3JkZXItci0yIGhvdmVyOmJvcmRlci1zb2xpZCBob3Zlcjpib3JkZXItcHJpbWFyeSBjdXJzb3ItcG9pbnRlciBsZWFkaW5nLW5vbmUgcHktMiBweC00IHtpID09PSBoaWdobGlnaHRJbmRleCA/ICdzZWxlY3RlZCcgOiAnJ31cIlxyXG4gICAgICAgICAgICBvbjpjbGljaz17KCkgPT4gb25MaXN0SXRlbUNsaWNrKGxpc3RJdGVtKX0+XHJcbiAgICAgICAgICAgIHsjaWYgbGlzdEl0ZW0uaGlnaGxpZ2h0ZWR9XHJcbiAgICAgICAgICAgICAge0BodG1sIGxpc3RJdGVtLmhpZ2hsaWdodGVkLmxhYmVsfVxyXG4gICAgICAgICAgICB7OmVsc2V9XHJcbiAgICAgICAgICAgICAge0BodG1sIGxpc3RJdGVtLmxhYmVsfVxyXG4gICAgICAgICAgICB7L2lmfVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgey9pZn1cclxuICAgICAgey9lYWNofVxyXG5cclxuICAgICAgeyNpZiBtYXhJdGVtc1RvU2hvd0luTGlzdCA+IDAgJiYgZmlsdGVyZWRMaXN0SXRlbXMubGVuZ3RoID4gbWF4SXRlbXNUb1Nob3dJbkxpc3R9XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImF1dG9jb21wbGV0ZS1saXN0LWl0ZW0tbm8tcmVzdWx0cyB0ZXh0LXNtIHRleHQtZ3JheS01MDAgYmctZ3JheS0xMDAgbGVhZGluZy1ub25lIHB5LTIgcHgtNFwiPlxyXG4gICAgICAgICAgLi4ue2ZpbHRlcmVkTGlzdEl0ZW1zLmxlbmd0aCAtIG1heEl0ZW1zVG9TaG93SW5MaXN0fSBoYXNpbCB0aWRhayBkaXRhbXBpbGthblxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICB7L2lmfVxyXG4gICAgezplbHNlIGlmIG5vUmVzdWx0c1RleHR9XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJhdXRvY29tcGxldGUtbGlzdC1pdGVtLW5vLXJlc3VsdHMgdGV4dC1zbSB0ZXh0LWdyYXktNTAwIGJnLWdyYXktMTAwIGxlYWRpbmctbm9uZSBweS0yIHB4LTRcIj57bm9SZXN1bHRzVGV4dH08L2Rpdj5cclxuICAgIHsvaWZ9XHJcbiAgPC9kaXY+XHJcbjwvZGl2PlxyXG5cclxuPHN2ZWx0ZTp3aW5kb3cgb246Y2xpY2s9e29uRG9jdW1lbnRDbGlja30gLz4iLCI8c2NyaXB0PlxyXG4gICAgaW1wb3J0IHsgZmx5IH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nXHJcblx0aW1wb3J0IHsgY2FydHMgfSBmcm9tICcuL2NhcnQuanMnXHJcbiAgICBpbXBvcnQgSXRlbSBmcm9tICcuL0NoZWNrb3V0UHJvZHVjdC5zdmVsdGUnXHJcbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJ1xyXG4gICAgaW1wb3J0IEF1dG9Db21wbGV0ZSBmcm9tICcuL0F1dG9Db21wbGV0ZS5zdmVsdGUnXHJcblxyXG4gICAgZXhwb3J0IGxldCBkaXN0cmljdHM7XHJcbiAgICBjb25zb2xlLmxvZyhkaXN0cmljdHMpXHJcbiAgICBsZXQgc2VsZWN0ZWREaXN0cmljdDtcclxuXHJcbiAgICAkOiBjb25zb2xlLmxvZygndXBkYXRlIGtlYzonICsgc2VsZWN0ZWREaXN0cmljdClcclxuXHJcbiAgICBpZiAoc2VsZWN0ZWREaXN0cmljdCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3VwZGF0ZSBrZWM6JyArIHNlbGVjdGVkRGlzdHJpY3QpXHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGtlY2FtYXRhbjtcclxuXHJcbiAgICAkOiBrZWNhbWF0YW4gPSAoc2VsZWN0ZWREaXN0cmljdCAhPT0gdW5kZWZpbmVkICkgPyBzZWxlY3RlZERpc3RyaWN0LmlkIDogJ2JlbHVtIGFkYSdcclxuXHJcbiAgICBjb25zb2xlLmxvZyhrZWNhbWF0YW4pXHJcblxyXG4gICAgb25Nb3VudCgoKSA9PiB7XHJcbiAgICAgICAgY2FydHMudXNlTG9jYWxTdG9yYWdlKCk7XHJcbiAgICB9KVxyXG5cclxuICAgIGxldCBpdGVtSW5DYXJ0ID0gMDtcclxuICAgIGxldCB0b3RhbFByaWNlID0gMDtcclxuICAgIGxldCB2aXNpYmxlID0gZmFsc2U7XHJcbiAgICBcclxuICAgIGNvbnN0IGNsZWFyQ2FydCA9ICgpID0+IHtcclxuICAgICAgICAkY2FydHMgPSBbXVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGxvY2FsUHJpY2UoYW1vdW50KSB7XHJcbiAgICAgICAgcmV0dXJuIGFtb3VudC50b0xvY2FsZVN0cmluZygnaWQtSUQnLCB7XHJcbiAgICAgICAgICAgIHN0eWxlOiAnY3VycmVuY3knLFxyXG4gICAgICAgICAgICBjdXJyZW5jeTogJ0lEUicsXHJcbiAgICAgICAgICAgIG1pbmltdW1GcmFjdGlvbkRpZ2l0czogMCxcclxuICAgICAgICAgICAgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiAwXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gdG9nZ2xlKCkge1xyXG5cdFx0dmlzaWJsZSA9ICF2aXNpYmxlO1xyXG5cdH1cclxuXHJcbiAgICAkOntcclxuICAgICAgICBsZXQgcXR5ID0gMFxyXG4gICAgICAgIGxldCBwcmljZSA9IDBcclxuICAgICAgICBmb3IobGV0IGl0ZW0gb2YgJGNhcnRzKXtcclxuICAgICAgICAgICAgcXR5ICs9IGl0ZW0ucXVhbnRpdHlcclxuICAgICAgICAgICAgcHJpY2UgKz0gaXRlbS5wcmljZSAqIGl0ZW0ucXVhbnRpdHlcclxuICAgICAgICB9XHJcbiAgICAgICAgaXRlbUluQ2FydCA9IHF0eVxyXG4gICAgICAgIHRvdGFsUHJpY2UgPSBwcmljZVxyXG4gICAgfVxyXG48L3NjcmlwdD5cclxuXHJcblxyXG5cclxuPHNlY3Rpb24gY2xhc3M9XCJibG9ja19fY2hlY2tvdXQtb3JkZXIgYmctZ3JleSBwdC04XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY2hlY2tvdXQtYm94IGNvbnRhaW5lciB3LWZ1bGwgbWF4LXctc2NyZWVuLXhsIG14LWF1dG8gcHgtMyBsZzpweC0xMiBwYi00XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTEyIGdhcC04XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc3Bhbi04IGJnLXdoaXRlXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHRleHQtZ3JheS03MDAgcHktMiBweC0zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJtYi0wXCI+Q2hlY2tvdXQgUHJvZHVrPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjYXJ0X19pdGVtLWJ0biBmbGV4IGl0ZW1zLWNlbnRlciB0ZXh0LXhzIHVwcGVyY2FzZSB0ZXh0LWdyYXktNTAwIGhvdmVyOnRleHQtcHJpbWFyeSBmb2N1czpvdXRsaW5lLW5vbmVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbjpjbGljaz17Y2xlYXJDYXJ0fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLXByZWZpeD1cImZhclwiIGRhdGEtaWNvbj1cInRyYXNoLWFsdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA0NDggNTEyXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwidHJhc2gtYWx0X3N2Z19fc3ZnLWlubGluZS0tZmEgdHJhc2gtYWx0X3N2Z19fZmEtdHJhc2gtYWx0IHRyYXNoLWFsdF9zdmdfX2ZhLXctMTQgdHJhc2gtYWx0X3N2Z19fZmEtMnggdGV4dC1yZWQtNTAwIG14LWF1dG9cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxNHB4XCIgaGVpZ2h0PVwiMTRweFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbD1cImN1cnJlbnRDb2xvclwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1cIk0yNjggNDE2aDI0YTEyIDEyIDAgMCAwIDEyLTEyVjE4OGExMiAxMiAwIDAgMC0xMi0xMmgtMjRhMTIgMTIgMCAwIDAtMTIgMTJ2MjE2YTEyIDEyIDAgMCAwIDEyIDEyek00MzIgODBoLTgyLjQxbC0zNC01Ni43QTQ4IDQ4IDAgMCAwIDI3NC40MSAwSDE3My41OWE0OCA0OCAwIDAgMC00MS4xNiAyMy4zTDk4LjQxIDgwSDE2QTE2IDE2IDAgMCAwIDAgOTZ2MTZhMTYgMTYgMCAwIDAgMTYgMTZoMTZ2MzM2YTQ4IDQ4IDAgMCAwIDQ4IDQ4aDI4OGE0OCA0OCAwIDAgMCA0OC00OFYxMjhoMTZhMTYgMTYgMCAwIDAgMTYtMTZWOTZhMTYgMTYgMCAwIDAtMTYtMTZ6TTE3MS44NCA1MC45MUE2IDYgMCAwIDEgMTc3IDQ4aDk0YTYgNiAwIDAgMSA1LjE1IDIuOTFMMjkzLjYxIDgwSDE1NC4zOXpNMzY4IDQ2NEg4MFYxMjhoMjg4em0tMjEyLTQ4aDI0YTEyIDEyIDAgMCAwIDEyLTEyVjE4OGExMiAxMiAwIDAgMC0xMi0xMmgtMjRhMTIgMTIgMCAwIDAtMTIgMTJ2MjE2YTEyIDEyIDAgMCAwIDEyIDEyelwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wYXRoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtbC0zXCI+Q2xlYXIgQ2FydDwvc3Bhbj48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJnLWdyZXkgcHQtNFwiPjwvZGl2PlxyXG5cclxuICAgICAgICAgICAgICAgIHsjZWFjaCAkY2FydHMgYXMgcHJvZHVjdH1cclxuICAgICAgICAgICAgICAgIDxJdGVtIHByb2R1Y3Q9e3Byb2R1Y3R9IHByaWNlPXtsb2NhbFByaWNlKHByb2R1Y3QucHJpY2UgKiBwcm9kdWN0LnF1YW50aXR5KX0gLz5cclxuICAgICAgICAgICAgICAgIHsvZWFjaH1cclxuXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmctZ3JleSBwdC04XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHktNCBweC00XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGZvcm0gYWN0aW9uPVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGVja291dF9fZm9ybSBmb3JtLWFkZHJlc3NcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoZWFkZXIgY2xhc3M9XCJjaGVja291dF9fZm9ybS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LWdyYXktNzAwXCI+RGV0YWlsIEFsYW1hdCBQZW5naXJpbWFuPC9oMz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaGVhZGVyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTIgZ2FwLTZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1hZGRyZXNzX19pdGVtIGNvbC1zcGFuLTEgbWItMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJibG9jayB0ZXh0LWdyYXktNzAwIG1iLTJcIiBmb3I9XCJuYW1lXCI+TmFtYSBMZW5na2FwPHNwYW5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInRleHQtcmVkLTUwMFwiPio8L3NwYW4+PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInctZnVsbCB0ZXh0LXNtIGJvcmRlciBib3JkZXItc29saWQgcm91bmRlZC1zbSBmb2N1czpvdXRsaW5lLW5vbmUgcHktM3B4IHB4LTNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIiBpZD1cIm5hbWVcIiBuYW1lPVwiTmFtZVwiIHZhbHVlPVwiXCIgcGxhY2Vob2xkZXI9XCJOYW1hIGxlbmdrYXAgYW5kYVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWFkZHJlc3NfX2l0ZW0gY29sLXNwYW4tMSBtYi0yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImJsb2NrIHRleHQtZ3JheS03MDAgbWItMlwiIGZvcj1cIm5hbWVcIj5FbWFpbCAoT3BzaW9uYWwpPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInctZnVsbCB0ZXh0LXNtIGJvcmRlciBib3JkZXItc29saWQgcm91bmRlZC1zbSBmb2N1czpvdXRsaW5lLW5vbmUgcHktM3B4IHB4LTNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIiBpZD1cImVtYWlsXCIgbmFtZT1cImVtYWlsXCIgdmFsdWU9XCJcIiBwbGFjZWhvbGRlcj1cIkVtYWlsIGFuZGFcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJncmlkIGdyaWQtY29scy0yIGdhcC02XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tYWRkcmVzc19faXRlbSBtYi0yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImJsb2NrIHRleHQtZ3JheS03MDAgbWItMlwiIGZvcj1cIm5hbWVcIj5Oby4gSFAvV0E8c3BhblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwidGV4dC1yZWQtNTAwXCI+Kjwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwidy1mdWxsIHRleHQtc20gYm9yZGVyIGJvcmRlci1zb2xpZCByb3VuZGVkLXNtIGZvY3VzOm91dGxpbmUtbm9uZSBweS0zcHggcHgtM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiIGlkPVwicGhvbmVcIiBuYW1lPVwiSFBcIiB2YWx1ZT1cIlwiIHBsYWNlaG9sZGVyPVwiTm8gSFAvV2hhdHNhcHAgYW5kYVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWFkZHJlc3NfX2l0ZW0gcmVsYXRpdmUgY29sLXNwYW4tMSBtYi0yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImJsb2NrIHRleHQtZ3JheS03MDAgbWItMlwiIGZvcj1cIm5hbWVcIj5Lb3RhIGF0YXUgS2VjYW1hdGFuPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEF1dG9Db21wbGV0ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM9e2Rpc3RyaWN0c31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTWFzdWtrYW4gbmFtYSBrZWNhbWF0YW5cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmluZDpzZWxlY3RlZEl0ZW09e3NlbGVjdGVkRGlzdHJpY3R9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbEZpZWxkTmFtZT1cIm5hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluQ2hhcmFjdGVyc1RvU2VhcmNoPVwiM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhJdGVtc1RvU2hvd0luTGlzdD1cIjEwXCIvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tYWRkcmVzc19faXRlbSBtYi0yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiYmxvY2sgdGV4dC1ncmF5LTcwMCBtYi0yXCIgZm9yPVwibmFtZVwiPkFsYW1hdCBMZW5na2FwPHNwYW5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwidGV4dC1yZWQtNTAwXCI+Kjwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInctZnVsbCB0ZXh0LXNtIGJvcmRlciBib3JkZXItc29saWQgcm91bmRlZC1zbSBmb2N1czpvdXRsaW5lLW5vbmUgcHktM3B4IHB4LTNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3dzPVwiM1wiIGlkPVwiYWxhbWF0XCIgbmFtZT1cIkFsYW1hdFwiIHZhbHVlPVwiXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJNYXN1a2thbiBhbGFtYXQgbGVuZ2thcCArIGtvZGUgUE9TIGFuZGFcIiByZXF1aXJlZD1cIlwiPjwvdGV4dGFyZWE+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgeyNpZiBzZWxlY3RlZERpc3RyaWN0ICE9PSB1bmRlZmluZWR9XHJcbiAgICAgICAgICAgICAgICA8cD57c2VsZWN0ZWREaXN0cmljdC5pZH0ge3NlbGVjdGVkRGlzdHJpY3QubmFtZX08L3A+XHJcbiAgICAgICAgICAgICAgICB7L2lmfVxyXG5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiZy1ncmV5IHB0LThcIj48L2Rpdj5cclxuXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1hZGRyZXNzX19pdGVtIHB5LTQgcHgtNCBtYi00XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIHRleHQtZ3JheS02MDAgYm9yZGVyLWIgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmV5IHB5LTMgbWItNFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtcHJlZml4PVwiZmFsXCIgZGF0YS1pY29uPVwic2hpcHBpbmctZmFzdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDY0MCA1MTJcIiB3aWR0aD1cIjM2XCIgaGVpZ2h0PVwiMzZcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJzaGlwcGluZy1mYXN0X3N2Z19fc3ZnLWlubGluZS0tZmEgc2hpcHBpbmctZmFzdF9zdmdfX2ZhLXNoaXBwaW5nLWZhc3Qgc2hpcHBpbmctZmFzdF9zdmdfX2ZhLXctMjAgc2hpcHBpbmctZmFzdF9zdmdfX2ZhLTV4IHctNiBoLTYgaW5saW5lLWJsb2NrIGZpbGwtY3VycmVudCBtci0yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPVwiTTI4MCAxOTJjNC40IDAgOC0zLjYgOC04di0xNmMwLTQuNC0zLjYtOC04LThINDBjLTQuNCAwLTggMy42LTggOHYxNmMwIDQuNCAzLjYgOCA4IDhoMjQwem0zNTIgMTkyaC0yNFYyNzUuOWMwLTE2LjgtNi44LTMzLjMtMTguOC00NS4ybC04My45LTgzLjljLTExLjgtMTItMjguMy0xOC44LTQ1LjItMTguOEg0MTZWNzguNmMwLTI1LjctMjIuMi00Ni42LTQ5LjQtNDYuNkgxMTMuNEM4Ni4yIDMyIDY0IDUyLjkgNjQgNzguNlY5Nkg4Yy00LjQgMC04IDMuNi04IDh2MTZjMCA0LjQgMy42IDggOCA4aDI0MGM0LjQgMCA4LTMuNiA4LTh2LTE2YzAtNC40LTMuNi04LTgtOEg5NlY3OC42YzAtOC4xIDcuOC0xNC42IDE3LjQtMTQuNmgyNTMuMmM5LjYgMCAxNy40IDYuNSAxNy40IDE0LjZWMzg0SDIwNy42QzE5MyAzNjQuNyAxNzAgMzUyIDE0NCAzNTJjLTE4LjEgMC0zNC42IDYuMi00OCAxNi40VjI4OEg2NHYxNDRjMCA0NC4yIDM1LjggODAgODAgODBzODAtMzUuOCA4MC04MGMwLTUuNS0uNi0xMC44LTEuNi0xNmgxOTUuMmMtMS4xIDUuMi0xLjYgMTAuNS0xLjYgMTYgMCA0NC4yIDM1LjggODAgODAgODBzODAtMzUuOCA4MC04MGMwLTUuNS0uNi0xMC44LTEuNi0xNkg2MzJjNC40IDAgOC0zLjYgOC04di0xNmMwLTQuNC0zLjYtOC04LTh6bS00ODggOTZjLTI2LjUgMC00OC0yMS41LTQ4LTQ4czIxLjUtNDggNDgtNDggNDggMjEuNSA0OCA0OC0yMS41IDQ4LTQ4IDQ4em0yNzItMzIwaDQ0LjFjOC40IDAgMTYuNyAzLjQgMjIuNiA5LjRsODMuOSA4My45Yy44LjggMS4xIDEuOSAxLjggMi44SDQxNlYxNjB6bTgwIDMyMGMtMjYuNSAwLTQ4LTIxLjUtNDgtNDhzMjEuNS00OCA0OC00OCA0OCAyMS41IDQ4IDQ4LTIxLjUgNDgtNDggNDh6bTgwLTk2aC0xNi40QzU0NSAzNjQuNyA1MjIgMzUyIDQ5NiAzNTJzLTQ5IDEyLjctNjMuNiAzMkg0MTZ2LTk2aDE2MHY5NnpNMjU2IDI0OHYtMTZjMC00LjQtMy42LTgtOC04SDhjLTQuNCAwLTggMy42LTggOHYxNmMwIDQuNCAzLjYgOCA4IDhoMjQwYzQuNCAwIDgtMy42IDgtOHpcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNpbGFoa2FuIHBpbGloIGRhbiBrbGlrIGt1cmlyIHBlbmdpcmltYW4hPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc3Bhbi00IGJnLXdoaXRlIHB5LTQgcHgtNFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2luZm9cIj5cclxuICAgICAgICAgICAgICAgICAgICA8aGVhZGVyIGNsYXNzPVwiY2hlY2tvdXQtZm9ybV9faGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX3RpdGxlIHRleHQtZ3JheS03MDBcIj5SaW5na2FzYW4gUGVzYW5hbjwvaDM+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2JveCBjaGVja291dC1mb3JtX19mb290ZXIgZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHRleHQtc20gdGV4dC1ncmF5LTcwMCBib3JkZXItdCBib3JkZXItZGFzaGVkIHB0LTIgbWItM1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hlY2tvdXQtZm9ybS0tbGVmdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJtYi0wXCI+U3VidG90YWwgPHNwYW4+e2xvY2FsUHJpY2UodG90YWxQcmljZSl9PC9zcGFuPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGVja291dC1mb3JtLS1yaWdodFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjaGVja291dC1mb3JtX19zdWJ0b3RhbFwiPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2JveCBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LWdyYXktNzAwIG1iLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm0tLWxlZnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibWItMFwiPkJlcmF0IFRvdGFsPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm0tLXJpZ2h0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX3dlaWdodC10b3RhbFwiPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2JveCBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LWdyYXktNzAwIG1iLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm0tLWxlZnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibWItMFwiPkJpYXlhIFBlbmdpcmltYW48L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hlY2tvdXQtZm9ybS0tcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY2hlY2tvdXQtZm9ybV9fY29zdC1jb3VyaWVyXCI+UGlsaWgga3VyaXIgZHVsdTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2JveCBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LWdyYXktNzAwIG1iLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtZ3JvdyB3LTMvNSBtci00XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm5leHQtaW5wdXRcIj48aW5wdXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ3LWZ1bGwgdGV4dC1zbSBib3JkZXIgYm9yZGVyLXNvbGlkIHJvdW5kZWQtc20gZm9jdXM6b3V0bGluZS1ub25lIHB5LTNweCBweC0zXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIiBpZD1cImF1dG9tYXRpb24tdm91Y2hlci1pbnB1dFwiIHBsYWNlaG9sZGVyPVwiTWFzdWtrYW4gS29kZSBWb3VjaGVyXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJcIiBoZWlnaHQ9XCIxMDAlXCI+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtbm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInRleHQtd2hpdGUgbGVhZGluZy1ub25lIGZsZXggYmctdGVhbC01MDAgaG92ZXI6YmctdGVhbC00MDAgaXRlbXMtY2VudGVyIGZvY3VzOm91dGxpbmUtbm9uZSByb3VuZGVkIHB5LTIgcHgtNFwiPkdVTkFLQU48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2JveCBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LWdyYXktNzAwIGZvbnQtbWVkaXVtIG1iLTNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm0tLWxlZnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz1cIm1iLTBcIj5Ub3RhbCBCYXlhcjwvaDQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hlY2tvdXQtZm9ybS0tcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1wcmltYXJ5XCI+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZWNrb3V0LWZvcm1fX2J1dHRvbiBwdC04XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjaGVja291dC1mb3JtX19idG4gdy1mdWxsIHRleHQtd2hpdGUgdGV4dC1jZW50ZXIgbGVhZGluZy1ub25lIHVwcGVyY2FzZSBmbGV4IGJnLWdyZWVuLTUwMCBob3ZlcjpiZy1ncmVlbi00MDAgaXRlbXMtY2VudGVyIGZvY3VzOm91dGxpbmUtbm9uZSByb3VuZGVkIHB5LTIgcHgtNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm10YXJnZXQ9XCJfYmxhbmtcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UGVzYW4gU2VrYXJhbmc8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9zZWN0aW9uPiIsIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxyXG4gIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKHBhZ2UsIHNlc3Npb24pIHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZmV0Y2goJ2FwaS9kZXN0aW5hdGlvbi5qc29uJyk7XHJcbiAgICBjb25zdCBkaXN0cmljdHMgPSBhd2FpdCByZXMuanNvbigpO1xyXG5cclxuICAgIHJldHVybiB7IGRpc3RyaWN0cyB9O1xyXG4gIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c2NyaXB0PlxyXG5cdGltcG9ydCBDaGVja291dCBmcm9tICcuLi9jb21wb25lbnRzL0NoZWNrb3V0LnN2ZWx0ZSc7XHJcblxyXG5cdGV4cG9ydCBsZXQgZGlzdHJpY3RzO1xyXG4gICAgY29uc29sZS5sb2coZGlzdHJpY3RzKVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdmVsdGU6aGVhZD5cclxuXHQ8dGl0bGU+Q2hlY2tvdXQ8L3RpdGxlPlxyXG48L3N2ZWx0ZTpoZWFkPlxyXG5cclxuPENoZWNrb3V0IGRpc3RyaWN0cz17ZGlzdHJpY3RzfS8+XHJcblxyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OzRCQWlDa0csR0FBTyxJQUFDLElBQUk7Ozs0QkFBUSxHQUFPLElBQUMsSUFBSTs7Ozs7Ozs7Ozs7NEJBTTFELEdBQU8sSUFBQyxRQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFNUixHQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJDQUFMLEdBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvREFkbEUsR0FBTyxJQUFDLElBQUk7OEZBQWtELEdBQU8sSUFBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lEQU9pQixHQUFXO2lEQUloRyxHQUFXO21EQU9uQixHQUFhOzs7OytFQWxCWixHQUFPLElBQUMsSUFBSTs7Ozt1SEFBa0QsR0FBTyxJQUFDLEtBQUs7Ozs7cUVBRUksR0FBTyxJQUFDLElBQUk7cUVBQVEsR0FBTyxJQUFDLElBQUk7Ozs7OztxRUFNMUQsR0FBTyxJQUFDLFFBQVE7d0RBTVIsR0FBSzs7Ozs7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
